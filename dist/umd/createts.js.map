{"version":3,"sources":["webpack://createts/webpack/universalModuleDefinition","webpack://createts/webpack/bootstrap","webpack://createts/./src/Runtime.ts","webpack://createts/./src/Ticker.ts","webpack://createts/./src/animation/AlgorithmFactory.ts","webpack://createts/./src/animation/Animation.ts","webpack://createts/./src/animation/AnimationFactory.ts","webpack://createts/./src/base/BaseValue.ts","webpack://createts/./src/base/Color.ts","webpack://createts/./src/base/Event.ts","webpack://createts/./src/base/Matrix2D.ts","webpack://createts/./src/base/Point.ts","webpack://createts/./src/base/Rect.ts","webpack://createts/./src/base/RoundRect.ts","webpack://createts/./src/components/Apng.ts","webpack://createts/./src/components/Container.ts","webpack://createts/./src/components/Img.ts","webpack://createts/./src/components/Sprite.ts","webpack://createts/./src/components/Stage.ts","webpack://createts/./src/components/Text.ts","webpack://createts/./src/components/TouchItem.ts","webpack://createts/./src/components/XObject.ts","webpack://createts/./src/index.ts","webpack://createts/./src/parser/ApngParser.ts","webpack://createts/./src/parser/CSSTokenizer.ts","webpack://createts/./src/parser/FunctionParser.ts","webpack://createts/./src/parser/HtmlParser.ts","webpack://createts/./src/resource/Loader.ts","webpack://createts/./src/resource/ResourceRegistry.ts","webpack://createts/./src/style/Background.ts","webpack://createts/./src/style/Border.ts","webpack://createts/./src/style/Font.ts","webpack://createts/./src/style/LineHeight.ts","webpack://createts/./src/style/Shadow.ts","webpack://createts/./src/style/Style.ts","webpack://createts/./src/utils/CRC32.ts","webpack://createts/./src/utils/Delay.ts","webpack://createts/./src/utils/DrawUtils.ts","webpack://createts/./src/utils/EnumUtils.ts","webpack://createts/./src/utils/LayoutUtils.ts","webpack://createts/./src/utils/StringUtils.ts"],"names":[],"mappings":"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","file":"createts.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"createts\"] = factory();\n\telse\n\t\troot[\"createts\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Stage } from './components/Stage';\nimport { TouchItem } from './components/TouchItem';\nimport { Font } from './style/Font';\n\ntype AnimationFrameListener = (time: number) => void;\n\ninterface IRuntime {\n  newCanvas(): HTMLCanvasElement;\n  releaseCanvas(canvas: HTMLCanvasElement): void;\n  requestAnimationFrame(listener: AnimationFrameListener): any;\n  measureTextWidth(text: string, font: Font): number;\n  enableEvents(stage: Stage): void;\n}\n\nclass WebRuntime implements IRuntime {\n  private globalCanvas?: HTMLCanvasElement;\n\n  public newCanvas(): HTMLCanvasElement {\n    return document.createElement('canvas');\n  }\n\n  public releaseCanvas(canvas: HTMLCanvasElement) {\n    return;\n  }\n\n  public enableEvents(stage: Stage) {\n    stage.canvas.addEventListener('mousedown', (e: any) => {\n      this.handleMouseEvent('mousedown', stage, e);\n    });\n    stage.canvas.addEventListener('mousemove', (e: any) => {\n      this.handleMouseEvent('mousemove', stage, e);\n    });\n    stage.canvas.addEventListener('pressmove', (e: any) => {\n      this.handleMouseEvent('mousemove', stage, e);\n    });\n    stage.canvas.addEventListener('mouseup', (e: any) => {\n      this.handleMouseEvent('mouseup', stage, e);\n    });\n    stage.canvas.addEventListener('mouseenter', (e: any) => {\n      this.handleMouseEvent('mouseenter', stage, e);\n    });\n    stage.canvas.addEventListener('mouseleave', (e: any) => {\n      this.handleMouseEvent('mouseleave', stage, e);\n    });\n    stage.canvas.addEventListener('touchstart', (e: any) => {\n      this.handleTouchEvent('touchstart', stage, e);\n    });\n    stage.canvas.addEventListener('touchend', (e: any) => {\n      this.handleTouchEvent('touchend', stage, e);\n    });\n    stage.canvas.addEventListener('touchmove', (e: any) => {\n      this.handleTouchEvent('touchmove', stage, e);\n    });\n  }\n\n  public requestAnimationFrame(listener: AnimationFrameListener) {\n    window.requestAnimationFrame(listener);\n  }\n\n  public measureTextWidth(text: string, font: Font): number {\n    if (text.length === 0) {\n      return 0;\n    }\n    const canvas = this.getGlobalCanvas();\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      ctx.save();\n      ctx.font = font.toString();\n      const width = ctx.measureText(text).width;\n      ctx.restore();\n      return width;\n    } else {\n      return 0;\n    }\n  }\n\n  private getGlobalCanvas(): HTMLCanvasElement {\n    if (!this.globalCanvas) {\n      this.globalCanvas = this.newCanvas();\n    }\n    return this.globalCanvas;\n  }\n\n  private handleMouseEvent(type: string, stage: Stage, e: any) {\n    const scaleX = stage.canvas.width / stage.canvas.clientWidth;\n    const scaleY = stage.canvas.height / stage.canvas.clientHeight;\n    // Translate to multiple touch event\n    const x = e.offsetX * scaleX;\n    const y = e.offsetY * scaleY;\n    stage.handleMouseEvent(type, [new TouchItem(0, undefined, x, y, 0, 0)], e);\n  }\n\n  private handleTouchEvent(type: string, stage: Stage, e: any) {\n    const scaleX = stage.canvas.width / stage.canvas.clientWidth;\n    const scaleY = stage.canvas.height / stage.canvas.clientHeight;\n    const touches = [];\n    for (const touch of e.touches) {\n      touches.push(\n        new TouchItem(\n          touch.identifier,\n          undefined,\n          touch.clientX * scaleX,\n          touch.clientY * scaleY,\n          0,\n          0\n        )\n      );\n    }\n    stage.handleMouseEvent(type, touches, e);\n  }\n}\n\nexport class Runtime {\n  public static get(): IRuntime {\n    return this.runtime;\n  }\n  private static runtime = new WebRuntime();\n}\n","import { Event, EventDispatcher } from './base/Event';\nimport { Runtime } from './Runtime';\n\nexport class Ticker extends EventDispatcher<Event> {\n  private duration: number = 1000 / 60;\n  private lastTickTime: number;\n  private stopped: boolean = true;\n\n  constructor(fps: number = 60) {\n    super();\n    if (fps <= 0) {\n      console.warn('invalid fps:' + fps + ', reset to 60');\n      fps = 60;\n    }\n    this.setFps(fps);\n    this.lastTickTime = 0;\n    this.start();\n  }\n\n  public start() {\n    if (this.stopped) {\n      this.stopped = false;\n      Runtime.get().requestAnimationFrame(this.onAnimationFrame.bind(this));\n    }\n  }\n\n  public setFps(fps: number) {\n    this.duration = 1000 / fps;\n  }\n\n  public stop() {\n    this.stopped = true;\n  }\n\n  private onAnimationFrame(time: number) {\n    if (this.stopped) {\n      return;\n    }\n    if (time - this.lastTickTime >= this.duration) {\n      this.lastTickTime = time;\n      this.dispatchEvent(new Event('tick'));\n    }\n    Runtime.get().requestAnimationFrame(this.onAnimationFrame.bind(this));\n  }\n}\n","/**\n * The AlgorithmFactory provides a collection of easing functions for use with TweenJS. It does not use the standard 4 param\n * easing signature. Instead it uses a single param which indicates the current linear ratio (0 to 1) of the tween.\n *\n * Most methods on Ease can be passed directly as easing functions:\n *\n *      Tween.get(target).to({x:100}, 500, Ease.linear);\n *\n * However, methods beginning with \"get\" will return an easing function based on parameter values:\n *\n *      Tween.get(target).to({y:200}, 500, Ease.getPowIn(2.2));\n *\n * Please see the <a href=\"http://www.createjs.com/Demos/TweenJS/Tween_SparkTable\">spark table demo</a> for an\n * overview of the different ease types on <a href=\"http://tweenjs.com\">TweenJS.com</a>.\n *\n * <em>Equations derived from work by Robert Penner.</em>\n */\nexport interface IAlgorithm {\n  calclate(percent: number): number;\n}\n\nexport class Linear implements IAlgorithm {\n  public calclate(percent: number): number {\n    return percent;\n  }\n}\n\nexport class PowIn implements IAlgorithm {\n  constructor(private pow: number) {}\n  public calclate(percent: number): number {\n    return Math.pow(percent, this.pow);\n  }\n}\n\nexport class PowOut implements IAlgorithm {\n  constructor(private pow: number) {}\n  public calclate(percent: number): number {\n    return 1 - Math.pow(1 - percent, this.pow);\n  }\n}\n\nexport class PowInOut implements IAlgorithm {\n  constructor(private pow: number) {}\n  public calclate(percent: number): number {\n    percent *= 2;\n    if (percent < 1) {\n      return 0.5 * Math.pow(percent, this.pow);\n    } else {\n      return 1 - 0.5 * Math.abs(Math.pow(2 - percent, this.pow));\n    }\n  }\n}\n\nexport class SineIn implements IAlgorithm {\n  public calclate(percent: number): number {\n    return 1 - Math.cos((percent * Math.PI) / 2);\n  }\n}\n\nexport class SineOut implements IAlgorithm {\n  public calclate(percent: number): number {\n    return Math.sin((percent * Math.PI) / 2);\n  }\n}\n\nexport class SineInOut implements IAlgorithm {\n  public calclate(percent: number): number {\n    return -0.5 * (Math.cos(Math.PI * percent) - 1);\n  }\n}\n\nexport class BackIn implements IAlgorithm {\n  constructor(private amount: number) {}\n  public calclate(percent: number): number {\n    return percent * percent * ((this.amount + 1) * percent - this.amount);\n  }\n}\n\nexport class BackOut implements IAlgorithm {\n  constructor(private amount: number) {}\n  public calclate(percent: number): number {\n    return --percent * percent * ((this.amount + 1) * percent + this.amount) + 1;\n  }\n}\n\nexport class BackInOut implements IAlgorithm {\n  constructor(private amount: number) {}\n  public calclate(percent: number): number {\n    percent *= 2;\n    if (percent < 1) {\n      return 0.5 * (percent * percent * ((this.amount + 1) * percent - this.amount));\n    } else {\n      return 0.5 * ((percent -= 2) * percent * ((this.amount + 1) * percent + this.amount) + 2);\n    }\n  }\n}\n\nexport class CircIn implements IAlgorithm {\n  public calclate(percent: number): number {\n    return -(Math.sqrt(1 - percent * percent) - 1);\n  }\n}\n\nexport class CircOut implements IAlgorithm {\n  public calclate(percent: number): number {\n    return Math.sqrt(1 - --percent * percent);\n  }\n}\n\nexport class CircInOut implements IAlgorithm {\n  public calclate(percent: number): number {\n    percent *= 2;\n    if (percent < 1) {\n      return -0.5 * (Math.sqrt(1 - percent * percent) - 1);\n    } else {\n      return 0.5 * (Math.sqrt(1 - (percent -= 2) * percent) + 1);\n    }\n  }\n}\n\nclass Bounce {\n  public calclateOut(percent: number): number {\n    if (percent < 1 / 2.75) {\n      return 7.5625 * percent * percent;\n    } else if (percent < 2 / 2.75) {\n      return 7.5625 * (percent -= 1.5 / 2.75) * percent + 0.75;\n    } else if (percent < 2.5 / 2.75) {\n      return 7.5625 * (percent -= 2.25 / 2.75) * percent + 0.9375;\n    } else {\n      return 7.5625 * (percent -= 2.625 / 2.75) * percent + 0.984375;\n    }\n  }\n}\n\nexport class BounceOut extends Bounce implements IAlgorithm {\n  public calclate(percent: number): number {\n    return super.calclateOut(percent);\n  }\n}\n\nexport class BounceIn extends Bounce {\n  public calclate(percent: number): number {\n    return 1 - super.calclateOut(1 - percent);\n  }\n}\n\nexport class BounceInOut extends BounceIn {\n  public calclate(percent: number): number {\n    if (percent < 0.5) {\n      return super.calclate(percent * 2) * 0.5;\n    } else {\n      return super.calclateOut(percent * 2 - 1) * 0.5 + 0.5;\n    }\n  }\n}\n\nconst PI2 = Math.PI * 2;\n\nexport class ElasticIn implements IAlgorithm {\n  private s: number;\n  constructor(private amplitude: number, private period: number) {\n    this.s = (this.period / PI2) * Math.asin(1 / this.amplitude);\n  }\n  public calclate(percent: number): number {\n    if (percent === 0 || percent === 1) {\n      return percent;\n    }\n    return -(\n      this.amplitude *\n      Math.pow(2, 10 * (percent -= 1)) *\n      Math.sin(((percent - this.s) * PI2) / this.period)\n    );\n  }\n}\n\nexport class ElasticOut implements IAlgorithm {\n  private s: number;\n  constructor(private amplitude: number, private period: number) {\n    this.s = (this.period / PI2) * Math.asin(1 / this.amplitude);\n  }\n  public calclate(percent: number): number {\n    if (percent === 0 || percent === 1) {\n      return percent;\n    }\n    return (\n      this.amplitude *\n        Math.pow(2, -10 * percent) *\n        Math.sin(((percent - this.s) * PI2) / this.period) +\n      1\n    );\n  }\n}\n\nexport class ElasticInOut implements IAlgorithm {\n  private s: number;\n  constructor(private amplitude: number, private period: number) {\n    this.s = (this.period / PI2) * Math.asin(1 / this.amplitude);\n  }\n  public calclate(percent: number): number {\n    percent *= 2;\n    if (percent < 1) {\n      return (\n        -0.5 *\n        (this.amplitude *\n          Math.pow(2, 10 * (percent -= 1)) *\n          Math.sin(((percent - this.s) * PI2) / this.period))\n      );\n    } else {\n      return (\n        this.amplitude *\n          Math.pow(2, -10 * (percent -= 1)) *\n          Math.sin(((percent - this.s) * PI2) / this.period) *\n          0.5 +\n        1\n      );\n    }\n  }\n}\n\n/**\n * The AlgorithmFactory provides a collection of easing algorithms for animation.\n *\n * Here is an example:\n *\n * ```typescript\n * // use the registerd algorithm name.\n * AnimationFactory.create(component, true).to({rotation:360}, 1000), \"quadInOut\");\n * // use the algorithm instance.\n * AnimationFactory.create(component, true).to({rotation:360}, 1000), new BackOut(2));\n * ```\n *\n * Developer can also register customized algorithm, code example:\n * ```\n * class MyAlgo implements IAlgorithm {\n *   public calclate(percent: number): number {\n *     return percent; // change it with your own algorithm.\n *   }\n * }\n * AlgorithmFactory.register('myalgo', new MyAlgo());\n *\n * AnimationFactory.create(component, true).to({rotation:360}, 1000), \"quadInOut\");\n */\nexport class AlgorithmFactory {\n  /**\n   * Registers algorithm with a specified name.\n   * @param name name of algorithm\n   * @param algorithm the implementation instance of the algorithm\n   */\n  public static register(name: string, algorithm: IAlgorithm) {\n    this.algorithms.set(name, algorithm);\n  }\n\n  /**\n   * Gets algorithm instance by a specified name.\n   * @param name the name of algorithm, registered by AlgorithmFactory.register\n   * @returns instance of algorithm, undefined for non-existed name\n   */\n  public static get(name: string): IAlgorithm | undefined {\n    return this.algorithms.get(name);\n  }\n\n  /**\n   * Algorithm instances collection, keyed by name;\n   */\n  private static algorithms: Map<string, IAlgorithm> = new Map();\n}\n\nAlgorithmFactory.register('linear', new Linear());\nAlgorithmFactory.register('quadIn', new PowIn(2));\nAlgorithmFactory.register('quadOut', new PowOut(2));\nAlgorithmFactory.register('quadInOut', new PowInOut(2));\nAlgorithmFactory.register('cubicIn', new PowIn(3));\nAlgorithmFactory.register('cubicOut', new PowOut(3));\nAlgorithmFactory.register('cubicInOut', new PowInOut(3));\nAlgorithmFactory.register('quartIn', new PowIn(4));\nAlgorithmFactory.register('quartOut', new PowOut(4));\nAlgorithmFactory.register('quartInOut', new PowInOut(4));\nAlgorithmFactory.register('quintIn', new PowIn(5));\nAlgorithmFactory.register('quintOut', new PowOut(5));\nAlgorithmFactory.register('quintInOut', new PowInOut(5));\nAlgorithmFactory.register('sineIn', new SineIn());\nAlgorithmFactory.register('sineOut', new SineOut());\nAlgorithmFactory.register('sineInOut', new SineInOut());\nAlgorithmFactory.register('backIn', new BackIn(1.7));\nAlgorithmFactory.register('backOut', new BackOut(1.7));\nAlgorithmFactory.register('backInOut', new BackInOut(1.7));\nAlgorithmFactory.register('circIn', new CircIn());\nAlgorithmFactory.register('circOut', new CircOut());\nAlgorithmFactory.register('circInOut', new CircInOut());\nAlgorithmFactory.register('bounceIn', new BounceIn());\nAlgorithmFactory.register('bounceOut', new BounceOut());\nAlgorithmFactory.register('bounceInOut', new BounceInOut());\nAlgorithmFactory.register('elasticIn', new ElasticIn(1, 0.3));\nAlgorithmFactory.register('elasticOut', new ElasticOut(1, 0.3));\nAlgorithmFactory.register('elasticInOut', new ElasticInOut(1, 0.3));\n","import { BaseValue } from '../base/BaseValue';\nimport { Color } from '../base/Color';\nimport { Event, EventDispatcher } from '../base/Event';\nimport { XObject } from '../components/XObject';\nimport { Background } from '../style/Background';\nimport { Border } from '../style/Border';\nimport { Shadow } from '../style/Shadow';\nimport { AlgorithmFactory, IAlgorithm } from './AlgorithmFactory';\n\nexport enum AnimationValueType {\n  NUMBER = 1,\n  BASEVALUE = 2,\n  COLOR = 3,\n  BORDER = 4,\n  SHADOW = 5\n}\n\nexport enum AnimateEventType {\n  UPDATE = 'update',\n  COMPLETE = 'complete'\n}\n\nexport class AnimateEvent extends Event {\n  public readonly progress: number;\n  public readonly currentStep: number;\n  public readonly currentProgress: number;\n\n  constructor(type: string, progress: number, currentStep: number, currentProgress: number) {\n    super(type, false, true);\n    this.progress = progress;\n    this.currentStep = currentStep;\n    this.currentProgress = currentProgress;\n  }\n\n  toString() {\n    return '[AnimateEvent (type=' + this.type + ')]';\n  }\n}\n\nexport interface IAnimationStyleAttributes {\n  [key: string]: {\n    type: AnimationValueType;\n    from: number | BaseValue | Color | Border | Shadow | undefined;\n    to: number | BaseValue | Color | Border | Shadow;\n  };\n}\n\nexport interface IAnimationValues {\n  [key: string]: number | string;\n}\n\nexport abstract class AnimationStep {\n  readonly duration: number;\n  readonly target: XObject;\n  public endTime: number = 0;\n\n  constructor(target: XObject, duration: number) {\n    this.target = target;\n    this.duration = duration;\n  }\n\n  // tslint:disable-next-line: no-empty\n  onStart() {}\n\n  // Returns true to ask stage to update the canvas.\n  onUpdate(percent: number): boolean {\n    return false;\n  }\n\n  // tslint:disable-next-line: no-empty\n  onEnd() {}\n}\n\nclass WaitStep extends AnimationStep {}\n\nclass StyleStep extends AnimationStep {\n  algorithm: IAlgorithm;\n  props: IAnimationValues;\n  computed?: IAnimationStyleAttributes;\n\n  constructor(\n    target: XObject,\n    props: IAnimationValues,\n    algorithm: string | IAlgorithm,\n    duration: number\n  ) {\n    super(target, duration);\n    if (typeof algorithm === 'string') {\n      const algo = AlgorithmFactory.get(algorithm);\n      if (!algo) {\n        throw new Error('unknow algorithm:' + algorithm);\n      }\n      this.algorithm = algo;\n    } else {\n      this.algorithm = algorithm;\n    }\n    this.props = props;\n  }\n\n  onStart() {\n    this.computed = this.target.style.getSnapshotForAnimation(this.target, this.props);\n  }\n\n  onUpdate(percent: number): boolean {\n    if (!this.computed) {\n      return false;\n    }\n    for (const name in this.computed) {\n      const attr: any = this.computed[name];\n      switch (attr.type) {\n        case AnimationValueType.NUMBER:\n          {\n            const from = attr.from as number;\n            const to = attr.to as number;\n            (this.target.style as any)[name] =\n              from + (to - from) * this.algorithm.calclate(percent);\n          }\n          break;\n        case AnimationValueType.BASEVALUE:\n          {\n            const from = attr.from as BaseValue;\n            const to = attr.to as BaseValue;\n            (this.target.style as any)[name] = new BaseValue(\n              from.numberValue +\n                (to.numberValue - from.numberValue) * this.algorithm.calclate(percent),\n              to.unit\n            );\n          }\n          break;\n        case AnimationValueType.COLOR:\n          {\n            const from = attr.from as Color;\n            const to = attr.to as Color;\n            const v = this.algorithm.calclate(percent);\n            const color = new Color(\n              from.r + (to.r - from.r) * v,\n              from.g + (to.g - from.g) * v,\n              from.b + (to.b - from.b) * v,\n              from.a + (to.a - from.a) * v\n            );\n            if (name === 'backgroundColor') {\n              if (!this.target.style.background) {\n                this.target.style.background = new Background();\n              }\n              this.target.style.background.color = color;\n            } else {\n              (this.target.style as any)[name] = color;\n            }\n          }\n          break;\n        case AnimationValueType.BORDER:\n          {\n            const from = attr.from as Border;\n            const to = attr.to as Border;\n            const v = this.algorithm.calclate(percent);\n            (this.target.style as any)[name] = new Border(\n              from.width + (to.width - from.width) * v,\n              from.style,\n              new Color(\n                from.color.r + (to.color.r - from.color.r) * v,\n                from.color.g + (to.color.g - from.color.g) * v,\n                from.color.b + (to.color.b - from.color.b) * v,\n                from.color.a + (to.color.a - from.color.a) * v\n              )\n            );\n          }\n          break;\n        case AnimationValueType.SHADOW:\n          {\n            const from = attr.from as Shadow;\n            const to = attr.to as Shadow;\n            const v = this.algorithm.calclate(percent);\n            (this.target.style as any)[name] = new Shadow(\n              from.offsetX + (to.offsetX - from.offsetX) * v,\n              from.offsetY + (to.offsetY - from.offsetY) * v,\n              from.blur + (to.blur - from.blur) * v,\n              new Color(\n                from.color.r + (to.color.r - from.color.r) * v,\n                from.color.g + (to.color.g - from.color.g) * v,\n                from.color.b + (to.color.b - from.color.b) * v,\n                from.color.a + (to.color.a - from.color.a) * v\n              )\n            );\n          }\n          break;\n      }\n    }\n    return true;\n  }\n}\n\nclass CallStep extends AnimationStep {\n  call: () => any;\n  constructor(target: XObject, call: () => any) {\n    super(target, 0);\n    this.call = call;\n  }\n  onEnd() {\n    this.call();\n  }\n}\n\nexport enum AnimationState {\n  RUNNING = 1,\n  PAUSED = 2,\n  COMPLETED = 3,\n  CANCELLED = 4\n}\n\nexport class Animation extends EventDispatcher<AnimateEvent> {\n  public playTimes: number = 1;\n  public state: AnimationState = AnimationState.RUNNING;\n  public target: XObject;\n\n  private steps: AnimationStep[] = [];\n  private roundStartTime: number = 0;\n  private beginTime: number;\n  private pauseTime: number;\n  private duration: number = 0;\n\n  private currentStepIndex: number = 0;\n  private currentStepProgress: number = 0;\n  private totalProgress: number = 0;\n\n  constructor(target: XObject, loop?: boolean) {\n    super();\n    this.target = target;\n    this.playTimes = loop ? 0 : 1;\n    this.roundStartTime = this.beginTime = Date.now();\n    this.currentStepIndex = 0;\n    this.state = AnimationState.RUNNING;\n  }\n\n  public toPromise(): Promise<AnimateEvent> {\n    return new Promise<AnimateEvent>((resolve, reject) => {\n      this.addEventListener(AnimateEventType.COMPLETE, event => {\n        resolve(event);\n      });\n    });\n  }\n\n  public pause(): boolean {\n    if (this.state === AnimationState.RUNNING) {\n      this.state = AnimationState.PAUSED;\n      this.pauseTime = Date.now();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public resume(): boolean {\n    if (this.state === AnimationState.PAUSED) {\n      const duration = Date.now() - this.pauseTime;\n      this.roundStartTime += duration;\n      this.beginTime += duration;\n      this.state = AnimationState.RUNNING;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public loop(loop: boolean): Animation {\n    this.playTimes = loop ? 0 : 1;\n    return this;\n  }\n\n  public times(times: number): Animation {\n    this.playTimes = times;\n    return this;\n  }\n\n  public to(props: any, duration: number, algorithm: string | IAlgorithm = 'linear'): Animation {\n    this.addStep(new StyleStep(this.target, props, algorithm, duration));\n    return this;\n  }\n\n  public call(call: () => any): Animation {\n    return this.addStep(new CallStep(this.target, call));\n  }\n\n  public wait(duration: number): Animation {\n    return this.addStep(new WaitStep(this.target, duration));\n  }\n\n  public onInterval(): boolean {\n    if (this.duration <= 0) {\n      // This is an empty animation without any step.\n      return false;\n    }\n    const now = Date.now();\n    if (now < this.roundStartTime) {\n      // The current time is before start time, this is usually caused by changing system time\n      // during animation playing, ignore this.\n      return false;\n    }\n\n    let passed = now - this.roundStartTime;\n    const currentStep = this.steps[this.currentStepIndex];\n\n    if (passed >= this.duration) {\n      // To end\n      currentStep.onUpdate(1);\n      currentStep.onEnd();\n      for (\n        ++this.currentStepIndex;\n        this.currentStepIndex < this.steps.length;\n        ++this.currentStepIndex\n      ) {\n        const step = this.steps[this.currentStepIndex];\n        step.onStart();\n        step.onUpdate(1);\n        step.onEnd();\n      }\n\n      // Check whether to start a new round\n      let newRound = true;\n      if (this.playTimes > 0) {\n        newRound = this.playTimes * this.duration > now - this.beginTime;\n      }\n\n      if (!newRound) {\n        this.currentStepIndex = this.steps.length - 1;\n        this.onUpdateInternal(1, 1);\n        this.state = AnimationState.COMPLETED;\n        this.dispatchEvent(\n          new AnimateEvent(\n            AnimateEventType.COMPLETE,\n            this.totalProgress,\n            this.currentStepIndex,\n            this.currentStepProgress\n          )\n        );\n      } else {\n        // New loop\n        passed = passed % this.duration;\n        this.roundStartTime = now - passed;\n        this.currentStepIndex = 0;\n        while (true) {\n          const step = this.steps[this.currentStepIndex];\n          step.onStart();\n          if (step.endTime > passed) {\n            const progress = 1 - (step.endTime - passed) / step.duration;\n            this.onUpdateInternal(progress, passed / this.duration);\n            break;\n          } else {\n            step.onUpdate(1);\n            step.onEnd();\n            ++this.currentStepIndex;\n          }\n        }\n      }\n    } else {\n      if (currentStep.endTime > passed) {\n        const progress = 1 - (currentStep.endTime - passed) / currentStep.duration;\n        this.onUpdateInternal(progress, passed / this.duration);\n      } else {\n        currentStep.onUpdate(1);\n        currentStep.onEnd();\n        ++this.currentStepIndex;\n        while (true) {\n          const step = this.steps[this.currentStepIndex];\n          step.onStart();\n          if (step.endTime > passed && step.duration > 0) {\n            const progress = 1 - (step.endTime - passed) / step.duration;\n            this.onUpdateInternal(progress, passed / this.duration);\n            break;\n          } else {\n            step.onUpdate(1);\n            step.onEnd();\n            ++this.currentStepIndex;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  public cancel() {\n    this.state = AnimationState.CANCELLED;\n    this.dispatchEvent(\n      new AnimateEvent(\n        AnimateEventType.COMPLETE,\n        this.totalProgress,\n        this.currentStepIndex,\n        this.currentStepProgress\n      )\n    );\n  }\n\n  private onUpdateInternal(currentStepProgress: number, totalProgress: number) {\n    this.currentStepProgress = currentStepProgress;\n    this.totalProgress = totalProgress;\n    this.steps[this.currentStepIndex].onUpdate(currentStepProgress);\n    this.dispatchEvent(\n      new AnimateEvent(\n        AnimateEventType.UPDATE,\n        this.totalProgress,\n        this.currentStepIndex,\n        this.currentStepProgress\n      )\n    );\n  }\n\n  public addStep(step: AnimationStep): Animation {\n    this.steps.push(step);\n    this.duration += step.duration;\n    step.endTime = this.duration;\n    if (this.steps.length === 1) {\n      step.onStart();\n    }\n    return this;\n  }\n}\n","import { XObject } from '../components/XObject';\nimport { Animation, AnimationState } from './Animation';\n\nexport class AnimationFactory {\n  public create(target: XObject, override?: boolean): Animation {\n    if (override) {\n      this.removeByTarget(target);\n    }\n    const animation = new Animation(target);\n    this.animations.push(animation);\n    return animation;\n  }\n\n  public removeByTarget(target: XObject) {\n    for (const animation of this.animations) {\n      if (animation.target === target && animation.state === AnimationState.RUNNING) {\n        animation.cancel();\n      }\n    }\n  }\n\n  public onInterval(): boolean {\n    const size = this.animations.length;\n    if (size === 0) {\n      return false;\n    }\n\n    let updated = false;\n    for (let i = 0; i < size; ++i) {\n      if (this.animations[i].onInterval()) {\n        updated = true;\n      }\n    }\n    for (let i = this.animations.length - 1; i >= 0; --i) {\n      const animation = this.animations[i];\n      if (\n        animation.state === AnimationState.COMPLETED ||\n        animation.state === AnimationState.CANCELLED\n      ) {\n        this.animations.splice(i, 1);\n      }\n    }\n    return updated;\n  }\n\n  private animations: Animation[] = [];\n}\n","export enum BaseValueUnit {\n  PX = 1,\n  PERCENTAGE = 2\n}\n\n/**\n * This class represents an immutable value object contains a number value and unit.\n *\n * There are 2 types of units:\n * 1. PX: absolute value.\n * 1. PERCENTAGE: the percentage of parent value.\n */\nexport class BaseValue {\n  /**\n   * Convert a string to a BaseValue object.\n   * @param value if it is a string value and ends with '%', parse it as a percentage value, otherwise parse it as a absolute value.\n   * @returns A BaseValue object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string | number, silent: boolean = false): BaseValue | undefined {\n    if (typeof value === 'string') {\n      const num = parseFloat(value);\n      if (isNaN(num)) {\n        if (!silent) {\n          console.warn('invalid value:' + value);\n        }\n        return undefined;\n      }\n      if (value.endsWith('%')) {\n        return new BaseValue(num, BaseValueUnit.PERCENTAGE);\n      } else {\n        return new BaseValue(num, BaseValueUnit.PX);\n      }\n    } else {\n      return new BaseValue(value, BaseValueUnit.PX);\n    }\n  }\n\n  /**\n   * The number part of this object.\n   */\n  public readonly numberValue: number = 0;\n  /**\n   * The unit of this object.\n   */\n  public readonly unit: BaseValueUnit;\n\n  /**\n   * Constructs a new BaseValue object whose value and unit are specified by the arguments of the same name.\n   * @param value the specified number value\n   * @param unit the specified unit\n   */\n  constructor(value: number, unit: BaseValueUnit = BaseValueUnit.PX) {\n    this.unit = unit;\n    this.numberValue = value;\n  }\n\n  /**\n   * Calculate the absolute value by the arguments.\n   * @param base the base value for percentage unit.\n   * @returns current object's number value if the unit is absolute, or base * number / 100 for percentage unit.\n   */\n  public getValue(base: number): number {\n    switch (this.unit) {\n      case BaseValueUnit.PERCENTAGE:\n        return (this.numberValue * base) / 100;\n      case BaseValueUnit.PX:\n        return this.numberValue;\n    }\n  }\n\n  /**\n   * Creates a new BaseValue object with absolute unit by current object and a specified base value.\n   * @param base the base value for percentage unit.\n   * @returns a new BaseValue object with absolute unit.\n   */\n  public toAbsolute(base: number): BaseValue {\n    switch (this.unit) {\n      case BaseValueUnit.PERCENTAGE:\n        return new BaseValue((this.numberValue * base) / 100, BaseValueUnit.PX);\n      case BaseValueUnit.PX:\n        return this;\n    }\n  }\n\n  /**\n   * Creates a new BaseValue object with percentage unit by current object and a specified base value.\n   * @param base the base value for percentage unit.\n   * @returns a new BaseValue object with percentage unit.\n   */\n  public toPercentage(base: number): BaseValue {\n    switch (this.unit) {\n      case BaseValueUnit.PX:\n        return new BaseValue((this.numberValue / base) * 100, BaseValueUnit.PERCENTAGE);\n      case BaseValueUnit.PERCENTAGE:\n        return this;\n    }\n  }\n\n  /**\n   * Returns a string representation of this BaseValue object.\n   * @returns a string representation of this object\n   */\n  public toString(): string {\n    switch (this.unit) {\n      case BaseValueUnit.PERCENTAGE:\n        return this.numberValue + '%';\n      case BaseValueUnit.PX:\n        return this.numberValue + '';\n    }\n  }\n\n  /**\n   * Checks whether two BaseValue objects are equal.\n   * The result is true if and only if the argument is a BaseValue object that has the same number value and unit as this Rect.\n   * @param that the Object to compare with this BaseValue object.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: BaseValue): boolean {\n    return this.numberValue === that.numberValue && this.unit === this.unit;\n  }\n\n  /**\n   * Creates a new Rect with the same upper-left corner, width, and height as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): BaseValue {\n    return new BaseValue(this.numberValue, this.unit);\n  }\n}\n","import { FunctionParser } from '../parser/FunctionParser';\n\nconst REG_VALUE = /^([0-9]+|[0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)%?$/;\nconst REG_HEX = /^#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/i;\n\n/**\n * This class represents an immutable color value. It uses the sRGB (standard Red-Green-Blue) system, along with an\n * alpha value ranging from transparent (0.0f) and opaque (1.0f). Further information about sRGB can be found at\n * <a href=\"http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html\">http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html</a>.\n *\n * Static method Color.of can be used to parse a string to a Color object, and it supports 4 types of format:\n * 1. hex value starts from '#'\n *    1. Hexadecimal notation: ```#RRGGBB[AA]```: R (red), G (green), B (blue), and A (alpha) are hexadecimal characters (0–9, A–F). A is optional. For example, ```#ff0000``` is equivalent to ```#ff0000ff```.\n *    1. Hexadecimal notation: ```#RGB[A]```: R (red), G (green), B (blue), and A (alpha) are hexadecimal characters (0–9, A–F). A is optional. The three-digit notation (#RGB) is a shorter version of the six-digit form (#RRGGBB). For example, #f09 is the same color as #ff0099. Likewise, the four-digit RGB notation (#RGBA) is a shorter version of the eight-digit form (#RRGGBBAA). For example, ```#0f38``` is the same color as ```#00ff3388```.\n * ```typescript\n * const white = Color.of('#fff');\n * const black = Color.of('#000000ff');\n * ```\n * 1. named color: there are 150 pre-defined named colors, also see <a href='https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords'>https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords</a>.\n * ```typescript\n * const white1 = Color.WHITE;\n * const white2 = Color.of('white');\n * ```\n * 1. Functional notation: rgb[a](R, G, B[, A]), R (red), G (green), and B (blue) can be either <number>s or <percentage>s, where the number 255 corresponds to 100%. A (alpha) can be a <number> between 0 and 1, or a <percentage>, where the number 1 corresponds to 100% (full opacity).\n * ```typescript\n * const white1 = Color.of('rgb(255, 255, 255)');\n * const white2 = Color.of('rgba(100%, 255, 255, 1)');\n * ```\n */\nexport class Color {\n  public static readonly TRANSPARENT = Color.of('#0000');\n  public static readonly ALICEBLUE = Color.of('#F0F8FF')!;\n  public static readonly ANTIQUEWHITE = Color.of('#FAEBD7')!;\n  public static readonly AQUA = Color.of('#00FFFF')!;\n  public static readonly AQUAMARINE = Color.of('#7FFFD4')!;\n  public static readonly AZURE = Color.of('#F0FFFF')!;\n  public static readonly BEIGE = Color.of('#F5F5DC')!;\n  public static readonly BISQUE = Color.of('#FFE4C4')!;\n  public static readonly BLACK = Color.of('#000000')!;\n  public static readonly BLANCHEDALMOND = Color.of('#FFEBCD')!;\n  public static readonly BLUE = Color.of('#0000FF')!;\n  public static readonly BLUEVIOLET = Color.of('#8A2BE2')!;\n  public static readonly BROWN = Color.of('#A52A2A')!;\n  public static readonly BURLYWOOD = Color.of('#DEB887')!;\n  public static readonly CADETBLUE = Color.of('#5F9EA0')!;\n  public static readonly CHARTREUSE = Color.of('#7FFF00')!;\n  public static readonly CHOCOLATE = Color.of('#D2691E')!;\n  public static readonly CORAL = Color.of('#FF7F50')!;\n  public static readonly CORNFLOWERBLUE = Color.of('#6495ED')!;\n  public static readonly CORNSILK = Color.of('#FFF8DC')!;\n  public static readonly CRIMSON = Color.of('#DC143C')!;\n  public static readonly CYAN = Color.of('#00FFFF')!;\n  public static readonly DARKBLUE = Color.of('#00008B')!;\n  public static readonly DARKCYAN = Color.of('#008B8B')!;\n  public static readonly DARKGOLDENROD = Color.of('#B8860B')!;\n  public static readonly DARKGRAY = Color.of('#A9A9A9')!;\n  public static readonly DARKGREY = Color.of('#A9A9A9')!;\n  public static readonly DARKGREEN = Color.of('#006400')!;\n  public static readonly DARKKHAKI = Color.of('#BDB76B')!;\n  public static readonly DARKMAGENTA = Color.of('#8B008B')!;\n  public static readonly DARKOLIVEGREEN = Color.of('#556B2F')!;\n  public static readonly DARKORANGE = Color.of('#FF8C00')!;\n  public static readonly DARKORCHID = Color.of('#9932CC')!;\n  public static readonly DARKRED = Color.of('#8B0000')!;\n  public static readonly DARKSALMON = Color.of('#E9967A')!;\n  public static readonly DARKSEAGREEN = Color.of('#8FBC8F')!;\n  public static readonly DARKSLATEBLUE = Color.of('#483D8B')!;\n  public static readonly DARKSLATEGRAY = Color.of('#2F4F4F')!;\n  public static readonly DARKSLATEGREY = Color.of('#2F4F4F')!;\n  public static readonly DARKTURQUOISE = Color.of('#00CED1')!;\n  public static readonly DARKVIOLET = Color.of('#9400D3')!;\n  public static readonly DEEPPINK = Color.of('#FF1493')!;\n  public static readonly DEEPSKYBLUE = Color.of('#00BFFF')!;\n  public static readonly DIMGRAY = Color.of('#696969')!;\n  public static readonly DIMGREY = Color.of('#696969')!;\n  public static readonly DODGERBLUE = Color.of('#1E90FF')!;\n  public static readonly FIREBRICK = Color.of('#B22222')!;\n  public static readonly FLORALWHITE = Color.of('#FFFAF0')!;\n  public static readonly FORESTGREEN = Color.of('#228B22')!;\n  public static readonly FUCHSIA = Color.of('#FF00FF')!;\n  public static readonly GAINSBORO = Color.of('#DCDCDC')!;\n  public static readonly GHOSTWHITE = Color.of('#F8F8FF')!;\n  public static readonly GOLD = Color.of('#FFD700')!;\n  public static readonly GOLDENROD = Color.of('#DAA520')!;\n  public static readonly GRAY = Color.of('#808080')!;\n  public static readonly GREY = Color.of('#808080')!;\n  public static readonly GREEN = Color.of('#008000')!;\n  public static readonly GREENYELLOW = Color.of('#ADFF2F')!;\n  public static readonly HONEYDEW = Color.of('#F0FFF0')!;\n  public static readonly HOTPINK = Color.of('#FF69B4')!;\n  public static readonly INDIANRED = Color.of('#CD5C5C')!;\n  public static readonly INDIGO = Color.of('#4B0082')!;\n  public static readonly IVORY = Color.of('#FFFFF0')!;\n  public static readonly KHAKI = Color.of('#F0E68C')!;\n  public static readonly LAVENDER = Color.of('#E6E6FA')!;\n  public static readonly LAVENDERBLUSH = Color.of('#FFF0F5')!;\n  public static readonly LAWNGREEN = Color.of('#7CFC00')!;\n  public static readonly LEMONCHIFFON = Color.of('#FFFACD')!;\n  public static readonly LIGHTBLUE = Color.of('#ADD8E6')!;\n  public static readonly LIGHTCORAL = Color.of('#F08080')!;\n  public static readonly LIGHTCYAN = Color.of('#E0FFFF')!;\n  public static readonly LIGHTGOLDENRODYELLOW = Color.of('#FAFAD2')!;\n  public static readonly LIGHTGRAY = Color.of('#D3D3D3')!;\n  public static readonly LIGHTGREY = Color.of('#D3D3D3')!;\n  public static readonly LIGHTGREEN = Color.of('#90EE90')!;\n  public static readonly LIGHTPINK = Color.of('#FFB6C1')!;\n  public static readonly LIGHTSALMON = Color.of('#FFA07A')!;\n  public static readonly LIGHTSEAGREEN = Color.of('#20B2AA')!;\n  public static readonly LIGHTSKYBLUE = Color.of('#87CEFA')!;\n  public static readonly LIGHTSLATEGRAY = Color.of('#778899')!;\n  public static readonly LIGHTSLATEGREY = Color.of('#778899')!;\n  public static readonly LIGHTSTEELBLUE = Color.of('#B0C4DE')!;\n  public static readonly LIGHTYELLOW = Color.of('#FFFFE0')!;\n  public static readonly LIME = Color.of('#00FF00')!;\n  public static readonly LIMEGREEN = Color.of('#32CD32')!;\n  public static readonly LINEN = Color.of('#FAF0E6')!;\n  public static readonly MAGENTA = Color.of('#FF00FF')!;\n  public static readonly MAROON = Color.of('#800000')!;\n  public static readonly MEDIUMAQUAMARINE = Color.of('#66CDAA')!;\n  public static readonly MEDIUMBLUE = Color.of('#0000CD')!;\n  public static readonly MEDIUMORCHID = Color.of('#BA55D3')!;\n  public static readonly MEDIUMPURPLE = Color.of('#9370DB')!;\n  public static readonly MEDIUMSEAGREEN = Color.of('#3CB371')!;\n  public static readonly MEDIUMSLATEBLUE = Color.of('#7B68EE')!;\n  public static readonly MEDIUMSPRINGGREEN = Color.of('#00FA9A')!;\n  public static readonly MEDIUMTURQUOISE = Color.of('#48D1CC')!;\n  public static readonly MEDIUMVIOLETRED = Color.of('#C71585')!;\n  public static readonly MIDNIGHTBLUE = Color.of('#191970')!;\n  public static readonly MINTCREAM = Color.of('#F5FFFA')!;\n  public static readonly MISTYROSE = Color.of('#FFE4E1')!;\n  public static readonly MOCCASIN = Color.of('#FFE4B5')!;\n  public static readonly NAVAJOWHITE = Color.of('#FFDEAD')!;\n  public static readonly NAVY = Color.of('#000080')!;\n  public static readonly OLDLACE = Color.of('#FDF5E6')!;\n  public static readonly OLIVE = Color.of('#808000')!;\n  public static readonly OLIVEDRAB = Color.of('#6B8E23')!;\n  public static readonly ORANGE = Color.of('#FFA500')!;\n  public static readonly ORANGERED = Color.of('#FF4500')!;\n  public static readonly ORCHID = Color.of('#DA70D6')!;\n  public static readonly PALEGOLDENROD = Color.of('#EEE8AA')!;\n  public static readonly PALEGREEN = Color.of('#98FB98')!;\n  public static readonly PALETURQUOISE = Color.of('#AFEEEE')!;\n  public static readonly PALEVIOLETRED = Color.of('#DB7093')!;\n  public static readonly PAPAYAWHIP = Color.of('#FFEFD5')!;\n  public static readonly PEACHPUFF = Color.of('#FFDAB9')!;\n  public static readonly PERU = Color.of('#CD853F')!;\n  public static readonly PINK = Color.of('#FFC0CB')!;\n  public static readonly PLUM = Color.of('#DDA0DD')!;\n  public static readonly POWDERBLUE = Color.of('#B0E0E6')!;\n  public static readonly PURPLE = Color.of('#800080')!;\n  public static readonly REBECCAPURPLE = Color.of('#663399')!;\n  public static readonly RED = Color.of('#FF0000')!;\n  public static readonly ROSYBROWN = Color.of('#BC8F8F')!;\n  public static readonly ROYALBLUE = Color.of('#4169E1')!;\n  public static readonly SADDLEBROWN = Color.of('#8B4513')!;\n  public static readonly SALMON = Color.of('#FA8072')!;\n  public static readonly SANDYBROWN = Color.of('#F4A460')!;\n  public static readonly SEAGREEN = Color.of('#2E8B57')!;\n  public static readonly SEASHELL = Color.of('#FFF5EE')!;\n  public static readonly SIENNA = Color.of('#A0522D')!;\n  public static readonly SILVER = Color.of('#C0C0C0')!;\n  public static readonly SKYBLUE = Color.of('#87CEEB')!;\n  public static readonly SLATEBLUE = Color.of('#6A5ACD')!;\n  public static readonly SLATEGRAY = Color.of('#708090')!;\n  public static readonly SLATEGREY = Color.of('#708090')!;\n  public static readonly SNOW = Color.of('#FFFAFA')!;\n  public static readonly SPRINGGREEN = Color.of('#00FF7F')!;\n  public static readonly STEELBLUE = Color.of('#4682B4')!;\n  public static readonly TAN = Color.of('#D2B48C')!;\n  public static readonly TEAL = Color.of('#008080')!;\n  public static readonly THISTLE = Color.of('#D8BFD8')!;\n  public static readonly TOMATO = Color.of('#FF6347')!;\n  public static readonly TURQUOISE = Color.of('#40E0D0')!;\n  public static readonly VIOLET = Color.of('#EE82EE')!;\n  public static readonly WHEAT = Color.of('#F5DEB3')!;\n  public static readonly WHITE = Color.of('#FFFFFF')!;\n  public static readonly WHITESMOKE = Color.of('#F5F5F5')!;\n  public static readonly YELLOW = Color.of('#FFFF00')!;\n  public static readonly YELLOWGREEN = Color.of('#9ACD32')!;\n  public static readonly NONE = Color.of('#FFFF00')!;\n\n  /**\n   * Convert a string to a Color object.\n   * @param value a string present a color, see the spec above for format.\n   * @param [silent] if ture, ignore warning for an invalid value.\n   * @returns A color object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string, silent: boolean = false): Color | undefined {\n    // Hex value.\n    if (REG_HEX.test(value)) {\n      return this.fromHex(value, silent);\n    }\n\n    // Checks pre-defined color name.\n    const colorName = value.toUpperCase();\n    if (COLOR_NAMES[colorName]) {\n      return COLOR_NAMES[colorName];\n    }\n\n    const func = FunctionParser.parse(value, silent);\n    if (!func) {\n      if (!silent) {\n        console.warn('invalid color value:' + value);\n      }\n      return undefined;\n    }\n\n    const funcnName = func.name.toLowerCase();\n    if (funcnName === 'rgb' && func.arguments.length === 3) {\n      const r = this.parseColorValue(func.arguments[0], 255);\n      const g = this.parseColorValue(func.arguments[1], 255);\n      const b = this.parseColorValue(func.arguments[2], 255);\n      if (r === undefined || g === undefined || b === undefined) {\n        console.warn('invalid color value:' + value);\n        return undefined;\n      }\n      return new Color(r, g, b, 1);\n    } else if (funcnName === 'rgba' && func.arguments.length === 4) {\n      const r = this.parseColorValue(func.arguments[0], 255);\n      const g = this.parseColorValue(func.arguments[1], 255);\n      const b = this.parseColorValue(func.arguments[2], 255);\n      const a = this.parseColorValue(func.arguments[3], 1);\n      if (r === undefined || g === undefined || b === undefined || a === undefined) {\n        console.warn('invalid color value:' + value);\n        return undefined;\n      }\n      return new Color(r, g, b, a);\n    }\n\n    if (!silent) {\n      console.warn('invalid color value:' + value);\n    }\n    return undefined;\n  }\n\n  /**\n   * Create a random color.\n   * @param includeAlpha Indecate whether include alpha as well.\n   * @returns a random color instance.\n   */\n  public static random(includeAlpha: boolean): Color {\n    return new Color(\n      Math.random() * 255,\n      Math.random() * 255,\n      Math.random() * 255,\n      includeAlpha ? Math.random() * 1 : 1\n    );\n  }\n\n  private static parseColorValue(value: string, base: number): number | undefined {\n    if (!REG_VALUE.test(value)) {\n      return undefined;\n    }\n    if (value.endsWith('%')) {\n      return (parseFloat(value) * base) / 100;\n    } else {\n      return parseFloat(value);\n    }\n  }\n\n  private static fromHex(hex: string, silent: boolean): Color {\n    if (hex.length === 4) {\n      return new Color(\n        parseInt(hex[1], 16) * 16 + parseInt(hex[1], 16),\n        parseInt(hex[2], 16) * 16 + parseInt(hex[2], 16),\n        parseInt(hex[3], 16) * 16 + parseInt(hex[3], 16),\n        1\n      );\n    } else if (hex.length === 5) {\n      return new Color(\n        parseInt(hex[1], 16) * 16 + parseInt(hex[1], 16),\n        parseInt(hex[2], 16) * 16 + parseInt(hex[2], 16),\n        parseInt(hex[3], 16) * 16 + parseInt(hex[3], 16),\n        (parseInt(hex[4], 16) * 16 + parseInt(hex[4], 16)) / 255\n      );\n    } else if (hex.length === 7) {\n      return new Color(\n        parseInt(hex.substring(1, 3), 16),\n        parseInt(hex.substring(3, 5), 16),\n        parseInt(hex.substring(5, 7), 16),\n        1\n      );\n    } else if (hex.length === 9) {\n      return new Color(\n        parseInt(hex.substring(1, 3), 16),\n        parseInt(hex.substring(3, 5), 16),\n        parseInt(hex.substring(5, 7), 16),\n        parseInt(hex.substring(7, 9), 16) / 255\n      );\n    }\n    if (!silent) {\n      console.warn('invalid color value:' + hex);\n    }\n    return undefined;\n  }\n\n  /**\n   *  The color red. In the default sRGB space.\n   */\n  public readonly r: number = 0;\n  /**\n   *  The color green. In the default sRGB space.\n   */\n  public readonly g: number = 0;\n  /**\n   *  The color blue. In the default sRGB space.\n   */\n  public readonly b: number = 0;\n  /**\n   * The alpha value. This is in the range 0.0f - 1.0f, and the default value is 1.\n   */\n  public readonly a: number = 1;\n\n  /**\n   * Constructs and initializes a color object with given arguments of sRGB and alpha.\n   * @param r The color red, normalizes to 0 if it is smaller than 0, 255 if it is bigger than 255.\n   * @param g The color green, normalizes to 0 if it is smaller than 0, 255 if it is bigger than 255.\n   * @param b The color blue, normalizes to 0 if it is smaller than 0, 255 if it is bigger than 255.\n   * @param a The alpha value, normalizes to 0 if it is smaller than 0, 1 if it is bigger than 1.\n   */\n  constructor(r: number, g: number, b: number, a: number = 1) {\n    this.r = Math.min(255, Math.max(0, r));\n    this.g = Math.min(255, Math.max(0, g));\n    this.b = Math.min(255, Math.max(0, b));\n    this.a = Math.min(1, Math.max(0, a));\n  }\n\n  /**\n   * Compare to the other color object.\n   * @param that the object compare with\n   * @returns true if equals\n   */\n  public equals(that: Color): boolean {\n    return this.r === that.r && this.g === that.g && this.b === that.b && this.a === that.a;\n  }\n\n  /**\n   * Creates a new Color object with the same sRGB value as this object.\n   * @returns a clone of this instance\n   */\n  public clone(): Color {\n    return new Color(this.r, this.g, this.b, this.a);\n  }\n\n  /**\n   * Returns a string representation of this Color object.\n   * @returns a string representation of this Color object\n   */\n  public toString(): string {\n    return `rgba(${this.r},${this.g},${this.b},${this.a})`;\n  }\n}\n\nconst COLOR_NAMES: { [key: string]: Color } = {\n  TRANSPARENT: Color.TRANSPARENT,\n  ALICEBLUE: Color.ALICEBLUE,\n  ANTIQUEWHITE: Color.ANTIQUEWHITE,\n  AQUA: Color.AQUA,\n  AQUAMARINE: Color.AQUAMARINE,\n  AZURE: Color.AZURE,\n  BEIGE: Color.BEIGE,\n  BISQUE: Color.BISQUE,\n  BLACK: Color.BLACK,\n  BLANCHEDALMOND: Color.BLANCHEDALMOND,\n  BLUE: Color.BLUE,\n  BLUEVIOLET: Color.BLUEVIOLET,\n  BROWN: Color.BROWN,\n  BURLYWOOD: Color.BURLYWOOD,\n  CADETBLUE: Color.CADETBLUE,\n  CHARTREUSE: Color.CHARTREUSE,\n  CHOCOLATE: Color.CHOCOLATE,\n  CORAL: Color.CORAL,\n  CORNFLOWERBLUE: Color.CORNFLOWERBLUE,\n  CORNSILK: Color.CORNSILK,\n  CRIMSON: Color.CRIMSON,\n  CYAN: Color.CYAN,\n  DARKBLUE: Color.DARKBLUE,\n  DARKCYAN: Color.DARKCYAN,\n  DARKGOLDENROD: Color.DARKGOLDENROD,\n  DARKGRAY: Color.DARKGRAY,\n  DARKGREY: Color.DARKGREY,\n  DARKGREEN: Color.DARKGREEN,\n  DARKKHAKI: Color.DARKKHAKI,\n  DARKMAGENTA: Color.DARKMAGENTA,\n  DARKOLIVEGREEN: Color.DARKOLIVEGREEN,\n  DARKORANGE: Color.DARKORANGE,\n  DARKORCHID: Color.DARKORCHID,\n  DARKRED: Color.DARKRED,\n  DARKSALMON: Color.DARKSALMON,\n  DARKSEAGREEN: Color.DARKSEAGREEN,\n  DARKSLATEBLUE: Color.DARKSLATEBLUE,\n  DARKSLATEGRAY: Color.DARKSLATEGRAY,\n  DARKSLATEGREY: Color.DARKSLATEGREY,\n  DARKTURQUOISE: Color.DARKTURQUOISE,\n  DARKVIOLET: Color.DARKVIOLET,\n  DEEPPINK: Color.DEEPPINK,\n  DEEPSKYBLUE: Color.DEEPSKYBLUE,\n  DIMGRAY: Color.DIMGRAY,\n  DIMGREY: Color.DIMGREY,\n  DODGERBLUE: Color.DODGERBLUE,\n  FIREBRICK: Color.FIREBRICK,\n  FLORALWHITE: Color.FLORALWHITE,\n  FORESTGREEN: Color.FORESTGREEN,\n  FUCHSIA: Color.FUCHSIA,\n  GAINSBORO: Color.GAINSBORO,\n  GHOSTWHITE: Color.GHOSTWHITE,\n  GOLD: Color.GOLD,\n  GOLDENROD: Color.GOLDENROD,\n  GRAY: Color.GRAY,\n  GREY: Color.GREY,\n  GREEN: Color.GREEN,\n  GREENYELLOW: Color.GREENYELLOW,\n  HONEYDEW: Color.HONEYDEW,\n  HOTPINK: Color.HOTPINK,\n  INDIANRED: Color.INDIANRED,\n  INDIGO: Color.INDIGO,\n  IVORY: Color.IVORY,\n  KHAKI: Color.KHAKI,\n  LAVENDER: Color.LAVENDER,\n  LAVENDERBLUSH: Color.LAVENDERBLUSH,\n  LAWNGREEN: Color.LAWNGREEN,\n  LEMONCHIFFON: Color.LEMONCHIFFON,\n  LIGHTBLUE: Color.LIGHTBLUE,\n  LIGHTCORAL: Color.LIGHTCORAL,\n  LIGHTCYAN: Color.LIGHTCYAN,\n  LIGHTGOLDENRODYELLOW: Color.LIGHTGOLDENRODYELLOW,\n  LIGHTGRAY: Color.LIGHTGRAY,\n  LIGHTGREY: Color.LIGHTGREY,\n  LIGHTGREEN: Color.LIGHTGREEN,\n  LIGHTPINK: Color.LIGHTPINK,\n  LIGHTSALMON: Color.LIGHTSALMON,\n  LIGHTSEAGREEN: Color.LIGHTSEAGREEN,\n  LIGHTSKYBLUE: Color.LIGHTSKYBLUE,\n  LIGHTSLATEGRAY: Color.LIGHTSLATEGRAY,\n  LIGHTSLATEGREY: Color.LIGHTSLATEGREY,\n  LIGHTSTEELBLUE: Color.LIGHTSTEELBLUE,\n  LIGHTYELLOW: Color.LIGHTYELLOW,\n  LIME: Color.LIME,\n  LIMEGREEN: Color.LIMEGREEN,\n  LINEN: Color.LINEN,\n  MAGENTA: Color.MAGENTA,\n  MAROON: Color.MAROON,\n  MEDIUMAQUAMARINE: Color.MEDIUMAQUAMARINE,\n  MEDIUMBLUE: Color.MEDIUMBLUE,\n  MEDIUMORCHID: Color.MEDIUMORCHID,\n  MEDIUMPURPLE: Color.MEDIUMPURPLE,\n  MEDIUMSEAGREEN: Color.MEDIUMSEAGREEN,\n  MEDIUMSLATEBLUE: Color.MEDIUMSLATEBLUE,\n  MEDIUMSPRINGGREEN: Color.MEDIUMSPRINGGREEN,\n  MEDIUMTURQUOISE: Color.MEDIUMTURQUOISE,\n  MEDIUMVIOLETRED: Color.MEDIUMVIOLETRED,\n  MIDNIGHTBLUE: Color.MIDNIGHTBLUE,\n  MINTCREAM: Color.MINTCREAM,\n  MISTYROSE: Color.MISTYROSE,\n  MOCCASIN: Color.MOCCASIN,\n  NAVAJOWHITE: Color.NAVAJOWHITE,\n  NAVY: Color.NAVY,\n  OLDLACE: Color.OLDLACE,\n  OLIVE: Color.OLIVE,\n  OLIVEDRAB: Color.OLIVEDRAB,\n  ORANGE: Color.ORANGE,\n  ORANGERED: Color.ORANGERED,\n  ORCHID: Color.ORCHID,\n  PALEGOLDENROD: Color.PALEGOLDENROD,\n  PALEGREEN: Color.PALEGREEN,\n  PALETURQUOISE: Color.PALETURQUOISE,\n  PALEVIOLETRED: Color.PALEVIOLETRED,\n  PAPAYAWHIP: Color.PAPAYAWHIP,\n  PEACHPUFF: Color.PEACHPUFF,\n  PERU: Color.PERU,\n  PINK: Color.PINK,\n  PLUM: Color.PLUM,\n  POWDERBLUE: Color.POWDERBLUE,\n  PURPLE: Color.PURPLE,\n  REBECCAPURPLE: Color.REBECCAPURPLE,\n  RED: Color.RED,\n  ROSYBROWN: Color.ROSYBROWN,\n  ROYALBLUE: Color.ROYALBLUE,\n  SADDLEBROWN: Color.SADDLEBROWN,\n  SALMON: Color.SALMON,\n  SANDYBROWN: Color.SANDYBROWN,\n  SEAGREEN: Color.SEAGREEN,\n  SEASHELL: Color.SEASHELL,\n  SIENNA: Color.SIENNA,\n  SILVER: Color.SILVER,\n  SKYBLUE: Color.SKYBLUE,\n  SLATEBLUE: Color.SLATEBLUE,\n  SLATEGRAY: Color.SLATEGRAY,\n  SLATEGREY: Color.SLATEGREY,\n  SNOW: Color.SNOW,\n  SPRINGGREEN: Color.SPRINGGREEN,\n  STEELBLUE: Color.STEELBLUE,\n  TAN: Color.TAN,\n  TEAL: Color.TEAL,\n  THISTLE: Color.THISTLE,\n  TOMATO: Color.TOMATO,\n  TURQUOISE: Color.TURQUOISE,\n  VIOLET: Color.VIOLET,\n  WHEAT: Color.WHEAT,\n  WHITE: Color.WHITE,\n  WHITESMOKE: Color.WHITESMOKE,\n  YELLOW: Color.YELLOW,\n  YELLOWGREEN: Color.YELLOWGREEN\n};\n","/**\n * This class represents an event object.\n */\nexport class Event {\n  /**\n   * True indicates that the default user agent action was prevented, and false indicates that it was\n   * not.\n   */\n  public defaultPrevented: boolean = false;\n\n  /**\n   * True indicates that the Event interface prevents further propagation of the current event in\n   * the capturing and bubbling phases, and false indicates that it was not.\n   */\n  public propagationStopped: boolean = false;\n\n  /**\n   * True indicates that prevents other listeners of the same event from being called.\n   */\n  public immediatePropagationStopped: boolean = false;\n\n  /**\n   * Type of event.\n   */\n  readonly type: string;\n\n  /**\n   * The bubbles read-only property of the Event interface indicates whether the event bubbles up\n   * through its parents or not.\n   */\n  readonly bubbles: boolean = false;\n\n  /**\n   * The cancelable read-only property of the Event interface indicates whether the event can be\n   * canceled, and therefore prevented as if the event never happened. If the event is not\n   * cancelable, then its cancelable property will be false and the event listener cannot stop\n   * the event from occurring.\n   */\n  readonly cancelable: boolean = false;\n\n  /**\n   * Time stamp of eventThe timeStamp read-only property of the Event interface returns the time\n   * (in milliseconds) at which the event was created.\n   */\n  readonly timeStamp: number;\n\n  /**\n   * Creates an instance of event.\n   * @param type event type\n   * @param [bubbles] indicates this event bubbles up through its parents or not\n   * @param [cancelable] indicates this event is cancelable or not\n   */\n  constructor(type: string, bubbles: boolean = true, cancelable: boolean = true) {\n    this.type = type;\n    this.bubbles = bubbles;\n    this.cancelable = cancelable;\n    this.timeStamp = Date.now();\n  }\n\n  /**\n   * The Event interface's preventDefault() method tells the user agent that if the event does not\n   * get explicitly handled, its default action should not be taken as it normally would be. The\n   * event continues to propagate as usual, unless one of its event listeners calls\n   * stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at\n   * once.\n   *\n   * As noted below, calling preventDefault() for a non-cancelable event, such as one dispatched\n   * via EventTarget.dispatchEvent(), without specifying cancelable: true has no effect.\n   */\n  preventDefault() {\n    this.defaultPrevented = this.cancelable && true;\n  }\n\n  /**\n   * Stops propagationThe stopPropagation() method of the Event interface prevents further\n   * propagation of the current event in the capturing and bubbling phases.\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * The stopImmediatePropagation() method of the Event interface prevents other listeners of the\n   * same event from being called.\n   *\n   * If several listeners are attached to the same element for the same event type, they are called\n   * in the order in which they were added. If stopImmediatePropagation() is invoked during one\n   * such call, no remaining listeners will be called.\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  /**\n   * Returns a string representation of this Event object.\n   * @returns a string representation of this Event object.\n   */\n  toString() {\n    return '[Event (type=' + this.type + ')]';\n  }\n}\n\ntype IEventListener<T extends Event> = (event: T) => void;\n\ninterface IListeners<T extends Event> {\n  [key: string]: IEventListener<T>[];\n}\n\n/**\n * This class represents an class which can dispatch specified type of event to its listeners.\n */\nexport class EventDispatcher<T extends Event> {\n  private listeners: IListeners<T> = {};\n\n  /**\n   * Adds event listener of specified type.\n   * @param type event type to listen.\n   * @param listener a listener which be invoked if an event with this specified type is\n   * dispatching.\n   * @returns current object itself for chain calls.\n   */\n  public addEventListener(type: string, listener: IEventListener<T>): EventDispatcher<T> {\n    let listeners = this.listeners[type];\n    if (listeners) {\n      this.removeEventListener(type, listener);\n    }\n    listeners = this.listeners[type]; // 'removeEventListener' may have deleted the array\n    if (!listeners) {\n      this.listeners[type] = [listener];\n    } else {\n      listeners.push(listener);\n    }\n    return this;\n  }\n\n  /**\n   * Alias of 'addEventListener' method.\n   */\n  public on(type: string, listener: IEventListener<T>): EventDispatcher<T> {\n    return this.addEventListener(type, listener);\n  }\n\n  /**\n   * Removes a event listener with specified type.\n   * @param type event type to remove.\n   * @param listener a listener which te be removed.\n   */\n  public removeEventListener(type: string, listener: IEventListener<T>) {\n    const arr = this.listeners[type];\n    if (!arr) {\n      return;\n    }\n    for (let i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] === listener) {\n        if (l === 1) {\n          delete this.listeners[type];\n        } else {\n          arr.splice(i, 1);\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Alias of 'removeEventListener' method.\n   */\n  public off(type: string, listener: IEventListener<T>) {\n    this.removeEventListener(type, listener);\n  }\n\n  /**\n   * Removes all event listeners of a specified type, if the type is not specified, remove all\n   * listeners of all types.\n   * @param type event type to remove, if it is not specified, remove all listeners of all types.\n   */\n  public removeAllEventListeners(type?: string) {\n    if (!type) {\n      this.listeners = {};\n    } else if (this.listeners) {\n      delete this.listeners[type];\n    }\n  }\n\n  /**\n   * Determines whether current object has any event listener of specified type.\n   * @param type event type to check.\n   * @returns true if there is any event listener of specified type.\n   */\n  public hasEventListener(type: string): boolean {\n    return !!this.listeners[type];\n  }\n\n  /**\n   * Alias of 'hasEventListener' method.\n   */\n  public willTrigger(type: string): boolean {\n    return this.hasEventListener(type);\n  }\n\n  /**\n   * Dispatches event to each listeners.\n   * @param event event to be dispatched\n   * @returns true if the event is not prevented by any listener.\n   */\n  public dispatchEvent(event: T): boolean {\n    let listeners = this.listeners[event.type];\n    if (listeners) {\n      // To avoid issues with items being removed or added during the dispatch\n      listeners = listeners.slice();\n      for (let i = 0; i < listeners.length && !event.immediatePropagationStopped; i++) {\n        listeners[i](event);\n      }\n    }\n    return !event.defaultPrevented;\n  }\n}\n","import { Point } from './Point';\n\nconst DEG_TO_RAD = Math.PI / 180;\n\n/**\n * Represents an affine transformation matrix, and provides tools for constructing and concatenating matrices.\n *\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n */\nexport class Matrix2D {\n  /**\n   * Position (0, 0) in a 3x3 affine transformation matrix.\n   */\n  public a: number = 1;\n  /**\n   * Position (0, 1) in a 3x3 affine transformation matrix.\n   */\n  public b: number = 0;\n  /**\n   * Position (1, 0) in a 3x3 affine transformation matrix.\n   */\n  public c: number = 0;\n  /**\n   * Position (1, 1) in a 3x3 affine transformation matrix.\n   */\n  public d: number = 1;\n  /**\n   * Position (2, 0) in a 3x3 affine transformation matrix.\n   */\n  public tx: number = 0;\n  /**\n   * Position (2, 1) in a 3x3 affine transformation matrix.\n   */\n  public ty: number = 0;\n\n  /**\n   * Creates an instance of Matrix2D.\n   * @param [a] Specifies the a property for the new matrix\n   * @param [b] Specifies the b property for the new matrix\n   * @param [c] Specifies the c property for the new matrix\n   * @param [d] Specifies the d property for the new matrix\n   * @param [tx] Specifies the tx property for the new matrix\n   * @param [ty] Specifies the ty property for the new matrix\n   */\n  constructor(\n    a: number = 1,\n    b: number = 0,\n    c: number = 0,\n    d: number = 1,\n    tx: number = 0,\n    ty: number = 0\n  ) {\n    this.setValues(a, b, c, d, tx, ty);\n  }\n\n  /**\n   * Sets the specified values on this instance.\n   * @param [a] Specifies the a property for the new matrix\n   * @param [b] Specifies the b property for the new matrix\n   * @param [c] Specifies the c property for the new matrix\n   * @param [d] Specifies the d property for the new matrix\n   * @param [tx] Specifies the tx property for the new matrix\n   * @param [ty] Specifies the ty property for the new matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public setValues(\n    a: number = 1,\n    b: number = 0,\n    c: number = 0,\n    d: number = 1,\n    tx: number = 0,\n    ty: number = 0\n  ): Matrix2D {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n    return this;\n  }\n\n  /**\n   * Appends the specified matrix properties to this matrix.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @param a Specifies the a property for the new matrix\n   * @param b Specifies the b property for the new matrix\n   * @param c Specifies the c property for the new matrix\n   * @param d Specifies the d property for the new matrix\n   * @param tx Specifies the tx property for the new matrix\n   * @param ty Specifies the ty property for the new matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public append(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix2D {\n    const a1 = this.a;\n    const b1 = this.b;\n    const c1 = this.c;\n    const d1 = this.d;\n    if (a !== 1 || b !== 0 || c !== 0 || d !== 1) {\n      this.a = a1 * a + c1 * b;\n      this.b = b1 * a + d1 * b;\n      this.c = a1 * c + c1 * d;\n      this.d = b1 * c + d1 * d;\n    }\n    this.tx = a1 * tx + c1 * ty + this.tx;\n    this.ty = b1 * tx + d1 * ty + this.ty;\n    return this;\n  }\n\n  /**\n   * Prepends the specified matrix properties to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * @param a Specifies the a property for the new matrix\n   * @param b Specifies the b property for the new matrix\n   * @param c Specifies the c property for the new matrix\n   * @param d Specifies the d property for the new matrix\n   * @param tx Specifies the tx property for the new matrix\n   * @param ty Specifies the ty property for the new matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public prepend(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix2D {\n    const a1 = this.a;\n    const c1 = this.c;\n    const tx1 = this.tx;\n    this.a = a * a1 + c * this.b;\n    this.b = b * a1 + d * this.b;\n    this.c = a * c1 + c * this.d;\n    this.d = b * c1 + d * this.d;\n    this.tx = a * tx1 + c * this.ty + tx;\n    this.ty = b * tx1 + d * this.ty + ty;\n    return this;\n  }\n\n  /**\n   * Appends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n   * @param matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public appendMatrix(matrix: Matrix2D): Matrix2D {\n    return this.append(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n\n  /**\n   * Prepends the specified matrix to this matrix.\n   * This is the equivalent of multiplying `(specified matrix) * (this matrix)`.\n   * @param matrix\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public prependMatrix(matrix: Matrix2D): Matrix2D {\n    return this.prepend(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n\n  /**\n   * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n   * @param x\n   * @param y\n   * @param scaleX\n   * @param scaleY\n   * @param rotation\n   * @param skewX\n   * @param skewY\n   * @param transformX\n   * @param transformY\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public appendTransform(\n    x: number,\n    y: number,\n    scaleX: number,\n    scaleY: number,\n    rotation: number,\n    skewX: number,\n    skewY: number,\n    transformX: number,\n    transformY: number\n  ): Matrix2D {\n    let cos: number;\n    let sin: number;\n    if (rotation % 360) {\n      const r = rotation * DEG_TO_RAD;\n      cos = Math.cos(r);\n      sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (skewX || skewY) {\n      skewX *= DEG_TO_RAD;\n      skewY *= DEG_TO_RAD;\n      this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n    } else {\n      this.append(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n\n    if (transformX || transformY) {\n      // Appends the registration offset.\n      this.tx -= transformX * this.a + transformY * this.c;\n      this.ty -= transformX * this.b + transformY * this.d;\n    }\n    return this;\n  }\n\n  /**\n   * Generates matrix properties from the specified display object transform properties, and prepends them to this matrix.\n   * @param x\n   * @param y\n   * @param scaleX\n   * @param scaleY\n   * @param rotation\n   * @param skewX\n   * @param skewY\n   * @param transformX\n   * @param transformY\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public prependTransform(\n    x: number,\n    y: number,\n    scaleX: number,\n    scaleY: number,\n    rotation: number,\n    skewX: number,\n    skewY: number,\n    transformX: number,\n    transformY: number\n  ): Matrix2D {\n    let cos: number;\n    let sin: number;\n    if (rotation % 360) {\n      const r = rotation * DEG_TO_RAD;\n      cos = Math.cos(r);\n      sin = Math.sin(r);\n    } else {\n      cos = 1;\n      sin = 0;\n    }\n\n    if (transformX || transformY) {\n      this.tx -= transformX;\n      this.ty -= transformY;\n    }\n    if (skewX || skewY) {\n      skewX *= DEG_TO_RAD;\n      skewY *= DEG_TO_RAD;\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, 0, 0);\n      this.prepend(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), x, y);\n    } else {\n      this.prepend(cos * scaleX, sin * scaleX, -sin * scaleY, cos * scaleY, x, y);\n    }\n    return this;\n  }\n\n  /**\n   * Applies a clockwise rotation transformation to the matrix.\n   * @param angle The angle to rotate by, in degrees. To use a value in radians, multiply it by `180/Math.PI`\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public rotate(angle: number): Matrix2D {\n    angle = angle * DEG_TO_RAD;\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle);\n\n    const a1 = this.a;\n    const b1 = this.b;\n\n    this.a = a1 * cos + this.c * sin;\n    this.b = b1 * cos + this.d * sin;\n    this.c = -a1 * sin + this.c * cos;\n    this.d = -b1 * sin + this.d * cos;\n    return this;\n  }\n\n  /**\n   * Applies a skew transformation to the matrix.\n   * @param skewX The amount to skew horizontally in degrees. To use a value in radians, multiply it by `180/Math.PI`\n   * @param skewY The amount to skew vertically in degrees\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public skew(skewX: number, skewY: number): Matrix2D {\n    skewX = skewX * DEG_TO_RAD;\n    skewY = skewY * DEG_TO_RAD;\n    this.append(Math.cos(skewY), Math.sin(skewY), -Math.sin(skewX), Math.cos(skewX), 0, 0);\n    return this;\n  }\n\n  /**\n   * Applies a scale transformation to the matrix.\n   * @param x The amount to scale horizontally. E.G. a value of 2 will double the size in the X direction, and 0.5 will halve it\n   * @param y The amount to scale vertically\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public scale(x: number, y: number): Matrix2D {\n    this.a *= x;\n    this.b *= x;\n    this.c *= y;\n    this.d *= y;\n    return this;\n  }\n\n  /**\n   * Translates the matrix on the x and y axes.\n   * @param x\n   * @param y\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public translate(x: number, y: number): Matrix2D {\n    this.tx += this.a * x + this.c * y;\n    this.ty += this.b * x + this.d * y;\n    return this;\n  }\n\n  /**\n   * Sets the properties of the matrix to those of an identity matrix (one that applies a null transformation)\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public identity(): Matrix2D {\n    this.a = this.d = 1;\n    this.b = this.c = this.tx = this.ty = 0;\n    return this;\n  }\n\n  /**\n   * Inverts the matrix, causing it to perform the opposite transformation.\n   * @returns The current instance. Useful for chaining method calls\n   */\n  invert(): Matrix2D {\n    const a1 = this.a;\n    const b1 = this.b;\n    const c1 = this.c;\n    const d1 = this.d;\n    const tx1 = this.tx;\n    const n = a1 * d1 - b1 * c1;\n\n    this.a = d1 / n;\n    this.b = -b1 / n;\n    this.c = -c1 / n;\n    this.d = a1 / n;\n    this.tx = (c1 * this.ty - d1 * tx1) / n;\n    this.ty = -(a1 * this.ty - b1 * tx1) / n;\n    return this;\n  }\n\n  /**\n   * Returns true if the matrix is an identity matrix.\n   * @returns true if the matrix is an identity matrix\n   */\n  isIdentity(): boolean {\n    return (\n      this.tx === 0 && this.ty === 0 && this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1\n    );\n  }\n\n  /**\n   * Checks whether two matrixes are equal.\n   * The result is true if and only if the argument is a Matrix2D object that has the same values.\n   * @param matrix the Object to compare with this Matrix2D object.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  equals(matrix: Matrix2D): boolean {\n    return (\n      this.tx === matrix.tx &&\n      this.ty === matrix.ty &&\n      this.a === matrix.a &&\n      this.b === matrix.b &&\n      this.c === matrix.c &&\n      this.d === matrix.d\n    );\n  }\n\n  /**\n   * Transforms a point according to this matrix.\n   * @param x The x component of the point to transform\n   * @param y The y component of the point to transform\n   * @return the transformed point\n   */\n  public transformPoint(x: number, y: number): Point {\n    const pt = new Point(0, 0);\n    pt.x = x * this.a + y * this.c + this.tx;\n    pt.y = x * this.b + y * this.d + this.ty;\n    return pt;\n  }\n\n  /**\n   * Copies all properties from the specified matrix to this matrix.\n   * @param matrix The matrix to copy properties from\n   * @returns The current instance. Useful for chaining method calls\n   */\n  public copy(matrix: Matrix2D): Matrix2D {\n    return this.setValues(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n  }\n\n  /**\n   * Returns a clone of the Matrix2D instance.\n   * @returns a clone of the Matrix2D instance.\n   */\n  public clone(): Matrix2D {\n    return new Matrix2D(this.a, this.b, this.c, this.d, this.tx, this.ty);\n  }\n\n  /**\n   * Returns a string representation of this Matrix2D object.\n   * @returns a string representation of this Matrix2D object\n   */\n  public toString() {\n    return `[Matrix2D (a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty})]`;\n  }\n}\n","/**\n * A point representing a location in (x,y) coordinate space, specified in integer precision.\n */\nexport class Point {\n  /**\n   * The X coordinate of this Point.\n   */\n  public x: number;\n  /**\n   * The Y coordinate of this Point.\n   */\n  public y: number;\n\n  /**\n   * Constructs and initializes a point at the specified (x,y) location in the coordinate space.\n   * @param x the X coordinate of the newly constructed Point\n   * @param y the Y coordinate of the newly constructed Point\n   */\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Checks whether two points are equal.\n   * The result is true if and only if the argument is a Point object that has the same location.\n   * @param that the Object to compare with this Point.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: Point): boolean {\n    return this.x === that.x && this.y === this.y;\n  }\n\n  /**\n   * Creates a new Point with the same location as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): Point {\n    return new Point(this.x, this.y);\n  }\n}\n","const REG_RECT = /^\\s*[0-9]+\\s+[0-9]+\\s+[0-9]+\\s+[0-9]+\\s*$/;\n\n/**\n * This class represents an rectangle object which contains start point (x, y) and size (width, height).\n *\n * Static method Rect.of can be used to parse a string to a Rect object, the string must contains 4 numbers joint with space.\n * ```typescript\n * const rect = Rect.of('100 100 200 300');\n * ```\n */\nexport class Rect {\n  /**\n   * Convert a string to a Rect object.\n   * @param value a string present a rectangle, see the spec above for format.\n   * @returns A rect object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string): Rect | undefined {\n    if (!REG_RECT.test(value)) {\n      return undefined;\n    }\n    const pieces = value.split(/\\s+/);\n    const x = parseFloat(pieces[0]);\n    if (isNaN(x)) {\n      return undefined;\n    }\n    const y = parseFloat(pieces[1]);\n    if (isNaN(y)) {\n      return undefined;\n    }\n    const width = parseFloat(pieces[2]);\n    if (isNaN(width)) {\n      return undefined;\n    }\n    const height = parseFloat(pieces[3]);\n    if (isNaN(height)) {\n      return undefined;\n    }\n    return new Rect(x, y, width, height);\n  }\n\n  /**\n   * The X coordinate of the upper-left corner of the Rect.\n   */\n  public x: number;\n  /**\n   * The Y coordinate of the upper-left corner of the Rect.\n   */\n  public y: number;\n  /**\n   * The width of the Rect.\n   */\n  public width: number;\n  /**\n   * The height of the Rect.\n   */\n  public height: number;\n\n  /**\n   * Constructs a new Rect whose upper-left corner is specified as (x,y) and whose width and height are specified by the arguments of the same name.\n   * @param x the specified X coordinate\n   * @param y the specified Y coordinate\n   * @param width the width of the Rect\n   * @param height the height of the Rect\n   */\n  constructor(x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Checks whether or not this Rect object contains the point at the specified location (x,y).\n   * @param x the specified X coordinate\n   * @param y the specified Y coordinate\n   * @returns true if the point (x,y) is inside this Rect; false otherwise.\n   */\n  public in(x: number, y: number): boolean {\n    return x >= this.x && y >= this.y && x < this.x + this.width && y < this.y + this.height;\n  }\n\n  /**\n   * Checks whether two Rect objects are equal.\n   * The result is true if and only if the argument is a Rect object that has the same upper-left corner, width, and height as this Rect.\n   * @param that the Object to compare with this Rect.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: Rect): boolean {\n    return (\n      this.x === that.x &&\n      this.y === this.y &&\n      this.width === that.width &&\n      this.height === that.height\n    );\n  }\n\n  /**\n   * Creates a new Rect object with the same upper-left corner, width, and height as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): Rect {\n    return new Rect(this.x, this.y, this.width, this.height);\n  }\n}\n","import { BaseValue } from '../base/BaseValue';\nimport { Rect } from '../base/Rect';\n\n/**\n * This class represents an rectangle object which contains start point (x, y) and size (width, height) with radius in\n * four corners.\n */\nexport class RoundRect {\n  /**\n   * The X coordinate of the left-top corner of the Rect.\n   */\n  x1: number = 0;\n  /**\n   * The Y coordinate of the left-top corner of the Rect.\n   */\n  y1: number = 0;\n  /**\n   * The X coordinate of the right-bottom corner of the Rect.\n   */\n  x2: number = 0;\n  /**\n   * The Y coordinate of the right-bottom corner of the Rect.\n   */\n  y2: number = 0;\n\n  /**\n   * The X radius of the left-top corner of the Rect.\n   */\n  leftTopRadiusX: number = 0;\n  /**\n   * The Y radius of the left-top corner of the Rect.\n   */\n  leftTopRadiusY: number = 0;\n  /**\n   * The X radius of the right-top corner of the Rect.\n   */\n  rightTopRadiusX: number = 0;\n  /**\n   * The Y radius of the right-top corner of the Rect.\n   */\n  rightTopRadiusY: number = 0;\n  /**\n   * The X radius of the right-bottom corner of the Rect.\n   */\n  rightBottomRadiusX: number = 0;\n  /**\n   * The Y radius of the right-bottom corner of the Rect.\n   */\n  rightBottomRadiusY: number = 0;\n  /**\n   * The X radius of the left-bottom corner of the Rect.\n   */\n  leftBottomRadiusX: number = 0;\n  /**\n   * The Y radius of the left-bottom corner of the Rect.\n   */\n  leftBottomRadiusY: number = 0;\n\n  constructor(x1: number = 0, y1: number = 0, x2: number = 0, y2: number = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n  }\n\n  /**\n   * Convert current RoundRect object to a Rect object by dropping radius.\n   *\n   * @returns a Rect object with same position and size.\n   */\n  toRect(): Rect {\n    return new Rect(this.x1, this.y1, this.x2 - this.x1 + 1, this.y2 - this.y1 + 1);\n  }\n\n  /**\n   * Apply the given size.\n   * @param width width of new size.\n   * @param height height of new size.\n   * @returns The current instance. Useful for chaining method calls\n   */\n  applySize(width: number, height: number): RoundRect {\n    this.x2 = this.x1 + width - 1;\n    this.y2 = this.y1 + height - 1;\n    return this;\n  }\n\n  /**\n   * Apply the given radius of 4 corners.\n   * @param radiusLeftTop radius in left-top corner.\n   * @param radiusRightTop height in right-top corner.\n   * @param radiusRightBottom radius in right-bottom corner.\n   * @param radiusLeftBottom radius in left-bottom corner.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  applyRadius(\n    radiusLeftTop?: BaseValue,\n    radiusRightTop?: BaseValue,\n    radiusRightBottom?: BaseValue,\n    radiusLeftBottom?: BaseValue\n  ): RoundRect {\n    const width = this.x2 - this.x1 + 1;\n    const height = this.y2 - this.y1 + 1;\n    if (radiusLeftTop) {\n      this.leftTopRadiusX = radiusLeftTop.getValue(width);\n      this.leftTopRadiusY = radiusLeftTop.getValue(height);\n    }\n    if (radiusRightTop) {\n      this.rightTopRadiusX = radiusRightTop.getValue(width);\n      this.rightTopRadiusY = radiusRightTop.getValue(height);\n    }\n    if (radiusRightBottom) {\n      this.rightBottomRadiusX = radiusRightBottom.getValue(width);\n      this.rightBottomRadiusY = radiusRightBottom.getValue(height);\n    }\n    if (radiusLeftBottom) {\n      this.leftBottomRadiusX = radiusLeftBottom.getValue(width);\n      this.leftBottomRadiusY = radiusLeftBottom.getValue(height);\n    }\n    return this;\n  }\n\n  /**\n   * Calculate the inner RoundRect by current instance and give borders in 4 directions.\n   * @param top top border.\n   * @param right right border.\n   * @param bottom bottom border.\n   * @param left left border.\n   * @returns The current instance if all borders are 0, or a new RoundRect object which presents the result of current\n   * instance applies the borders.\n   */\n  applyBorder(top: number, right: number, bottom: number, left: number): RoundRect {\n    if (top === 0 && right === 0 && bottom === 0 && left === 0) {\n      return this;\n    }\n\n    const rect = new RoundRect();\n    rect.x1 = this.x1 + left;\n    rect.y1 = this.y1 + top;\n    rect.x2 = this.x2 - right;\n    rect.y2 = this.y2 - bottom;\n\n    rect.leftTopRadiusX = Math.max(0, this.leftTopRadiusX - left);\n    rect.leftTopRadiusY = Math.max(0, this.leftTopRadiusY - top);\n    if (rect.leftTopRadiusX === 0 || rect.leftTopRadiusY === 0) {\n      rect.leftTopRadiusX = rect.leftTopRadiusY = 0;\n    }\n    rect.rightTopRadiusX = Math.max(0, this.rightTopRadiusX - right);\n    rect.rightTopRadiusY = Math.max(0, this.rightTopRadiusY - top);\n    if (rect.rightTopRadiusX === 0 || rect.rightTopRadiusY === 0) {\n      rect.rightTopRadiusX = rect.rightTopRadiusY = 0;\n    }\n    rect.rightBottomRadiusX = Math.max(0, this.rightBottomRadiusX - right);\n    rect.rightBottomRadiusY = Math.max(0, this.rightBottomRadiusY - bottom);\n    if (rect.rightBottomRadiusX === 0 || rect.rightBottomRadiusY === 0) {\n      rect.rightBottomRadiusX = rect.rightBottomRadiusY = 0;\n    }\n    rect.leftBottomRadiusX = Math.max(0, this.leftBottomRadiusX - left);\n    rect.leftBottomRadiusY = Math.max(0, this.leftBottomRadiusY - bottom);\n    if (rect.leftBottomRadiusX === 0 || rect.leftBottomRadiusY === 0) {\n      rect.leftBottomRadiusX = rect.leftBottomRadiusY = 0;\n    }\n    return rect;\n  }\n\n  /**\n   * Makes a path of current RouncRect object.\n   * @param ctx The rendering context of target canvas.\n   * @param newPath If true, start a new path, otherwise continue the previous path.\n   * @param clockwise The directions of the path.\n   */\n  makePath(ctx: CanvasRenderingContext2D, newPath: boolean, clockwise: boolean) {\n    const x1 = this.x1;\n    const y1 = this.y1;\n    const x2 = this.x2 + 1;\n    const y2 = this.y2 + 1;\n\n    if (clockwise) {\n      if (newPath) {\n        ctx.moveTo(x1, y1 + this.leftTopRadiusY);\n      } else {\n        ctx.lineTo(x1, y1 + this.leftTopRadiusY);\n      }\n      this.arcTo(x1, y1 + this.leftTopRadiusY, x1, y1, x1 + this.leftTopRadiusX, y1, ctx);\n      this.arcTo(x2 - this.rightTopRadiusX, y1, x2, y1, x2, y1 + this.rightTopRadiusY, ctx);\n      this.arcTo(x2, y2 - this.rightBottomRadiusY, x2, y2, x2 - this.rightBottomRadiusX, y2, ctx);\n      this.arcTo(x1 + this.leftBottomRadiusX, y2, x1, y2, x1, y2 - this.leftBottomRadiusY, ctx);\n\n      if (this.leftTopRadiusX !== 0 && this.leftTopRadiusY !== 0) {\n        ctx.lineTo(x1, y1 + this.leftTopRadiusY);\n      } else {\n        ctx.lineTo(x1, y1);\n      }\n    } else {\n      if (newPath) {\n        ctx.moveTo(x1, y1 + this.leftTopRadiusY);\n      } else {\n        ctx.lineTo(x1, y1 + this.leftTopRadiusY);\n      }\n      this.arcTo(x1, y2 - this.leftBottomRadiusY, x1, y2, x1 + this.leftBottomRadiusX, y2, ctx);\n      this.arcTo(x2 - this.rightBottomRadiusX, y2, x2, y2, x2, y2 - this.rightBottomRadiusY, ctx);\n      this.arcTo(x2, y1 + this.rightTopRadiusY, x2, y1, x2 - this.rightTopRadiusX, y1, ctx);\n      this.arcTo(x1 + this.leftTopRadiusX, y1, x1, y1, x1, y1 + this.leftTopRadiusY, ctx);\n    }\n  }\n\n  /**\n   * Make a clip of current RoundRect object to a canvas.\n   * @param ctx The rendering context of target canvas.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  clip(ctx: CanvasRenderingContext2D): RoundRect {\n    ctx.beginPath();\n    this.makePath(ctx, true, true);\n    ctx.closePath();\n    ctx.clip();\n    return this;\n  }\n\n  /**\n   * Adds a circular arc to the current sub-path, using the given control points and radius.\n   * @param x1 The X coordinate of the source point.\n   * @param y1 The Y coordinate of the source point.\n   * @param x0 The X coordinate of the corner point.\n   * @param y0 The Y coordinate of the corner point.\n   * @param x2 The X coordinate of the destination point.\n   * @param y2 The Y coordinate of the destination point.\n   * @param ctx The rendering context of target canvas.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  private arcTo(\n    x1: number,\n    y1: number,\n    x0: number,\n    y0: number,\n    x2: number,\n    y2: number,\n    ctx: CanvasRenderingContext2D\n  ) {\n    ctx.lineTo(x1, y1);\n    const dx = Math.abs(x1 - x2);\n    const dy = Math.abs(y1 - y2);\n    const min = 0.000001;\n    if (dx < min && dy < min) {\n      return;\n    } else if (dx < min || dy < min) {\n      ctx.lineTo(x2, y2);\n    } else {\n      if (Math.abs(dx - dy) < min) {\n        ctx.arcTo(x0, y0, x2, y2, dx);\n      } else {\n        ctx.quadraticCurveTo(x0, y0, x2, y2);\n      }\n    }\n  }\n}\n","import { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { Sprite, SpriteSheet } from './Sprite';\nimport { IXObjectOptions } from './XObject';\n\nexport class Apng extends Sprite {\n  constructor(options?: IXObjectOptions) {\n    super(options);\n    if (options && options.attributes) {\n      if (options.attributes.src) {\n        ResourceRegistry.DefaultInstance.add(options.attributes.src, ResourceType.APNG).then(\n          (opt: SpriteSheet) => {\n            this.setSpriteSheet(opt).play();\n          }\n        );\n      }\n    }\n  }\n}\n","import { Display, Position, TextAlign } from '../style/Style';\nimport { LayoutUtils } from '../utils/LayoutUtils';\nimport { IXObjectOptions, TouchEvent, XObject } from './XObject';\n\nexport class Container extends XObject {\n  public readonly children: XObject[] = [];\n\n  constructor(opt?: IXObjectOptions) {\n    super(opt);\n  }\n\n  public findById(id: string): XObject | undefined {\n    if (this.id === id) {\n      return this;\n    }\n    for (const child of this.children) {\n      if (child.id === id) {\n        return child;\n      }\n      if (child instanceof Container) {\n        const find = child.findById(id);\n        if (find) {\n          return find;\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    const list = this.children.slice();\n    for (const child of list) {\n      if (!child.isVisible()) {\n        continue;\n      }\n      ctx.save();\n      child.updateContext(ctx);\n      child.draw(ctx);\n      ctx.restore();\n    }\n  }\n\n  public addChild(child: XObject): Container {\n    const parent = child.parent;\n    if (parent === this) {\n      if (this.children.length > 0 && this.children[this.children.length - 1] === child) {\n        return this;\n      }\n      const idx = this.children.indexOf(child);\n      this.children.splice(idx, 1);\n      this.children.push(child);\n      child.dispatchEvent(new TouchEvent(child, 'moved', false));\n      return this;\n    } else {\n      if (parent) {\n        parent.removeChild(child);\n      }\n      child.parent = this;\n      this.children.push(child);\n      child.dispatchEvent(new TouchEvent(child, 'added', false));\n      return this;\n    }\n  }\n\n  public addChildren(...children: XObject[]): Container {\n    for (const child of children) {\n      this.addChild(child);\n    }\n    return this;\n  }\n\n  public addChildAt(child: XObject, index: number): Container {\n    const parent = child.parent;\n    if (parent === this) {\n      if (this.children[index] === child) {\n        return this;\n      }\n      const current = this.children.indexOf(child);\n      if (current > index) {\n        this.children.splice(current, 1);\n        this.children.splice(index, 0, child);\n      } else {\n        this.children.splice(index, 0, child);\n        this.children.splice(current, 1);\n      }\n      child.dispatchEvent(new TouchEvent(child, 'moved', false));\n      return this;\n    } else {\n      if (parent) {\n        parent.removeChild(child);\n      }\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      child.dispatchEvent(new TouchEvent(child, 'added', false));\n      return this;\n    }\n  }\n\n  public removeChild(child: XObject): XObject | null {\n    const idx = this.children.indexOf(child);\n    if (idx < 0) {\n      return null;\n    } else {\n      this.children.splice(idx, 1);\n      child.parent = undefined;\n      child.dispatchEvent(new TouchEvent(child, 'removed', false));\n      return child;\n    }\n  }\n\n  public removeChildAt(index: number): XObject | null {\n    if (index < 0 || index >= this.children.length) {\n      return null;\n    }\n    const child = this.children[index];\n    this.children.splice(index, 1);\n    child.dispatchEvent(new TouchEvent(child, 'removed', false));\n    return child;\n  }\n\n  public removeAllChildren(): Container {\n    while (this.children.length > 0) {\n      this.removeChildAt(0);\n    }\n    return this;\n  }\n\n  public getChildAt(index: number): XObject {\n    return this.children[index];\n  }\n\n  public sortChildren(sortFunction: (a: XObject, b: XObject) => number): Container {\n    this.children.sort(sortFunction);\n    return this;\n  }\n\n  public getChildIndex(child: XObject): number {\n    return this.children.indexOf(child);\n  }\n\n  public swapChildrenAt(index1: number, index2: number): Container {\n    if (index1 < 0 || index1 >= this.children.length) {\n      throw new Error('invalid index:' + index1);\n    }\n    if (index2 < 0 || index2 >= this.children.length) {\n      throw new Error('invalid index:' + index2);\n    }\n    if (index1 === index2) {\n      return this;\n    }\n    const o1 = this.children[index1];\n    const o2 = this.children[index2];\n    this.children[index1] = o2;\n    this.children[index2] = o1;\n    o1.dispatchEvent(new TouchEvent(o1, 'moved', false));\n    o2.dispatchEvent(new TouchEvent(o2, 'moved', false));\n    return this;\n  }\n\n  public swapChildren(child1: XObject, child2: XObject): Container {\n    return this.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2));\n  }\n\n  public contains(child: XObject): boolean {\n    while (child) {\n      if (child === this) {\n        return true;\n      }\n      if (!child.parent) {\n        return false;\n      }\n      child = child.parent;\n    }\n    return false;\n  }\n\n  public layout() {\n    this.calculateSize();\n    this.layoutChildren();\n  }\n\n  public layoutChildren() {\n    // Step1, calculate size\n    this.calculateSize();\n\n    // Step2, layout all children\n    const absolutes = [];\n    const relatives = [];\n\n    const contentRect = this.getContentRect();\n    let contentWidth = contentRect.width;\n\n    for (const child of this.children) {\n      if (!child.isVisible()) {\n        continue;\n      }\n      child.layout();\n      if (child.style.position === Position.ABSOLUTE || child.style.position === Position.FIXED) {\n        absolutes.push(child);\n      } else {\n        relatives.push(child);\n        contentWidth = Math.max(contentWidth, child.getOuterWidth());\n      }\n    }\n\n    // Step3, break children into lines\n    const lines: XObject[][] = [];\n    let line: XObject[] = [];\n    let lineWidth = 0;\n\n    for (const child of relatives) {\n      if (\n        (line.length > 0 && child.style.display === Display.BLOCK) ||\n        lineWidth + child.getOuterWidth() > contentWidth\n      ) {\n        // Break the current line\n        lines.push(line);\n        line = [];\n        lineWidth = 0;\n      }\n      line.push(child);\n      lineWidth += child.getOuterWidth();\n    }\n    if (line.length > 0) {\n      lines.push(line);\n    }\n\n    // Step 4, arrange children\n    const lineHeight = this.getLineHeight();\n    let contentHeight = 0;\n    for (const l of lines) {\n      let lineMaxHeight = 0;\n      lineWidth = 0;\n      for (const child of l) {\n        // Align to top\n        child.rect.y =\n          contentHeight +\n          contentRect.y +\n          (child.style.marginTop ? child.style.marginTop.getValue(this.rect.height) : 0);\n        lineMaxHeight = Math.max(lineMaxHeight, child.getOuterHeight());\n        lineWidth += child.getOuterWidth();\n      }\n      contentHeight += Math.max(lineHeight, lineMaxHeight);\n\n      let x = contentRect.x;\n      switch (this.style.textAlign) {\n        case TextAlign.RIGHT:\n          x = contentRect.x + contentWidth - lineWidth;\n          break;\n        case TextAlign.CENTER:\n          x = contentRect.x + (contentWidth - lineWidth) / 2;\n          break;\n        default:\n          x = contentRect.x;\n      }\n      for (const child of l) {\n        child.rect.x =\n          x + (child.style.marginLeft ? child.style.marginLeft.getValue(this.rect.width) : 0);\n        x += child.getOuterWidth();\n      }\n    }\n\n    // Update width/height\n    // TODO: add css (min/max width, overflow) support.\n    if (contentWidth > contentRect.width) {\n      this.rect.width += contentWidth - contentRect.width;\n    }\n    if (contentHeight > contentRect.height) {\n      this.rect.height += contentHeight - contentRect.height;\n    }\n    // Step 5, arrange absolutes\n    for (const child of absolutes) {\n      LayoutUtils.updatePositionForAbsoluteElement(child, this.rect.width, this.rect.height);\n    }\n  }\n\n  public getObjectUnderPoint(x: number, y: number, eventEnabled: boolean): XObject | undefined {\n    const children = this.children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      if (!child.isVisible() || (eventEnabled && !child.isPointerEventsEnabled())) {\n        continue;\n      }\n      const pt = this.localToLocal(x, y, child);\n      if (child instanceof Container) {\n        const result = child.getObjectUnderPoint(pt.x, pt.y, eventEnabled);\n        if (result) {\n          return result;\n        }\n      } else {\n        if (child.hitTest(pt.x, pt.y)) {\n          return child;\n        }\n      }\n    }\n\n    // No child match, try self\n    if (this.hitTest(x, y)) {\n      return this;\n    }\n    return undefined;\n  }\n\n  toString() {\n    return `[Container (id=${this.id})]`;\n  }\n}\n","import { Rect } from '../base/Rect';\nimport { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { IXObjectOptions, XObject } from './XObject';\n\nexport class Img extends XObject {\n  private src?: string;\n  private sourceRect?: Rect;\n\n  constructor(options?: IXObjectOptions) {\n    super(options);\n    if (options && options.attributes) {\n      if (options.attributes.src) {\n        this.src = options.attributes.src;\n        ResourceRegistry.DefaultInstance.add(this.src, ResourceType.IMAGE);\n      }\n      if (options.attributes.sourcerect) {\n        this.sourceRect = Rect.of(options.attributes.sourcerect);\n      }\n    }\n  }\n\n  public setSrc(src: string): Img {\n    this.src = src;\n    return this;\n  }\n\n  public setSourceRect(sourceRect: Rect): Img {\n    this.sourceRect = sourceRect;\n    return this;\n  }\n\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    if (!this.src) {\n      return;\n    }\n    const image: any = ResourceRegistry.DefaultInstance.get(this.src);\n    if (!image) {\n      return;\n    }\n    const rect = this.getContentRect();\n    if (this.sourceRect) {\n      ctx.drawImage(\n        image,\n        this.sourceRect.x,\n        this.sourceRect.y,\n        this.sourceRect.width,\n        this.sourceRect.height,\n        rect.x,\n        rect.y,\n        rect.width,\n        rect.height\n      );\n    } else {\n      ctx.drawImage(image, rect.x, rect.y, rect.width, rect.height);\n    }\n  }\n}\n","import { Animation, AnimationStep } from '../animation/Animation';\nimport { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { Stage } from './Stage';\nimport { IXObjectOptions, TouchEvent, XObject } from './XObject';\n\n/**\n * The definition of sprite, a sprite contains size, fps, image and frames.\n */\nexport type SpriteSheet = {\n  /**\n   * The original width of this sprite.\n   */\n  width: number;\n  /**\n   * The original height of this sprite.\n   */\n  height: number;\n  /**\n   * The fps controls the playing speed of this sprite.\n   */\n  fps: number;\n  /**\n   * The source of image which contains pictures of each frame, it is optional, the image can be\n   * defined at each frame instead of have one big image contains all.\n   */\n  url?: string;\n\n  /**\n   * The image to draw into the context.\n   */\n  image?: HTMLImageElement;\n  /**\n   * A list of frame definitions.\n   */\n  frames: SpriteFrame[];\n};\n\n/**\n * The definition of sprite frame.\n */\nexport type SpriteFrame = {\n  /**\n   * The x-axis coordinate of the top left corner of the sub-rectangle of the source image to draw\n   * into the destination context.\n   * If not specified, the default value is 0.\n   */\n  srcX?: number;\n  /**\n   * The y-axis coordinate of the top left corner of the sub-rectangle of the source image to draw\n   * into the destination context.\n   * If not specified,, the default value is 0.\n   */\n  srcY?: number;\n  /**\n   * The width of the sub-rectangle of the source image to draw into the destination context.\n   * If not specified, the entire rectangle from the coordinates specified by sx and sy to the\n   * bottom-right corner of the image is used.\n   */\n  srcWidth?: number;\n  /**\n   * The height of the sub-rectangle of the source image to draw into the destination context.\n   * Same as srcWidth, if not specified, the entire rectangle from the coordinates specified by sx\n   * and sy to the bottom-right corner of the image is used.\n   */\n  srcHeight?: number;\n  /**\n   * The x-axis coordinate in the destination canvas at which to place the top-left corner of the\n   * source image.\n   * If not specified,, the default value is 0.\n   */\n  destX?: number;\n  /**\n   * The y-axis coordinate in the destination canvas at which to place the top-left corner of the\n   * source image.\n   * If not specified,, the default value is 0.\n   */\n  destY?: number;\n  /**\n   * The width to draw the image in the destination canvas. This allows scaling of the drawn image.\n   * If not specified, the image is not scaled in width when drawn.\n   */\n  destWidth?: number;\n  /**\n   * The height to draw the image in the destination canvas. This allows scaling of the drawn image.\n   * If not specified, the image is not scaled in height when drawn.\n   */\n  destHeight?: number;\n  /**\n   * An element to draw into the context.\n   * If not specified, use the image in SpriteOption.\n   */\n  image?: HTMLImageElement;\n};\n\n/**\n * A class defines controls when an sprite render which frame during the animation life cycle.\n * Not like a normal animation, the sprite frames are discrete, we only render the frame while goto\n * next one.\n */\nclass SpriteAnimationStep extends AnimationStep {\n  /**\n   * The targeted sprite instance.\n   */\n  private sprite: Sprite;\n  /**\n   * Create a SpriteAnimationStep instance with a sprite instance.\n   * @param sprite The targeted sprite instance.\n   */\n  constructor(sprite: Sprite) {\n    super(sprite, (sprite.spriteSheet.frames.length * 1000) / sprite.spriteSheet.fps);\n    this.sprite = sprite;\n  }\n\n  /**\n   * Calculates the current frame and decides need to update.\n   * @param percent the current process of an animation play cycle.\n   * @returns True if switch frame, false otherwise.\n   */\n  onUpdate(percent: number): boolean {\n    if (!this.sprite.spriteSheet || this.sprite.spriteSheet.frames.length === 0) {\n      return false;\n    }\n    const index = Math.min(\n      this.sprite.spriteSheet.frames.length - 1,\n      Math.floor(this.sprite.spriteSheet.frames.length * percent)\n    );\n    if (index === this.sprite.currentFrame) {\n      return false;\n    } else {\n      this.sprite.currentFrame = index;\n      return true;\n    }\n  }\n}\n\n/**\n * This class represents a sprite object, which plays a sequence of frames from a SpriteSheet\n * instance.\n *\n * Code example:\n * ```typescript\n *  const sprite = new Sprite();\n *  const spriteSheet = {\n *    width: 480,\n *    height: 400,\n *    url: \"./elephant.png\",\n *    fps: 20,\n *    frames: []\n *  };\n *  for (let i = 0; i < 34; ++i) {\n *    opt.frames.push({ x: 0, y: 400 * i });\n *  }\n *  sprite.setSpriteSheet(spriteSheet).play();\n * ```\n */\nexport class Sprite extends XObject {\n  /**\n   * The SpriteSheet instance to play back.\n   */\n  public spriteSheet?: SpriteSheet;\n  /**\n   * Index of current frame.\n   */\n  public currentFrame: number = 0;\n  /**\n   * The animation instance to play the sprite sheet.\n   */\n  private animation?: Animation;\n\n  /**\n   * Create a sprite object, you need to call setSpriteSheet method after the instance was created.\n   * @param options The options to create this object.\n   */\n  constructor(options?: IXObjectOptions) {\n    super(options);\n  }\n\n  /**\n   * Set the SpriteSheet to let this Sprite instance know how to play.\n   * @param spriteSheet The SpriteSheet instance to be set.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public setSpriteSheet(spriteSheet: SpriteSheet): Sprite {\n    this.spriteSheet = spriteSheet;\n    if (this.spriteSheet && this.spriteSheet.url) {\n      ResourceRegistry.DefaultInstance.add(this.spriteSheet.url, ResourceType.IMAGE);\n    }\n    return this;\n  }\n\n  /**\n   * returns stage of this element, or undefined if this element is not attached to a stage.\n   * @returns Stage or undefined.\n   */\n  public getStage(): Stage | undefined {\n    let element: XObject = this;\n    while (element) {\n      if (element instanceof Stage) {\n        return element as Stage;\n      }\n      element = element.parent;\n    }\n    return undefined;\n  }\n\n  /**\n   * Play the sprite for the specified times, -1 for infinite.\n   * @param times How many times to play this sprite, -1 for infinite.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public play(times = -1): Sprite {\n    if (this.animation) {\n      this.animation.cancel();\n      this.animation = undefined;\n    }\n    const stage = this.getStage();\n    if (stage) {\n      this.animation = stage\n        .animate(this)\n        .addStep(new SpriteAnimationStep(this))\n        .times(times);\n      this.animation.addEventListener('complete', () =>\n        this.dispatchEvent(new TouchEvent(this, 'stop'))\n      );\n      this.dispatchEvent(new TouchEvent(this, 'play'));\n    }\n    return this;\n  }\n\n  /**\n   * Pause the current playing.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public pause(): Sprite {\n    if (this.animation && this.animation.pause()) {\n      this.dispatchEvent(new TouchEvent(this, 'pause'));\n    }\n    return this;\n  }\n\n  /**\n   * Resume the current playing.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public resume(): Sprite {\n    if (this.animation && this.animation.resume()) {\n      this.dispatchEvent(new TouchEvent(this, 'resume'));\n    }\n    return this;\n  }\n\n  /**\n   * Stop the current playing.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public stop(): Sprite {\n    if (this.animation) {\n      this.animation.cancel();\n      this.animation = undefined;\n    }\n    return this;\n  }\n\n  /**\n   * Alias of play method.\n   * @param times How many times to play this sprite, -1 for infinite.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public times(times: number): Sprite {\n    return this.play(times);\n  }\n\n  /**\n   * Set the index of current frame.\n   * Please do not call this method while it is playing, it may be updated in next render time.\n   * @param currentFrame the index of the specified frame.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public setCurrentFrame(currentFrame: number): Sprite {\n    this.currentFrame = currentFrame;\n    return this;\n  }\n\n  /**\n   * Move to next frame.\n   * Please do not call this method while it is playing, it may be updated in next render time.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public toNextFrame(): Sprite {\n    this.currentFrame = (this.currentFrame + 1) % this.spriteSheet.frames.length;\n    return this;\n  }\n\n  /**\n   * Move to previous frame.\n   * Please do not call this method while it is playing, it may be updated in next render time.\n   * @param currentFrame the index of the specified frame.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public toPreviousFrame(): Sprite {\n    this.currentFrame =\n      (this.currentFrame - 1 + this.spriteSheet.frames.length) % this.spriteSheet.frames.length;\n    return this;\n  }\n\n  /**\n   * Draws content of this element to targeted canvas.\n   * @param ctx The canvas rendering context of targeted canvas.\n   */\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    if (!this.spriteSheet || this.spriteSheet.frames.length === 0) {\n      return;\n    }\n    const frame = this.spriteSheet.frames[this.currentFrame];\n    // Get image\n    const rect = this.getContentRect();\n    let image: any;\n    if (frame.image) {\n      image = frame.image;\n    } else {\n      image =\n        this.spriteSheet.image ||\n        (this.spriteSheet.url && ResourceRegistry.DefaultInstance.get(this.spriteSheet.url));\n    }\n    if (!image) {\n      return;\n    }\n\n    const scaleX = rect.width / this.spriteSheet.width;\n    const scaleY = rect.height / this.spriteSheet.height;\n\n    const destX = frame.destX !== undefined ? frame.destX : 0;\n    const destY = frame.destY !== undefined ? frame.destY : 0;\n    const destWidth =\n      frame.destWidth !== undefined ? frame.destWidth : this.spriteSheet.width - destX;\n    const destHeight =\n      frame.destHeight !== undefined ? frame.destHeight : this.spriteSheet.height - destY;\n\n    const srcX = frame.srcX !== undefined ? frame.srcX : 0;\n    const srcY = frame.srcY !== undefined ? frame.srcY : 0;\n    const srcWidth = frame.srcWidth !== undefined ? frame.srcWidth : destWidth;\n    const srcHeight = frame.srcHeight !== undefined ? frame.srcHeight : destHeight;\n\n    try {\n      ctx.drawImage(\n        image,\n        srcX,\n        srcY,\n        srcWidth,\n        srcHeight,\n        destX * scaleX,\n        destY * scaleY,\n        destWidth * scaleX,\n        destHeight * scaleY\n      );\n    } catch (e) {\n      console.warn(this.currentFrame, e);\n    }\n  }\n}\n","import { Animation } from '../animation/Animation';\nimport { AnimationFactory } from '../animation/AnimationFactory';\nimport { ResourceRegistry } from '../resource/ResourceRegistry';\nimport { Runtime } from '../Runtime';\nimport { Ticker } from '../Ticker';\nimport { LayoutUtils } from '../utils/LayoutUtils';\nimport { Container } from './Container';\nimport { TouchItem } from './TouchItem';\nimport { TouchEvent, XObject } from './XObject';\n\n/**\n * An enum to identify how the stage instance do layout during the update process:\n *\n * 1. **NEVER**: stage does not re-layout during updating, you must call 'layout' method explicitly\n * while children status changes.\n * 1. **ALWAYS**: stage instance calls 'layout' method in each 'update' operation.\n */\nexport enum StageLayoutPolicy {\n  NEVER = 'never',\n  ALWAYS = 'always'\n}\n\n/**\n * An enum to identify how the stage instance update the canvas for each ticker callback:\n *\n * 1. **NEVER**: stage never update the canvas, you must call stage.update method manually to\n * update the canvas.\n * 1. **IN_ANIMATION**: stage only update canvas during the animation.\n * 1. **ALWAYS**: stage update canvas in each ticker callback.\n */\nexport enum StageUpdatePolicy {\n  NEVER = 'never',\n  IN_ANIMATION = 'in_animation',\n  ALWAYS = 'always'\n}\n\n/**\n * Options for constructing a stage object.\n */\nexport type StageOptions = {\n  /**\n   * Frames per second, it defines the frequency of the stage drawing the canvas.\n   */\n  fps?: number;\n  /**\n   * Layout policy, see the enum definition of StageLayoutPolicy.\n   */\n  layoutPolicy?: StageLayoutPolicy;\n  /**\n   * Update policy, see the enum definition of StageUpdatePolicy.\n   */\n  updatePolicy?: StageUpdatePolicy;\n  /**\n   * if true, clear the canvas at beginning of each update time, otherwise drawing on top of\n   * previous drawn canvas.\n   */\n  autoClear?: boolean;\n  /**\n   * The override styles while constructing a stage object.\n   */\n  style?: { [key: string]: string | number };\n};\n\n/**\n * A helper class for staging to hold the all touch status of this stage.\n */\nclass TouchedObjectSet {\n  /**\n   * A list of TouchItem objects.\n   */\n  readonly touchItems: TouchItem[] = [];\n\n  /**\n   * Checks whether this instance contains a TouchItem with this touch identifier.\n   * @param identifier Touch identifier to query.\n   * @returns True if this instance contains a TouchItem with same identifier, false otherwise.\n   */\n  public contains(identifier: number): boolean {\n    for (const item of this.touchItems) {\n      if (item.identifier === identifier) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets TouchItem instance by a given touch identifier.\n   * @param identifier Touch identifier to query.\n   * @returns TouchItem with same identifier, undefined if not found.\n   */\n  public get(identifier: number): TouchItem | undefined {\n    for (const item of this.touchItems) {\n      if (item.identifier === identifier) {\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Puts a TouchItem instances into current set, caller must make sure that only put the new\n   * TouchItem, this method does not check whether there is an existing TouchItem contains same\n   * touch identifier.\n   * @param touch  The TouchItem instance.\n   */\n  public add(touch: TouchItem) {\n    this.touchItems.push(touch);\n  }\n\n  /**\n   * Removes the TouchItem with same touch identifier.\n   * @param identifier The touch identifier used to find the TouchItem to be removed.\n   */\n  public remove(identifier: number) {\n    for (let i = 0; i < this.touchItems.length; ++i) {\n      if (this.touchItems[i].identifier === identifier) {\n        this.touchItems.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Returns a list of TouchItem instance of given XObject instance.\n   * @param object The XObject instance to be checked.\n   * @returns A list of TouchItem instance attaches to this object.\n   */\n  public getTouches(object: XObject): TouchItem[] {\n    const result: TouchItem[] = [];\n    for (const item of this.touchItems) {\n      if (item.srcElement === object || item.srcElement.isChildOf(object)) {\n        result.push(item);\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * This class represents a stage object which is the root level Container for a display list.\n * It also manages the context like ticker, animations, resources and controls the rendering\n * process.\n */\nexport class Stage extends Container {\n  /**\n   * The canvas instance where this stage render the image to.\n   */\n  public canvas: HTMLCanvasElement;\n\n  /**\n   * The ticker instance is used to provide a centralized tick to render the current stage if\n   * necessary, it is also used by the AnimationFactory instance to update the animations.\n   *\n   * When setting the fps of stage instance, it actually set the fps of ticker.\n   */\n  public readonly ticker: Ticker;\n\n  /**\n   * The animationFactory object manages the animations of children elements of this stage.\n   */\n  public readonly animationFactory: AnimationFactory;\n\n  /**\n   * The resourceRegistry object manages the resources (like images) used in this stage.\n   * This is still under developing.\n   */\n  public readonly resourceRegistry: ResourceRegistry;\n\n  /**\n   * The configuration of this stage instance.\n   */\n  public readonly option: StageOptions = {\n    /**\n     * The fps controls the frequency of rendering and animation updating, default is 60.\n     */\n    fps: 60,\n    /**\n     * Layout policy of this stage instance, default is 'always'.\n     */\n    layoutPolicy: StageLayoutPolicy.ALWAYS,\n    /**\n     * Update policy of this stage instance, default is 'in-animation'.\n     */\n    updatePolicy: StageUpdatePolicy.IN_ANIMATION,\n    /**\n     * Whether clear the stage before rendering, default is true.\n     */\n    autoClear: true\n  };\n\n  /**\n   * Contains paris of touched children and touch information.\n   */\n  private touchedChildren: TouchedObjectSet = new TouchedObjectSet();\n\n  /**\n   * Contains paris of hovered children and touch information.\n   */\n  private hoverChildren: TouchedObjectSet = new TouchedObjectSet();\n  /**\n   * Indicated whether this stage object is started to render or not.\n   */\n  private started: boolean = false;\n  /**\n   * Indicated whether this stage is invalidate and needs to be rendered.\n   */\n  private needUpdate: boolean = false;\n\n  /**\n   * Construct a stage object by canvas and option.\n   *\n   * Example\n   *\n   * ```typescript\n   * const canvas = windows.getElementById('canvas');\n   * const stage = new Stage(canvas);\n   * const parser = new Parser();\n   * const html = `\n   *    <div style='background:red;width:50%;height:100%'>\n   *      <div style='background:yellow;width:50%;height:50%'></div>\n   *    </div>\n   *    <div style='background:green;width:50%;height:100%'></div>\n   * `;\n   * const children = parser.parse(html);\n   * stage.addChildren(...children);\n   * stage.start();\n   * ```\n   *\n   * @param canvas The target canvas object this stage renders to.\n   * @param option The parameters to create this stage instance.\n   */\n  constructor(canvas: HTMLCanvasElement, option: StageOptions = {}) {\n    super();\n    for (const k in option) {\n      (this.option as { [key: string]: any })[k] = (option as { [key: string]: any })[k];\n    }\n    this.canvas = canvas;\n    this.css({\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0\n    });\n    if (option.style) {\n      this.css(option.style);\n    }\n\n    this.enableEvents();\n    this.ticker = new Ticker(this.option.fps);\n    this.animationFactory = new AnimationFactory();\n    this.resourceRegistry = new ResourceRegistry();\n  }\n\n  /**\n   * Marks this stage is invalidate and it will render the canvas in next ticker.\n   */\n  public updateOnce() {\n    this.needUpdate = true;\n  }\n\n  /**\n   * Start the ticker of this stage.\n   */\n  public start() {\n    if (!this.started) {\n      this.started = true;\n      this.layout();\n      this.needUpdate = true;\n      this.ticker.addEventListener('tick', _ => {\n        if (this.animationFactory.onInterval()) {\n          this.needUpdate = true;\n        }\n        if (this.needUpdate || this.option.updatePolicy === StageUpdatePolicy.ALWAYS) {\n          this.update();\n          this.needUpdate = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * Enables the event listeners that stage adds to canvas.\n   */\n  public enableEvents() {\n    Runtime.get().enableEvents(this);\n  }\n\n  /**\n   * Returns a list of TouchItems pressed on a given element.\n   * @param child A child to find the pressed TouchItems, use stage itself if it is undefined.\n   * @returns A list of TouchItems pressed on this element.\n   */\n  public getPressedTouchItems(child?: XObject): TouchItem[] {\n    if (!child) child = this;\n    const touches = this.touchedChildren.getTouches(child);\n    const result = [];\n    for (const touch of touches) {\n      const cloned = touch.clone();\n      const pt = this.localToLocal(touch.stageX, touch.stageY, child);\n      cloned.x = pt.x;\n      cloned.y = pt.y;\n      result.push(cloned);\n    }\n    return result;\n  }\n\n  /**\n   * Handles the mouse/touch events from runtime.\n   * @param type The type of this event.\n   * @param touches The list of touches, if the event is a mouse event, the first touch item\n   * contains mouse location and the identifier is always 0.\n   * @param e The native event object.\n   */\n  public handleMouseEvent(type: string, touches: TouchItem[], e: any) {\n    if (!this.isVisible()) {\n      return;\n    }\n    switch (type) {\n      case 'mousedown':\n      case 'touchstart':\n        this.handleTouchStartEvent(touches, e);\n        break;\n      case 'mouseup':\n        this.handleTouchEndEvent([], e);\n        break;\n      case 'touchend':\n        this.handleTouchEndEvent(touches, e);\n        break;\n      case 'mousemove':\n      case 'touchmove':\n      case 'mouseleave':\n        this.onTouchMove(touches, e);\n        break;\n    }\n  }\n\n  /**\n   * Render the stage to target canvas.\n   * For performance respective, do not call this method directly, calls updateOnce to let stage\n   * render at next ticker.\n   */\n  public update() {\n    if (!this.canvas || !this.isVisible()) {\n      return;\n    }\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    if (this.option.layoutPolicy === StageLayoutPolicy.ALWAYS) {\n      this.layout();\n    }\n    if (this.option.autoClear) {\n      ctx.clearRect(0, 0, this.getWidth(), this.getHeight());\n    }\n    ctx.save();\n    this.updateContext(ctx);\n    this.draw(ctx, false);\n    ctx.restore();\n  }\n\n  /**\n   * Calculate stage size and position according to its style.\n   */\n  public calculateSize() {\n    if (!this.canvas || !this.isVisible()) {\n      return;\n    }\n    const canvasWidth = this.canvas.width;\n    const canvasHeight = this.canvas.height;\n    LayoutUtils.updateSize(this, canvasWidth, canvasHeight);\n    LayoutUtils.updatePositionForAbsoluteElement(this, canvasWidth, canvasHeight);\n  }\n\n  /**\n   * A wrapper function to use this stage's animationFactory to create animation for the given child.\n   *\n   * ```typescript\n   *\n   * const stage = ...;\n   * const element = ...;\n   *\n   * stage.animate(element, true).to({color: 'red'}, 'linear', 1000);\n   * ```\n   *\n   * @param element The target element to create the animation for.\n   * @param override Whether to remove the existing animation of this element.\n   */\n  public animate(element: XObject, override: boolean = true): Animation {\n    return this.animationFactory.create(element, override);\n  }\n\n  /**\n   * A wrapper function to use this stage's animationFactory to stop animation for the given child.\n   *\n   * ```typescript\n   *\n   * const stage = ...;\n   * const element = ...;\n   *\n   * stage.stopAnimation(element);\n   * ```\n   * @param element The target element to create the animation for.\n   */\n  public stopAnimation(element: XObject) {\n    this.animationFactory.removeByTarget(element);\n  }\n\n  /**\n   * Returns a string representation of this stage object.\n   * @returns a string representation of this stage object.\n   */\n  public toString() {\n    return `[Stage (id=${this.id})]`;\n  }\n\n  /**\n   * Dispatch a touch event to a child element.\n   * @param element The target element to receive this event.\n   * @param type Event type.\n   * @param currentTouch It contains location and identifier of this event.\n   * @param bubble Indicates whether the event bubbles up through its parents or not.\n   * @param cancellable Indicates whether the event is cancellable or not.\n   * @param e The native event.\n   */\n  private dispatchTouchEvent(\n    element: XObject,\n    type: string,\n    currentTouch: TouchItem,\n    bubble: boolean,\n    cancellable: boolean,\n    e: any\n  ) {\n    const event = new TouchEvent(element, type, bubble, currentTouch, cancellable);\n    event.stage = this;\n    event.nativeEvent = e;\n    element.dispatchEvent(event);\n  }\n\n  /**\n   * Handles the touch move event.\n   * @param touches The list of touch item.\n   * @param e The native event.\n   */\n  private onTouchMove(touches: TouchItem[], e: any) {\n    const movedTouches: TouchItem[] = [];\n    for (const touch of touches) {\n      const item = this.touchedChildren.get(touch.identifier);\n      if (item) {\n        if (item.stageX !== touch.stageX || item.stageY !== touch.stageY) {\n          item.stageX = touch.stageX;\n          item.stageY = touch.stageY;\n          movedTouches.push(item);\n        }\n      } else {\n        movedTouches.push(touch);\n      }\n    }\n    for (const touch of movedTouches) {\n      const pt = this.globalToLocal(touch.stageX, touch.stageY);\n      const element: XObject | undefined = this.getObjectUnderPoint(pt.x, pt.y, true);\n      if (element) {\n        this.dispatchTouchEvent(element, 'move', touch, true, true, e);\n      }\n      const touchedItem = this.touchedChildren.get(touch.identifier);\n      if (touchedItem) {\n        this.dispatchTouchEvent(touchedItem.srcElement, 'pressmove', touch, true, true, e);\n      }\n      // Checks enter/leave\n      const hoveredItem = this.hoverChildren.get(touch.identifier);\n      if (hoveredItem && element) {\n        if (hoveredItem.srcElement !== element) {\n          let enterElement = element;\n          let leaveElement = hoveredItem.srcElement;\n          hoveredItem.srcElement = element;\n          hoveredItem.stageX = touch.stageX;\n          hoveredItem.stageY = touch.stageY;\n          while (leaveElement) {\n            if (enterElement.isChildOf(leaveElement) || enterElement === leaveElement) {\n              break;\n            }\n            this.dispatchTouchEvent(leaveElement, 'leave', hoveredItem, false, true, e);\n            leaveElement = leaveElement.parent;\n          }\n          while (enterElement && enterElement !== leaveElement) {\n            this.dispatchTouchEvent(enterElement, 'enter', hoveredItem, false, true, e);\n            enterElement = enterElement.parent;\n          }\n        }\n      } else if (element) {\n        touch.srcElement = element;\n        this.hoverChildren.add(touch);\n        this.dispatchTouchEvent(element, 'enter', touch, true, false, e);\n      } else if (hoveredItem) {\n        this.hoverChildren.remove(touch.identifier);\n        this.dispatchTouchEvent(hoveredItem.srcElement, 'leave', hoveredItem, true, false, e);\n      }\n    }\n  }\n\n  /**\n   * Handles the touch start event.\n   * @param touches The list of touch item.\n   * @param e The native event.\n   */\n  private handleTouchStartEvent(touches: TouchItem[], e: any) {\n    const newTouches: TouchedObjectSet = new TouchedObjectSet();\n    for (const touch of touches) {\n      if (!this.touchedChildren.contains(touch.identifier)) {\n        const element = this.getObjectUnderPoint(touch.stageX, touch.stageY, true);\n        if (element) {\n          touch.srcElement = element;\n          newTouches.add(touch);\n          this.touchedChildren.add(touch);\n        }\n      }\n    }\n    for (const item of newTouches.touchItems) {\n      this.dispatchTouchEvent(item.srcElement, 'touchdown', item, true, true, e);\n    }\n    this.onTouchMove(touches, e);\n  }\n\n  /**\n   * Handles the touch end event.\n   * @param touches The list of touch item.\n   * @param e The native event.\n   */\n  private handleTouchEndEvent(touches: TouchItem[], e: any) {\n    this.onTouchMove(touches, e);\n    const endedTouches: TouchedObjectSet = new TouchedObjectSet();\n    for (const item of this.touchedChildren.touchItems) {\n      let exists = false;\n      for (const touch of touches) {\n        if (touch.identifier === item.identifier) {\n          exists = true;\n          break;\n        }\n      }\n      if (!exists) {\n        endedTouches.add(item);\n      }\n    }\n    for (const item of endedTouches.touchItems) {\n      this.touchedChildren.remove(item.identifier);\n      this.hoverChildren.remove(item.identifier);\n    }\n    for (const item of endedTouches.touchItems) {\n      const element = this.getObjectUnderPoint(item.stageX, item.stageY, true);\n      if (element) {\n        this.dispatchTouchEvent(element, 'touchup', item, true, true, e);\n      }\n      this.dispatchTouchEvent(item.srcElement, 'pressup', item, true, true, e);\n      if (element === item.srcElement || item.srcElement.isChildOf(element)) {\n        this.dispatchTouchEvent(element, 'click', item, true, true, e);\n      }\n    }\n  }\n}\n","import { TextAlign, TextBorderPosition } from '../style/Style';\nimport { IXObjectOptions, XObject } from './XObject';\n\nexport class Text extends XObject {\n  private text: string = '';\n\n  constructor(options?: IXObjectOptions) {\n    super(options);\n    this.text = (options && options.text) || '';\n  }\n\n  public setText(text: string) {\n    this.text = text;\n  }\n\n  public getText(): string {\n    return this.text;\n  }\n\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    if (this.text === '' || !this.style.font) {\n      return;\n    }\n\n    const rect = this.getContentRect();\n\n    ctx.save();\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = this.style.textAlign;\n    ctx.fillStyle = this.style.color.toString();\n    ctx.font = this.style.font.toString();\n\n    // Set border.\n    const hasBorder = this.style.textBorder && this.style.textBorder.isEnable();\n    if (hasBorder) {\n      ctx.strokeStyle = this.style.textBorder.color.toString();\n      ctx.lineWidth = this.style.textBorder.width;\n    }\n\n    // Set shadow\n    if (this.style.textShadow && this.style.textShadow.isEnable()) {\n      ctx.shadowBlur = this.style.textShadow.blur;\n      ctx.shadowColor = this.style.textShadow.color.toString();\n      ctx.shadowOffsetX = this.style.textShadow.offsetX;\n      ctx.shadowOffsetY = this.style.textShadow.offsetY;\n    }\n\n    let x;\n    if (this.style.textAlign === TextAlign.RIGHT) {\n      x = rect.x + rect.width;\n    } else if (this.style.textAlign === TextAlign.CENTER) {\n      x = rect.x + rect.width / 2;\n    } else {\n      x = rect.x;\n    }\n\n    let y = rect.y;\n    const lines = this.text.split('\\n');\n    const lineHeight = this.getLineHeight();\n    y += lineHeight / 2;\n\n    for (const line of lines) {\n      if (line.trim() !== '') {\n        if (hasBorder) {\n          if (this.style.textBorderPosition === TextBorderPosition.OUTER) {\n            ctx.strokeText(line, x, y);\n            ctx.fillText(line, x, y);\n          } else {\n            ctx.fillText(line, x, y);\n            ctx.strokeText(line, x, y);\n          }\n        } else {\n          ctx.fillText(line, x, y);\n        }\n      }\n      y += lineHeight;\n    }\n\n    ctx.restore();\n    return true;\n  }\n\n  public layout() {\n    super.layout();\n    if (this.style.font) {\n      const lines = this.text.split('\\n');\n      const contentRect = this.getContentRect();\n      let textWidth = 0;\n      for (const line of lines) {\n        textWidth = Math.max(textWidth, this.style.font.measureTextWidth(line));\n      }\n      if (textWidth > contentRect.width) {\n        this.rect.width += textWidth - contentRect.width;\n      }\n\n      const textHeight = this.getLineHeight() * lines.length;\n      if (textHeight > contentRect.height) {\n        this.rect.height += textHeight - contentRect.height;\n      }\n    }\n  }\n}\n","import { XObject } from './XObject';\n\n/**\n * A TouchItem object representing an identifier to track a serial of touch events and location in\n * (x,y) coordinate space of current event.\n */\nexport class TouchItem {\n  /**\n   * The identifier of this TouchItem, used to track a serial of touch events.\n   */\n  readonly identifier: number;\n  /**\n   * The X coordinate of this TouchItem in the stage.\n   */\n  public stageX: number;\n  /**\n   * The Y coordinate of this TouchItem in the stage.\n   */\n  public stageY: number;\n  /**\n   * The X coordinate of this TouchItem in the current element.\n   */\n  public x: number;\n  /**\n   * The Y coordinate of this TouchItem in the current element.\n   */\n  public y: number;\n\n  /**\n   * The first pressed element of this event.\n   */\n  public srcElement?: XObject;\n\n  /**\n   * Constructs and initializes a TouchItem at the specified identifier and (x,y) location in the\n   * coordinate space.\n   * @param identifier the identifier of the newly constructed TouchItem\n   * @param srcElement the source element of the newly constructed TouchItem\n   * @param x the X coordinate of the newly constructed TouchItem\n   * @param y the Y coordinate of the newly constructed TouchItem\n   */\n  constructor(\n    identifier: number,\n    srcElement?: XObject,\n    stageX?: number,\n    stageY?: number,\n    x?: number,\n    y?: number\n  ) {\n    this.identifier = identifier;\n    this.srcElement = srcElement;\n    this.stageX = stageX;\n    this.stageY = stageY;\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Checks whether two TouchItems are equal.\n   * The result is true if and only if the argument is a TouchItem object that has same identifier\n   * and location.\n   * @param that the Object to compare with this TouchItem.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: TouchItem): boolean {\n    return (\n      this.identifier === that.identifier &&\n      this.srcElement === that.srcElement &&\n      this.stageX === that.stageX &&\n      this.stageY === that.stageY &&\n      this.x === that.x &&\n      this.y === that.y\n    );\n  }\n\n  /**\n   * Creates a new TouchItem with the same location as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): TouchItem {\n    return new TouchItem(\n      this.identifier,\n      this.srcElement,\n      this.stageX,\n      this.stageY,\n      this.x,\n      this.y\n    );\n  }\n}\n","import { Event, EventDispatcher } from '../base/Event';\nimport { Matrix2D } from '../base/Matrix2D';\nimport { Point } from '../base/Point';\nimport { Rect } from '../base/Rect';\nimport { RoundRect } from '../base/RoundRect';\nimport { Runtime } from '../Runtime';\nimport { Display, PointerEvents, Style } from '../style/Style';\nimport { DrawUtils } from '../utils/DrawUtils';\nimport { LayoutUtils } from '../utils/LayoutUtils';\nimport { Container } from './Container';\nimport { Stage } from './Stage';\nimport { TouchItem } from './TouchItem';\n\n/**\n * This class represents an event object for both touch event (in mobile devices) and mouse event\n * (in desktop).\n */\nexport class TouchEvent extends Event {\n  /**\n   * The stage object of the target element.\n   */\n  public stage?: Stage;\n  /**\n   * The native event, note that the location of this event is not transferred to the stage.\n   */\n  public nativeEvent: any = null;\n  /**\n   * The identifier of this TouchItem, used to track a serial of touch events.\n   */\n  readonly identifier: number;\n  /**\n   * The X coordinate of this TouchItem in the stage.\n   */\n  readonly stageX: number;\n  /**\n   * The Y coordinate of this TouchItem in the stage.\n   */\n  readonly stageY: number;\n  /**\n   * The X coordinate of this TouchItem in the current element.\n   */\n  public x: number;\n  /**\n   * The Y coordinate of this TouchItem in the current element.\n   */\n  public y: number;\n  /**\n   * A reference to the currently registered target for the event. This is the object to which the\n   * event is currently slated to be sent. It's possible this has been changed along the way\n   * through re-targeting.\n   */\n  public currentTarget: XObject;\n\n  /**\n   * The source element of this event.\n   */\n  public readonly srcElement: XObject;\n\n  /**\n   * Creates an instance of TouchEvent.\n   * @param srcElement The source element of this event.\n   * @param type Event type.\n   * @param bubbles Indicates whether the event bubbles up through its parents or not.\n   * @param touch Contains location and identifier of this touch event.\n   * @param cancelable Interface indicates whether the event can be canceled, and\n   * therefore prevented as if the event never happened.\n   */\n  constructor(\n    srcElement: XObject,\n    type: string,\n    bubbles: boolean = true,\n    touch?: TouchItem,\n    cancelable: boolean = true\n  ) {\n    super(type, bubbles, cancelable);\n    this.srcElement = srcElement;\n    if (touch) {\n      this.identifier = touch.identifier;\n      this.stageX = touch.stageX;\n      this.stageY = touch.stageY;\n      this.x = touch.x;\n      this.y = touch.y;\n    }\n    this.currentTarget = srcElement;\n  }\n\n  /**\n   * Returns a string representation of this TouchEvent object.\n   * @returns a string representation of this TouchEvent object.\n   */\n  toString() {\n    return '[TouchEvent (type=' + this.type + ')]';\n  }\n}\n\n/**\n * Indicates the cache state of this object.\n */\nenum CacheState {\n  /**\n   * Never cache this object.\n   */\n  DISABLED = 1,\n  /**\n   * Already cached this object to an offscreen canvas.\n   */\n  CACHED = 2,\n  /**\n   * Cache is enabled for the current object, but it is invalidate, and will be updated in next\n   * render time.\n   */\n  INVALIDATE = 3\n}\n\n/**\n * Options to create an XObject instance.\n */\nexport interface IXObjectOptions {\n  style: Style;\n  attributes: { [key: string]: string };\n  text?: string;\n}\n\n/**\n * This class represents an basic object (XObject), contains id, style, cache and cache status,\n * etc.\n */\nexport class XObject extends EventDispatcher<TouchEvent> {\n  /**\n   * The string if of this object.\n   */\n  public id?: string = undefined;\n  /**\n   * The style of this object.\n   */\n  public style: Style;\n  /**\n   * The calculated location and size of this object.\n   * Note: it is a computed result, do not change it manually, it maybe re-calculated in next\n   * layout process.\n   */\n  public rect: Rect = new Rect(0, 0, 0, 0);\n  /**\n   * Parent object of this object.\n   */\n  public parent?: Container;\n  /**\n   * The cached canvas.\n   */\n  private cacheCanvas?: HTMLCanvasElement;\n  /**\n   * Cache state, by default it is not cached.\n   * Note that enabling cache does not always improve the performance, if this instance is a image\n   * there is no performance gain, or its size is bigger but simple to draw, enabling cache may\n   * hurt performance.\n   */\n  private cacheState: CacheState = CacheState.DISABLED;\n\n  /**\n   * Creates a XObject instance.\n   * @param opt The options to create this object.\n   */\n  constructor(opt?: IXObjectOptions) {\n    super();\n    this.style = opt && opt.style ? opt.style : new Style();\n    if (opt && opt.attributes.id) {\n      this.id = opt.attributes.id;\n    }\n  }\n\n  /**\n   * This this element from its parent.\n   */\n  public remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n  }\n\n  /**\n   * Dispatches an event from current element and bubbles up through its parents.\n   * @param event The event to be dispatched.\n   * @returns True if the event is prevented, false otherwise.\n   */\n  public dispatchEvent(event: TouchEvent): boolean {\n    if (!event.bubbles || !this.parent) {\n      this.doDispatchEvent(event);\n    } else {\n      let element: XObject = this;\n      // To avoid issues with items being removed or added during the dispatch\n      const queue: XObject[] = [element];\n\n      while (element.parent) {\n        queue.push(element.parent);\n        element = element.parent;\n      }\n\n      // Bubbling\n      for (const ele of queue) {\n        event.currentTarget = ele;\n        if (event.propagationStopped) {\n          break;\n        }\n        ele.doDispatchEvent(event);\n      }\n    }\n    return !event.defaultPrevented;\n  }\n\n  /**\n   * Checks whether this element is visible.\n   * @returns True if it is visible, false otherwise.\n   */\n  public isVisible(): boolean {\n    return !!(\n      this.style.visible &&\n      this.style.display !== Display.NONE &&\n      this.style.alpha > 0 &&\n      this.style.scaleX > 0 &&\n      this.style.scaleY > 0\n    );\n  }\n\n  /**\n   * Checks whether this element enables pointer events.\n   * @returns True if it enables pointer events, false otherwise.\n   */\n  public isPointerEventsEnabled(): boolean {\n    return this.style.pointerEvents !== PointerEvents.NONE;\n  }\n\n  /**\n   * Returns the offscreen cache canvas.\n   * @returns The offscreen cache canvas.\n   */\n  public getCacheCanvas(): HTMLCanvasElement | undefined {\n    return this.cacheCanvas;\n  }\n\n  /**\n   * Checks whether this element is cache enabled.\n   * Note that it returns true for an invalidate cache state.\n   * @returns True if it is cache enabled, false otherwise.\n   */\n  public isCached(): boolean {\n    return this.cacheState !== CacheState.DISABLED;\n  }\n\n  /**\n   * Enable cache for this element.\n   */\n  public cache() {\n    if (this.cacheState !== CacheState.CACHED) {\n      this.cacheState = CacheState.INVALIDATE;\n    }\n  }\n\n  /**\n   * Disable cache for this element.\n   */\n  public uncache() {\n    this.cacheState = CacheState.DISABLED;\n    delete this.cacheCanvas;\n  }\n\n  /**\n   * Marks the cache is invalidate and update in next render cycle.\n   */\n  public invalidateCache() {\n    if (this.cacheState === CacheState.DISABLED) {\n      console.warn('Cache does not enabled for ' + this.toString());\n      return;\n    }\n    this.cacheState = CacheState.INVALIDATE;\n  }\n\n  /**\n   * Draws the image to stage canvas.\n   * @param ctx The canvas rendering context of stage canvas.\n   * @param ignoreCache If true, always not use cache.\n   */\n  public draw(ctx: CanvasRenderingContext2D, ignoreCache: boolean = false) {\n    ctx.filter = this.style.filter || 'none';\n    if (!ignoreCache && this.cacheState !== CacheState.DISABLED) {\n      if (!this.cacheCanvas) {\n        this.cacheCanvas = Runtime.get().newCanvas();\n      }\n      if (this.cacheState !== CacheState.CACHED) {\n        this.cacheCanvas.width = this.rect.width;\n        this.cacheCanvas.height = this.rect.height;\n        const cacheCtx = this.cacheCanvas.getContext('2d');\n        if (cacheCtx) {\n          DrawUtils.drawElement(this, cacheCtx);\n        }\n        this.cacheState = CacheState.CACHED;\n      }\n      ctx.drawImage(this.cacheCanvas, 0, 0, this.rect.width, this.rect.height);\n    } else {\n      DrawUtils.drawElement(this, ctx);\n    }\n  }\n\n  /**\n   * Draws the background of this element to targeted canvas.\n   * @param ctx The canvas rendering context of targeted canvas.\n   * @param outerRect the outer position of border of this element.\n   * @param innerRect the inner position of border of this element.\n   */\n  public drawBackground(ctx: CanvasRenderingContext2D, outerRect: RoundRect, innerRect: RoundRect) {\n    if (this.style.background) {\n      this.style.background.draw(this, ctx, outerRect, innerRect);\n    }\n  }\n\n  /**\n   * Draws content of this element to targeted canvas.\n   * @param ctx The canvas rendering context of targeted canvas.\n   */\n  public drawContent(ctx: CanvasRenderingContext2D) {\n    return;\n  }\n\n  /**\n   * Applies this object's transformation and alpha to the specified context. This is typically\n   * called prior to 'draw' function.\n   * @param ctx The canvas rendering context to update.\n   */\n  public updateContext(ctx: CanvasRenderingContext2D) {\n    const mtx: Matrix2D = this.getMatrix();\n    ctx.transform(mtx.a, mtx.b, mtx.c, mtx.d, mtx.tx, mtx.ty);\n    ctx.globalAlpha *= this.style.alpha;\n  }\n\n  /**\n   * Transforms the specified x and y position from the coordinate space of this object to the\n   * stage coordinate space.\n   * @param x The x position in the source object to transform.\n   * @param y The y position in the source object to transform.\n   * @returns A Point instance with x and y properties correlating to the transformed coordinates.\n   */\n  public localToGlobal(x: number, y: number): Point {\n    return this.getConcatenatedMatrix().transformPoint(x, y);\n  }\n\n  /**\n   * Transforms the specified x and y position from the stage coordinate space to the coordinate\n   * space of this object.\n   * @param x The x position in the source object to transform.\n   * @param y The y position in the source object to transform.\n   * @returns A Point instance with x and y properties correlating to the transformed coordinates.\n   */\n  public globalToLocal(x: number, y: number): Point {\n    return this.getConcatenatedMatrix()\n      .invert()\n      .transformPoint(x, y);\n  }\n\n  /**\n   * Transforms the specified x and y position from the coordinate space of this object to the\n   * coordinate space of the target object.\n   * @param x The x position in the source object to transform.\n   * @param y The y position on the source object to transform.\n   * @param target The target object to which the coordinates will be transformed.\n   * @returns Returns a Point instance with x and y properties correlating to the transformed\n   * position in the target's coordinate space.\n   */\n  public localToLocal(x: number, y: number, target: XObject): Point {\n    const pt = this.localToGlobal(x, y);\n    return target.globalToLocal(pt.x, pt.y);\n  }\n\n  /**\n   * Returns a matrix based on this object's current transform.\n   * @param matrix Optional. A Matrix2D object to populate with the calculated values.\n   * If null, a new Matrix2D object is returned.\n   * @return A matrix representing this object's transform.\n   */\n  public getMatrix(matrix?: Matrix2D): Matrix2D {\n    const mtx = (matrix && matrix.identity()) || new Matrix2D();\n    const cx = this.style.perspectiveOriginX.getValue(this.rect.width);\n    const cy = this.style.perspectiveOriginY.getValue(this.rect.height);\n    return mtx.appendTransform(\n      this.rect.x + cx + this.style.transformX.getValue(this.rect.width),\n      this.rect.y + cy + this.style.transformY.getValue(this.rect.height),\n      this.style.scaleX,\n      this.style.scaleY,\n      this.style.rotation,\n      this.style.skewX,\n      this.style.skewY,\n      cx,\n      cy\n    );\n  }\n\n  /**\n   * Generates a Matrix2D object representing the combined transform of the object and all of its\n   * parent Containers up to the stage. This can be used to transform positions between coordinate\n   * spaces.\n   * @param matrix A Matrix2D object to populate with the calculated values. If null, a new\n   * Matrix2D object is returned.\n   * @returnsThe combined matrix.\n   */\n  public getConcatenatedMatrix(matrix?: Matrix2D): Matrix2D {\n    const mtx = this.getMatrix(matrix);\n    let o: XObject | undefined = this.parent;\n    while (o) {\n      mtx.prependMatrix(o.getMatrix());\n      o = o.parent;\n    }\n    return mtx;\n  }\n\n  /**\n   * Checks the given location should trigger a click event or not.\n   * @param x The x position to test.\n   * @param y The y position to test.\n   * @returns True if it should trigger a click event, false otherwise.\n   */\n  public hitTest(x: number, y: number): boolean {\n    return x >= 0 && x < this.rect.width && y >= 0 && y < this.rect.height;\n  }\n\n  /**\n   * Calculates size of current object.\n   */\n  public layout() {\n    this.calculateSize();\n  }\n\n  /**\n   * Calculates size of current object.\n   */\n  public calculateSize() {\n    if (!this.parent) {\n      return;\n    }\n    LayoutUtils.updateSize(this, this.parent.getWidth(), this.parent.getHeight());\n  }\n\n  /**\n   * Applies the style map to current object.\n   * @param style Style map to apply.\n   * @returns The current instance. Useful for chaining method calls.\n   */\n  public css(style: { [key: string]: string | number }): XObject {\n    this.style.apply(style);\n    return this;\n  }\n\n  /**\n   * Returns line height of this object.\n   * @returns Line height of this object.\n   */\n  public getLineHeight(): number {\n    if (this.style.font) {\n      if (this.style.lineHeight) {\n        return this.style.lineHeight.getValue(this.style.font.size);\n      } else if (this.style.font.lineHeight) {\n        return this.style.font.lineHeight.getValue(this.style.font.size);\n      } else {\n        return this.style.font.size;\n      }\n    } else {\n      if (this.style.lineHeight) {\n        return this.style.lineHeight.getValue(0);\n      } else {\n        return 0;\n      }\n    }\n  }\n\n  /**\n   * Returns width of this object, including content width, padding width and border width.\n   * @returns Width of this object.\n   */\n  public getWidth(): number {\n    return this.rect.width;\n  }\n\n  /**\n   * Returns height of this object, including content height, padding height and border height.\n   * @returns Height of this object.\n   */\n  public getHeight(): number {\n    return this.rect.height;\n  }\n\n  /**\n   * Returns padding width of this object.\n   * @returns Padding width of this object.\n   */\n  public getPaddingWidth(): number {\n    return (\n      this.rect.width -\n      (this.style.borderLeft ? this.style.borderLeft.width : 0) -\n      (this.style.borderRight ? this.style.borderRight.width : 0)\n    );\n  }\n\n  /**\n   * Returns padding height of this object.\n   * @returns Padding height of this object.\n   */\n  public getPaddingHeight(): number {\n    return (\n      this.rect.height -\n      (this.style.borderTop ? this.style.borderTop.width : 0) -\n      (this.style.borderBottom ? this.style.borderBottom.width : 0)\n    );\n  }\n\n  /**\n   * Returns padding rect of this object.\n   * @returns Padding rect of this object.\n   */\n  public getPaddingRect(): Rect {\n    const rect = new Rect(0, 0, this.rect.width, this.rect.height);\n    if (this.style.borderLeft) {\n      rect.x += this.style.borderLeft.width;\n      rect.width -= this.style.borderLeft.width;\n    }\n    if (this.style.borderRight) {\n      rect.width -= this.style.borderRight.width;\n    }\n\n    if (this.style.borderTop) {\n      rect.y += this.style.borderTop.width;\n      rect.height -= this.style.borderTop.width;\n    }\n    if (this.style.borderBottom) {\n      rect.height -= this.style.borderBottom.width;\n    }\n    return rect;\n  }\n\n  /**\n   * Returns content width of this object.\n   * @returns Content width of this object.\n   */\n  public getContentWidth(): number {\n    return (\n      this.rect.width -\n      (this.style.paddingLeft ? this.style.paddingLeft.getValue(this.rect.width) : 0) -\n      (this.style.paddingRight ? this.style.paddingRight.getValue(this.rect.width) : 0) -\n      (this.style.borderLeft ? this.style.borderLeft.width : 0) -\n      (this.style.borderRight ? this.style.borderRight.width : 0)\n    );\n  }\n\n  /**\n   * Returns content height of this object.\n   * @returns content height of this object.\n   */\n  public getContentHeight(): number {\n    return (\n      this.rect.height -\n      (this.style.paddingTop ? this.style.paddingTop.getValue(this.rect.height) : 0) -\n      (this.style.paddingBottom ? this.style.paddingBottom.getValue(this.rect.height) : 0) -\n      (this.style.borderTop ? this.style.borderTop.width : 0) -\n      (this.style.borderBottom ? this.style.borderBottom.width : 0)\n    );\n  }\n\n  /**\n   * Returns content rect of this object.\n   * @returns content rect of this object.\n   */\n  public getContentRect(): Rect {\n    const rect = new Rect(0, 0, this.rect.width, this.rect.height);\n    if (this.style.paddingLeft) {\n      const left = this.style.paddingLeft.getValue(this.rect.width);\n      rect.x += left;\n      rect.width -= left;\n    }\n    if (this.style.paddingRight) {\n      rect.width -= this.style.paddingRight.getValue(this.rect.width);\n    }\n    if (this.style.paddingTop) {\n      const top = this.style.paddingTop.getValue(this.rect.height);\n      rect.y += top;\n      rect.height -= top;\n    }\n    if (this.style.paddingBottom) {\n      rect.height -= this.style.paddingBottom.getValue(this.rect.height);\n    }\n\n    if (this.style.borderLeft) {\n      rect.x += this.style.borderLeft.width;\n      rect.width -= this.style.borderLeft.width;\n    }\n    if (this.style.borderRight) {\n      rect.width -= this.style.borderRight.width;\n    }\n\n    if (this.style.borderTop) {\n      rect.y += this.style.borderTop.width;\n      rect.height -= this.style.borderTop.width;\n    }\n    if (this.style.borderBottom) {\n      rect.height -= this.style.borderBottom.width;\n    }\n    return rect;\n  }\n\n  /**\n   * Returns outer width of this object.\n   * @returns Outer width of this object.\n   */\n  public getOuterWidth(): number {\n    const parentWidth = this.parent ? this.parent.getWidth() : 0;\n    return (\n      this.rect.width +\n      (this.style.marginLeft ? this.style.marginLeft.getValue(parentWidth) : 0) +\n      (this.style.marginRight ? this.style.marginRight.getValue(parentWidth) : 0)\n    );\n  }\n\n  /**\n   * Returns outer height of this object.\n   * @returns Outer height of this object.\n   */\n  public getOuterHeight(): number {\n    const parentHeight = this.parent ? this.parent.getHeight() : 0;\n    return (\n      this.rect.height +\n      (this.style.marginTop ? this.style.marginTop.getValue(parentHeight) : 0) +\n      (this.style.marginBottom ? this.style.marginBottom.getValue(parentHeight) : 0)\n    );\n  }\n\n  /**\n   * Checks it this object is a child of the given object.\n   * @param element The object to check with.\n   * @returns True if this object is a child of the given object, false otherwise.\n   */\n  public isChildOf(element: XObject): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent === element) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  /**\n   * Returns a string representation of this object.\n   * @returns a string representation of this object.\n   */\n  public toString() {\n    return `[XObject (id=${this.id})]`;\n  }\n\n  /**\n   * Do dispatch a touch event to a this element.\n   * @param event The event to be dispatched.\n   */\n  private doDispatchEvent(event: TouchEvent) {\n    event.currentTarget = this;\n    if (event.stage) {\n      if (this.willTrigger(event.type)) {\n        const pt = event.stage.localToLocal(event.stageX, event.stageY, this);\n        event.x = pt.x;\n        event.y = pt.y;\n      }\n    }\n    super.dispatchEvent(event);\n  }\n}\n","export { Runtime } from './Runtime';\nexport { Stage, StageOptions } from './components/Stage';\nexport { Ticker } from './Ticker';\nexport { AnimationFactory } from './animation/AnimationFactory';\nexport { AnimateEvent } from './animation/Animation';\nexport { Animation } from './animation/Animation';\nexport { Linear } from './animation/AlgorithmFactory';\nexport { PowIn } from './animation/AlgorithmFactory';\nexport { PowOut } from './animation/AlgorithmFactory';\nexport { PowInOut } from './animation/AlgorithmFactory';\nexport { SineIn } from './animation/AlgorithmFactory';\nexport { SineOut } from './animation/AlgorithmFactory';\nexport { SineInOut } from './animation/AlgorithmFactory';\nexport { BackIn } from './animation/AlgorithmFactory';\nexport { BackOut } from './animation/AlgorithmFactory';\nexport { BackInOut } from './animation/AlgorithmFactory';\nexport { CircIn } from './animation/AlgorithmFactory';\nexport { CircOut } from './animation/AlgorithmFactory';\nexport { CircInOut } from './animation/AlgorithmFactory';\nexport { BounceOut } from './animation/AlgorithmFactory';\nexport { BounceIn } from './animation/AlgorithmFactory';\nexport { BounceInOut } from './animation/AlgorithmFactory';\nexport { ElasticIn } from './animation/AlgorithmFactory';\nexport { ElasticOut } from './animation/AlgorithmFactory';\nexport { ElasticInOut } from './animation/AlgorithmFactory';\nexport { AlgorithmFactory } from './animation/AlgorithmFactory';\nexport { ApngData, ApngParser } from './parser/ApngParser';\nexport { Matrix2D } from './base/Matrix2D';\nexport { Point } from './base/Point';\nexport { Rect } from './base/Rect';\nexport { RoundRect } from './base/RoundRect';\nexport { Color } from './base/Color';\nexport { Event as XEvent } from './base/Event';\nexport { EventDispatcher } from './base/Event';\nexport { TouchEvent as XActionEvent } from './components/XObject';\nexport { XObject } from './components/XObject';\nexport { Text } from './components/Text';\nexport { Container } from './components/Container';\nexport { Img } from './components/Img';\nexport { Sprite, SpriteSheet, SpriteFrame } from './components/Sprite';\nexport { HtmlParser as Parser } from './parser/HtmlParser';\nexport { ResourceRegistry, ResourceType } from './resource/ResourceRegistry';\nexport { Border } from './style/Border';\nexport { Shadow } from './style/Shadow';\nexport { LineHeight } from './style/LineHeight';\nexport { Font } from './style/Font';\nexport { Background } from './style/Background';\nexport { BaseValue } from './base/BaseValue';\nexport { Style } from './style/Style';\nexport { EnumUtils } from './utils/EnumUtils';\nexport { CRC32 } from './utils/CRC32';\nexport { Delay } from './utils/Delay';\nexport { StringUtils } from './utils/StringUtils';\nexport { LayoutUtils } from './utils/LayoutUtils';\nexport { DrawUtils } from './utils/DrawUtils';\n","import { CRC32 } from '../utils/CRC32';\n\nexport class ApngData {\n  width: number;\n  height: number;\n  duration: number = 0;\n  numPlays: number = 0;\n  frames: ApngFrame[] = [];\n}\n\nexport class ApngFrame {\n  left: number = 0;\n  top: number = 0;\n  width: number = 0;\n  height: number = 0;\n  delay: number = 0;\n  disposeOp: number = 0;\n  blendOp: number = 0;\n  dataParts: Uint8Array[] = [];\n  image: HTMLImageElement | undefined;\n}\n\n// '\\x89PNG\\x0d\\x0a\\x1a\\x0a'\nconst PNG_SIGNATURE = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n\nfunction toUint32(data: string): number {\n  return (\n    // tslint:disable-next-line: no-bitwise\n    (data.charCodeAt(0) << 24) |\n    // tslint:disable-next-line: no-bitwise\n    (data.charCodeAt(1) << 16) |\n    // tslint:disable-next-line: no-bitwise\n    (data.charCodeAt(2) << 8) |\n    data.charCodeAt(3)\n  );\n}\n\nfunction toDWordArray(x: number): number[] {\n  // tslint:disable-next-line: no-bitwise\n  return [(x >>> 24) & 0xff, (x >>> 16) & 0xff, (x >>> 8) & 0xff, x & 0xff];\n}\n\nconst IHDR = toUint32('IHDR');\nconst acTL = toUint32('acTL');\nconst IDAT = toUint32('IDAT');\nconst fcTL = toUint32('fcTL');\nconst fdAT = toUint32('fdAT');\nconst IEND = toUint32('IEND');\n\ntype Chunk = {\n  type: number;\n  start: number;\n  end: number;\n};\n\nexport class ApngParser {\n  public static parse(buffer: ArrayBuffer, silent: boolean = false): ApngData | undefined {\n    const bytes = new Uint8Array(buffer);\n\n    // Check signature.\n    for (let i = 0; i < PNG_SIGNATURE.length; ++i) {\n      if (PNG_SIGNATURE[i] !== bytes[i]) {\n        if (!silent) {\n          console.warn('not a png file');\n        }\n        return undefined;\n      }\n    }\n\n    const chunks = this.toChunks(bytes);\n    const preDataParts = [];\n    const postDataParts = [];\n    let headerDataBytes: Uint8Array = null;\n    let frame = null;\n\n    const apng = new ApngData();\n    const dataView = new DataView(bytes.buffer);\n    for (const chunk of chunks) {\n      switch (chunk.type) {\n        case IHDR:\n          headerDataBytes = bytes.subarray(chunk.start + 8, chunk.end - 4);\n          apng.width = dataView.getUint32(chunk.start + 8);\n          apng.height = dataView.getUint32(chunk.start + 8 + 4);\n          break;\n        case acTL:\n          apng.numPlays = dataView.getUint32(chunk.start + 8);\n          break;\n        case fcTL:\n          frame = new ApngFrame();\n          apng.frames.push(frame);\n          frame.width = dataView.getUint32(chunk.start + 8 + 4);\n          frame.height = dataView.getUint32(chunk.start + 8 + 8);\n          frame.left = dataView.getUint32(chunk.start + 8 + 12);\n          frame.top = dataView.getUint32(chunk.start + 8 + 16);\n          const delayN = dataView.getUint16(chunk.start + 8 + 20);\n          let delayD = dataView.getUint16(chunk.start + 8 + 22);\n          if (delayD === 0) {\n            delayD = 100;\n          }\n          frame.delay = (1000 * delayN) / delayD;\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=125137\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=139677\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=207059\n          if (frame.delay <= 10) {\n            frame.delay = 100;\n          }\n          apng.duration += frame.delay;\n          frame.disposeOp = dataView.getUint8(chunk.start + 8 + 24);\n          frame.blendOp = dataView.getUint8(chunk.start + 8 + 25);\n          frame.dataParts = [];\n          if (apng.frames.length === 1 && frame.disposeOp === 2) {\n            frame.disposeOp = 1;\n          }\n          break;\n        case fdAT:\n          if (frame) {\n            // This is an animation frame, the frist 4 byte of the data contains metadata which is not required\n            // for a static frame, delete it.\n            frame.dataParts.push(\n              this.makeChunk(IDAT, bytes.subarray(chunk.start + 12, chunk.end - 4))\n            );\n          } else if (!silent) {\n            console.warn('invalid fdAT chunk before frame');\n          }\n          break;\n        case IDAT:\n          // This a normal PNG data frame.\n          if (frame) {\n            frame.dataParts.push(\n              this.makeChunk(IDAT, bytes.subarray(chunk.start + 8, chunk.end - 4))\n            );\n          } else if (!silent) {\n            console.warn('invalid IDAT chunk before frame');\n          }\n          break;\n        case IEND:\n          postDataParts.push(bytes.subarray(chunk.start, chunk.end));\n          break;\n        default:\n          preDataParts.push(bytes.subarray(chunk.start, chunk.end));\n      }\n    }\n\n    if (apng.frames.length === 0) {\n      if (!silent) {\n        console.warn('not a png file');\n      }\n      return undefined;\n    }\n\n    const preBlob = new Blob(preDataParts);\n    const postBlob = new Blob(postDataParts);\n\n    // Generates the static frames.\n    for (const frm of apng.frames) {\n      let imageData = [];\n      imageData.push(PNG_SIGNATURE);\n      // Update the static frame size.\n      headerDataBytes.set(toDWordArray(frm.width), 0);\n      headerDataBytes.set(toDWordArray(frm.height), 4);\n      imageData.push(this.makeChunk(IHDR, headerDataBytes));\n      imageData.push(preBlob);\n      for (const part of frm.dataParts) {\n        imageData.push(part);\n      }\n      imageData.push(postBlob);\n      delete frm.dataParts;\n      const url = URL.createObjectURL(new Blob(imageData, { type: 'image/png' }));\n      imageData = null;\n      const image = new Image();\n      frm.image = image;\n      image.onload = () => {\n        URL.revokeObjectURL(image.src);\n      };\n      image.src = url;\n    }\n\n    return apng;\n  }\n\n  private static toChunks(bytes: Uint8Array): Chunk[] | undefined {\n    const chunks: Chunk[] = [];\n    const dataView = new DataView(bytes.buffer);\n    let position = 8; // Skip the signature in header.\n    // A valid chunk should be >= 12 bytes.\n    while (position <= bytes.length - 12) {\n      // First 4 bytes present chunk length.\n      const length = dataView.getUint32(position);\n      if (length < 0 || position + 12 + length > bytes.length) {\n        console.warn(\n          'invalid chunk length, position=' +\n            position +\n            ' length=' +\n            length +\n            ' total=' +\n            bytes.length\n        );\n        return undefined;\n      }\n      // Next 4 bytes present chunk type.\n      const type = dataView.getUint32(position + 4);\n      chunks.push({\n        type,\n        start: position,\n        end: position + length + 12\n      });\n      // The tail 4 bytes present CRC digest, ignore it.\n      // TODO: validate it.\n      position += 12 + length;\n      if (type === IEND) {\n        break;\n      }\n    }\n    return chunks;\n  }\n\n  private static makeChunk(type: number, data: Uint8Array) {\n    const bytes = new Uint8Array(data.length + 12);\n    const dataView = new DataView(bytes.buffer);\n\n    dataView.setUint32(0, data.length);\n    dataView.setUint32(4, type);\n    bytes.set(data, 8);\n    const crc = CRC32.calculate(bytes, 4, data.length + 4);\n    dataView.setUint32(data.length + 8, crc);\n    return bytes;\n  }\n}\n","type Func = {\n  name: string;\n  arguments: string[];\n};\n\nenum State {\n  START = 0,\n  VALUE = 1,\n  FUNC = 2\n}\n\n/**\n * This class provides an util function to tokenize a string to a list of token (string).\n */\nexport class CSSTokenizer {\n  private splitter: string = '';\n\n  constructor(splitter: string = '') {\n    this.splitter = splitter;\n  }\n  /**\n   * Checks whether a character is blank.\n   * @param ch the character to be checked.\n   * @returns true if the character is one of ' ', '\\t', '\\r', '\\n'; false otherwise.\n   */\n  private isSplitter(ch: string): boolean {\n    return (\n      ch === ' ' || ch === '\\t' || ch === '\\r' || ch === '\\n' || this.splitter.indexOf(ch) >= 0\n    );\n  }\n\n  /**\n   * Convert the input string to a Func object.\n   * @param content the input string.\n   * @param [silent] if ture, ignore warning for an invalid value.\n   * @returns a Func object for valid content, undefined otherwise.\n   */\n  public tokenize(content: string): string[] {\n    const len = content.length;\n    const result: string[] = [];\n\n    let state = State.START;\n    let tokenQuota = '';\n    let start = 0;\n\n    for (let i = 0; i < len; ++i) {\n      const ch = content[i];\n      switch (state) {\n        case State.START:\n          if (!this.isSplitter(ch)) {\n            start = i;\n            state = State.VALUE;\n            if (ch === \"'\" || ch === '\"') {\n              tokenQuota = ch;\n            } else {\n              tokenQuota = '';\n            }\n          }\n          break;\n        case State.VALUE:\n          if (tokenQuota !== '') {\n            if (ch === tokenQuota) {\n              state = State.START;\n              result.push(content.substring(start + 1, i));\n            }\n          } else if (ch === '(') {\n            state = State.FUNC;\n          } else if (this.isSplitter(ch)) {\n            state = State.START;\n            result.push(content.substring(start, i));\n          }\n          break;\n        case State.FUNC:\n          if (ch === ')') {\n            state = State.START;\n            result.push(content.substring(start, i + 1));\n          }\n          break;\n      }\n    }\n    if (state !== State.START) {\n      if (tokenQuota === '') {\n        result.push(content.substring(start));\n      } else {\n        result.push(content.substring(start + 1));\n      }\n    }\n    return result;\n  }\n}\n","type Func = {\n  name: string;\n  arguments: string[];\n};\n\nenum State {\n  NAME_START = 0,\n  NAME = 1,\n  NAME_END = 2,\n  PARAMETER_START = 3,\n  PARAMETER = 4,\n  PARAMETER_END = 5,\n  END = 6\n}\n\n/**\n * This class provides an util function to parse a string to a Func object.\n */\nexport class FunctionParser {\n  /**\n   * Checks whether a character is blank.\n   * @param ch the character to be checked.\n   * @returns true if the character is one of ' ', '\\t', '\\r', '\\n'; false otherwise.\n   */\n  private static isBlank(ch: string): boolean {\n    return ch === ' ' || ch === '\\t' || ch === '\\r' || ch === '\\n';\n  }\n\n  /**\n   * Convert the input string to a Func object.\n   * @param content the input string.\n   * @param [silent] if ture, ignore warning for an invalid value.\n   * @returns a Func object for valid content, undefined otherwise.\n   */\n  public static parse(content: string, silent = false): Func | undefined {\n    const func: Func = {\n      name: undefined,\n      arguments: []\n    };\n\n    let state = State.NAME_START;\n    let parameterQuota = '';\n    let start = 0;\n    const len = content.length;\n    let i = 0;\n    for (; i < len; ++i) {\n      const ch = content[i];\n      switch (state) {\n        case State.NAME_START:\n          if (!this.isBlank(ch)) {\n            start = i;\n            state = State.NAME;\n          }\n          break;\n        case State.NAME:\n          if (this.isBlank(ch) || ch === ')') {\n            if (!silent) {\n              console.warn('invalid function:' + content);\n            }\n            return undefined;\n          } else if (ch === '(') {\n            func.name = content.substring(start, i);\n            state = ch === '(' ? State.PARAMETER_START : State.NAME_END;\n          }\n          break;\n        case State.NAME_END:\n          if (ch === '(') {\n            state = State.PARAMETER_START;\n            break;\n          } else if (!this.isBlank(ch)) {\n            if (!silent) {\n              console.warn('invalid function:' + content);\n            }\n            return undefined;\n          }\n        case State.PARAMETER_START:\n          if (this.isBlank(ch)) {\n            break;\n          } else if (ch === '\"' || ch === \"'\") {\n            state = State.PARAMETER;\n            start = i + 1;\n            parameterQuota = ch;\n          } else if (ch === ')') {\n            state = State.END;\n          } else if (ch === ',') {\n            if (!silent) {\n              console.warn('invalid function:' + content);\n            }\n            return undefined;\n          } else {\n            state = State.PARAMETER;\n            start = i;\n            parameterQuota = '';\n          }\n          break;\n        case State.PARAMETER:\n          if (parameterQuota !== '') {\n            if (parameterQuota === ch) {\n              state = State.PARAMETER_END;\n              func.arguments.push(content.substring(start, i));\n              parameterQuota = '';\n            }\n          } else {\n            if (this.isBlank(ch)) {\n              state = State.PARAMETER_END;\n              func.arguments.push(content.substring(start, i));\n              parameterQuota = '';\n            } else if (ch === ',') {\n              state = State.PARAMETER_START;\n              func.arguments.push(content.substring(start, i));\n              parameterQuota = '';\n            } else if (ch === ')') {\n              state = State.END;\n              func.arguments.push(content.substring(start, i));\n              parameterQuota = '';\n            }\n          }\n          break;\n        case State.PARAMETER_END:\n          if (this.isBlank(ch)) {\n            break;\n          } else if (ch === ',') {\n            state = State.PARAMETER_START;\n          } else if (ch === ')') {\n            state = State.END;\n          }\n          break;\n        case State.END:\n          if (!this.isBlank(ch)) {\n            if (!silent) {\n              console.warn('invalid function:' + content);\n            }\n            return undefined;\n          }\n          break;\n      }\n    }\n    if (state !== State.END) {\n      if (!silent) {\n        console.warn('invalid function:' + content);\n      }\n      return undefined;\n    }\n    return func;\n  }\n}\n","import { Apng } from '../components/Apng';\nimport { Container } from '../components/Container';\nimport { Img } from '../components/Img';\nimport { Sprite } from '../components/Sprite';\nimport { Text } from '../components/Text';\nimport { XObject } from '../components/XObject';\nimport { Style } from '../style/Style';\n\ntype Node = {\n  tag: string;\n  attributes: { [key: string]: string };\n  children: Node[];\n  text?: string;\n  parent?: Node;\n};\n\nenum ParseState {\n  START = 1,\n  TAG = 2,\n  TEXT = 3\n}\n\nenum AttrState {\n  PENDING = 0,\n  START = 1,\n  NAME = 2,\n  EQ = 3,\n  VALUE = 4,\n  VALUE_STARTED = 5\n}\n\nexport class HtmlParser {\n  public static registerTag(tag: string, componentClass: typeof XObject) {\n    this.tagMap[tag.toLowerCase()] = componentClass;\n  }\n\n  private static tagMap: { [key: string]: typeof XObject } = {};\n\n  public parse(content: string): XObject[] {\n    const result: XObject[] = [];\n    const nodes = this.parseHtml(content);\n    for (const node of nodes) {\n      const child = this.node2Component(node);\n      if (child) {\n        result.push(child);\n      }\n    }\n    return result;\n  }\n\n  private parseHtml(content: string): Node[] {\n    const nodes: Node[] = [];\n    const queue: Node[] = [];\n    const len = content.length;\n    let state = ParseState.START;\n    let tagStart = 0;\n    let tag: string | null = null;\n    let inQuota = false;\n    let quota: string | null = null;\n    let attrState = AttrState.PENDING;\n    let attrStart = 0;\n    let attrName: string = '';\n    let attrQuota: string | null = null;\n    let attr = {};\n\n    let i = 0;\n    for (; i < len; ++i) {\n      const ch = content[i];\n      switch (state) {\n        case ParseState.START:\n          if (ch === '<') {\n            tagStart = i;\n            tag = null;\n            state = ParseState.TAG;\n            attrState = AttrState.PENDING;\n            attrStart = 0;\n            attrName = '';\n            attrQuota = null;\n            attr = {};\n          } else {\n            tagStart = i;\n            state = ParseState.TEXT;\n          }\n          break;\n        case ParseState.TAG:\n          if (\n            !tag &&\n            (this.isSplitter(ch) || ch === '>' || ch === '/' || ch === '\"' || ch === \"'\")\n          ) {\n            tag = content.substring(tagStart + 1, i);\n            attrState = AttrState.START;\n          }\n          if (tag === null) {\n            break;\n          }\n          if (inQuota) {\n            if (ch === quota) {\n              inQuota = false;\n            }\n          } else {\n            if (ch === \"'\" || ch === '\"') {\n              inQuota = true;\n              quota = ch;\n            }\n          }\n          if (ch === '>' && !inQuota) {\n            switch (attrState) {\n              case AttrState.NAME:\n                attrName = content.substring(attrStart, i);\n                this.addAttr(attr, attrName, '');\n                break;\n              case AttrState.EQ:\n                this.addAttr(attr, attrName, '');\n                break;\n              case AttrState.VALUE:\n              case AttrState.VALUE_STARTED:\n                this.addAttr(attr, attrName, content.substring(attrStart, i));\n                break;\n            }\n            if (tag.substring(0, 3) === '!--') {\n              if (i - tagStart >= 6 && content.substring(i - 2, i) === '--') {\n                state = ParseState.START;\n              }\n              break;\n            }\n            if (tag && tag[0] === '/') {\n              tag = tag.substring(1);\n              let find = false;\n              for (const n of queue) {\n                if (n.tag === tag) {\n                  find = true;\n                }\n              }\n              if (find) {\n                while (queue.length > 0) {\n                  const node = queue.pop();\n                  if (!node || node.tag === tag) {\n                    break;\n                  }\n                }\n              }\n              state = ParseState.START;\n            } else {\n              const node: Node = {\n                children: [],\n                tag,\n                attributes: attr\n              };\n              attr = {};\n              if (queue.length > 0) {\n                node.parent = queue[queue.length - 1];\n                queue[queue.length - 1].children.push(node);\n              } else {\n                nodes.push(node);\n              }\n              if (!this.isCloseTag(tag)) {\n                queue.push(node);\n              }\n              state = ParseState.START;\n            }\n          } else {\n            switch (attrState) {\n              case AttrState.START:\n                if (!this.isSplitter(ch) && ch !== '/') {\n                  attrStart = i;\n                  attrState = AttrState.NAME;\n                }\n                attrQuota = null;\n                break;\n              case AttrState.NAME:\n                if (this.isSplitter(ch)) {\n                  attrName = content.substring(attrStart, i);\n                  attrState = AttrState.EQ;\n                } else if (ch === '=') {\n                  attrName = content.substring(attrStart, i);\n                  attrStart = i + 1;\n                  attrState = AttrState.VALUE;\n                }\n                break;\n              case AttrState.EQ:\n                if (this.isSplitter(ch)) {\n                  break;\n                }\n                if (ch === '=') {\n                  attrState = AttrState.VALUE;\n                  attrStart = i + 1;\n                } else {\n                  this.addAttr(attr, attrName, '');\n                  attrState = AttrState.START;\n                }\n                break;\n              case AttrState.VALUE:\n                if (this.isSplitter(ch)) {\n                  break;\n                }\n                if (ch === '\"' || ch === \"'\") {\n                  attrQuota = ch;\n                  attrStart = i + 1;\n                } else {\n                  attrQuota = null;\n                  attrStart = i;\n                }\n                attrState = AttrState.VALUE_STARTED;\n                break;\n              case AttrState.VALUE_STARTED:\n                let end = false;\n                const attrEnd = i;\n                if (attrQuota) {\n                  if (ch === attrQuota) {\n                    end = true;\n                  }\n                } else if (!attrQuota && this.isSplitter(ch)) {\n                  end = true;\n                }\n                if (end) {\n                  this.addAttr(attr, attrName, content.substring(attrStart, attrEnd));\n                  attrName = '';\n                  attrState = AttrState.START;\n                }\n                break;\n            }\n          }\n          break;\n        case ParseState.TEXT:\n          if (ch === '<') {\n            if (tagStart < i) {\n              const text = content.substring(tagStart, i).trim();\n              if (text.length > 0) {\n                const node: Node = {\n                  children: [],\n                  tag: 'TEXT',\n                  text,\n                  attributes: {}\n                };\n                if (queue.length > 0) {\n                  node.parent = queue[queue.length - 1];\n                  queue[queue.length - 1].children.push(node);\n                } else {\n                  nodes.push(node);\n                }\n              }\n            }\n            state = ParseState.TAG;\n            tag = null;\n            tagStart = i;\n            attrState = AttrState.PENDING;\n            attrStart = 0;\n            attrName = '';\n            attrQuota = null;\n            attr = {};\n          }\n          break;\n      }\n    }\n    switch (state) {\n      case ParseState.TEXT:\n        if (tagStart < i) {\n          const text = content.substring(tagStart, i).trim();\n          if (text.length > 0) {\n            const node: Node = {\n              children: [],\n              tag: 'TEXT',\n              text,\n              attributes: {}\n            };\n            if (queue.length > 0) {\n              node.parent = queue[queue.length - 1];\n              queue[queue.length - 1].children.push(node);\n            } else {\n              nodes.push(node);\n            }\n          }\n        }\n        break;\n    }\n    for (const node of nodes) {\n      this.trimTextNode(node);\n    }\n    return nodes;\n  }\n\n  private trimTextNode(node: Node) {\n    if (node.children.length === 1 && node.children[0].tag === 'TEXT') {\n      node.text = node.children[0].text;\n      node.children.length = 0;\n    } else {\n      for (const child of node.children) {\n        this.trimTextNode(child);\n      }\n    }\n  }\n\n  private node2Component(node: Node): XObject | undefined {\n    const type = HtmlParser.tagMap[node.tag.toLowerCase()];\n    if (!type) {\n      console.warn('unknow tag:' + node.tag.toLowerCase());\n      return undefined;\n    }\n    const style = Style.of(node.attributes.style || '');\n    const options = {\n      attributes: node.attributes,\n      style,\n      text: node.text\n    };\n    const component = new type(options);\n    if (node.children.length > 0) {\n      if (component instanceof Container) {\n        for (const child of node.children) {\n          const childComponent = this.node2Component(child);\n          if (childComponent) {\n            (component as Container).addChild(childComponent);\n          }\n        }\n      } else {\n        console.warn('component is not a container:' + component);\n      }\n    }\n    return component;\n  }\n\n  private isSplitter(ch: string): boolean {\n    return ch === ' ' || ch === '\\r' || ch === '\\n' || ch === '\\t';\n  }\n\n  private isCloseTag(tag: string): boolean {\n    return tag === 'img';\n  }\n\n  private addAttr(attr: any, name: string, value: any) {\n    attr[name.toLowerCase()] = value;\n  }\n}\n\nHtmlParser.registerTag('text', Text);\nHtmlParser.registerTag('container', Container);\nHtmlParser.registerTag('div', Container);\nHtmlParser.registerTag('img', Img);\nHtmlParser.registerTag('sprite', Sprite);\nHtmlParser.registerTag('apng', Apng);\n","import { Event, EventDispatcher } from '../base/Event';\n\nclass LoaderEvent extends Event {\n  public readonly target: Loader;\n  public response: any;\n  constructor(target: Loader, type: string, response?: any) {\n    super(type);\n    this.target = target;\n    this.response = response;\n  }\n}\n\nexport class Loader extends EventDispatcher<LoaderEvent> {\n  private url: string;\n  private method: string;\n  private responseType: XMLHttpRequestResponseType;\n  private xhr: XMLHttpRequest;\n  public totalBytes: number;\n  public loadedBytes: number;\n\n  constructor(url: string, method: string = 'GET', responseType: XMLHttpRequestResponseType = '') {\n    super();\n    this.url = url;\n    this.method = method;\n    this.responseType = responseType;\n    this.totalBytes = 0;\n    this.loadedBytes = 0;\n    this.download();\n  }\n\n  download() {\n    if (this.xhr) {\n      return;\n    }\n    this.xhr = new XMLHttpRequest();\n    this.xhr.responseType = this.responseType;\n    this.xhr.open(this.method, this.url, true);\n\n    this.xhr.onload = () => {\n      if (this.xhr.status === 200) {\n        this.dispatchEvent(new LoaderEvent(this, 'load', this.xhr.response));\n      }\n    };\n\n    this.xhr.onerror = event => {\n      this.dispatchEvent(new LoaderEvent(this, 'error'));\n    };\n\n    this.xhr.onprogress = event => {\n      if (event.lengthComputable) {\n        this.loadedBytes = event.loaded;\n        this.totalBytes = event.total;\n        this.dispatchEvent(new LoaderEvent(this, 'progress'));\n      }\n    };\n    this.xhr.send();\n  }\n}\n","import { Event, EventDispatcher } from '../base/Event';\nimport { SpriteSheet } from '../components/Sprite';\nimport { ApngParser } from '../parser/ApngParser';\nimport { Loader } from './Loader';\n\nexport enum LoadState {\n  LOADING = 1,\n  LOADED = 2,\n  ERROR = 3\n}\n\nexport enum ResourceType {\n  IMAGE = 1,\n  APNG = 2\n}\n\ntype Resource = HTMLImageElement | SpriteSheet;\ntype Resolve = (resource: Resource) => void;\ntype Reject = (error: any) => void;\n\ninterface IPromiseHandler {\n  resolve: Resolve;\n  reject: Reject;\n}\n\nexport type ResourceItem = {\n  url: string;\n  type: ResourceType;\n  resource?: Resource;\n  state: LoadState;\n  loadedBytes: number;\n  totalBytes: number;\n  error?: any;\n  progress: number;\n  promiseHandlers: IPromiseHandler[];\n};\n\nclass RegistryEvent extends Event {\n  progress: number;\n  constructor(type: string, progress: number) {\n    super(type);\n    this.progress = progress;\n  }\n}\n\nexport class ResourceRegistry extends EventDispatcher<RegistryEvent> {\n  public add(url: string, type: ResourceType): Promise<Resource> {\n    return new Promise<Resource>((resolve, reject) => {\n      for (const item of this.items) {\n        if (item.url === url) {\n          if (item.state === LoadState.LOADED) {\n            resolve(item.resource);\n          } else if (item.state === LoadState.ERROR) {\n            reject(item.error);\n          } else {\n            item.promiseHandlers.push({\n              resolve,\n              reject\n            });\n          }\n          return;\n        }\n      }\n\n      const newItem: ResourceItem = {\n        url,\n        type,\n        resource: undefined,\n        state: LoadState.LOADING,\n        progress: 0,\n        loadedBytes: 0,\n        totalBytes: 0,\n        promiseHandlers: [{ resolve, reject }]\n      };\n      this.items.push(newItem);\n      this.load(newItem);\n    });\n  }\n\n  private load(item: ResourceItem) {\n    switch (item.type) {\n      case ResourceType.IMAGE:\n        this.loadImage(item);\n        break;\n      case ResourceType.APNG:\n        this.loadApng(item);\n        break;\n    }\n  }\n\n  private loadImage(item: ResourceItem) {\n    const loader = new Loader(item.url, 'GET', 'blob');\n    loader\n      .on('load', e => {\n        const url = URL.createObjectURL(e.response);\n        item.resource = new Image();\n        item.resource.src = url;\n        item.resource.onload = () => {\n          URL.revokeObjectURL(url);\n          this.onLoad(item);\n        };\n      })\n      .on('progress', e => {\n        item.loadedBytes = e.target.loadedBytes;\n        item.totalBytes = e.target.totalBytes;\n        this.onProgress(item);\n      })\n      .on('error', e => {\n        item.error = e;\n        this.onError(item);\n      });\n  }\n\n  private loadApng(item: ResourceItem) {\n    const loader = new Loader(item.url, 'GET', 'arraybuffer');\n    loader\n      .on('load', e => {\n        const apng = ApngParser.parse(e.response);\n        const opt: SpriteSheet = {\n          width: apng.width,\n          height: apng.height,\n          fps: (apng.frames.length * 1000) / apng.duration,\n          frames: [],\n          url: undefined,\n          image: undefined\n        };\n        for (const frame of apng.frames) {\n          opt.frames.push({\n            destX: frame.left,\n            destY: frame.top,\n            destWidth: frame.width,\n            destHeight: frame.height,\n            image: frame.image\n          });\n        }\n        item.resource = opt;\n        this.onLoad(item);\n      })\n      .on('progress', e => {\n        item.loadedBytes = e.target.loadedBytes;\n        item.totalBytes = e.target.totalBytes;\n        this.onProgress(item);\n      })\n      .on('error', e => {\n        item.error = e;\n        this.onError(item);\n      });\n  }\n\n  private getTotalProgress(): number {\n    let progress = 0;\n    for (const item of this.items) {\n      progress += item.progress;\n    }\n    return progress / this.items.length;\n  }\n\n  private onProgress(item: ResourceItem) {\n    item.progress = item.totalBytes > 0 ? item.loadedBytes / item.totalBytes : 0;\n    this.dispatchEvent(new RegistryEvent('progress', this.getTotalProgress()));\n  }\n\n  private onLoad(item: ResourceItem) {\n    item.state = LoadState.LOADED;\n    item.progress = 1;\n    item.loadedBytes = item.totalBytes;\n    for (const handler of item.promiseHandlers) {\n      handler.resolve(item.resource);\n    }\n    item.promiseHandlers = [];\n    let done = true;\n    for (const i of this.items) {\n      if (i.state !== LoadState.LOADED) {\n        done = false;\n        break;\n      }\n    }\n    if (done) {\n      this.dispatchEvent(new RegistryEvent('done', 1));\n    }\n  }\n\n  private onError(item: ResourceItem) {\n    item.state = LoadState.ERROR;\n    for (const handler of item.promiseHandlers) {\n      handler.reject(item.error);\n    }\n    item.promiseHandlers = [];\n    this.dispatchEvent(new RegistryEvent('error', this.getTotalProgress()));\n  }\n\n  public get(url: string): Resource | undefined {\n    for (const item of this.items) {\n      if (item.url === url) {\n        if (item.state === LoadState.LOADED) {\n          return item.resource;\n        } else {\n          return undefined;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  public release(url: string): ResourceItem | undefined {\n    for (let i = 0; i < this.items.length; ++i) {\n      const item = this.items[i];\n      if (item.url === url) {\n        this.items.splice(i, 1);\n        return item;\n      }\n    }\n    return undefined;\n  }\n\n  private items: ResourceItem[] = [];\n\n  static readonly DefaultInstance: ResourceRegistry = new ResourceRegistry();\n}\n","import { BaseValue, BaseValueUnit } from '../base/BaseValue';\nimport { Color } from '../base/Color';\nimport { Rect } from '../base/Rect';\nimport { RoundRect } from '../base/RoundRect';\nimport { XObject } from '../components/XObject';\nimport { ResourceRegistry, ResourceType } from '../resource/ResourceRegistry';\nimport { Runtime } from '../Runtime';\nimport { EnumUtils } from '../utils/EnumUtils';\nimport { StringUtils } from '../utils/StringUtils';\n\nexport enum BackgroundAttachment {\n  SCROLL = 'scroll'\n}\n\nexport enum BackgroundRepeat {\n  REPEAT = 'repeat',\n  NO_REPEAT = 'no-repeat',\n  SPACE = 'space',\n  ROUND = 'round'\n}\n\ninterface IBackgroundSource extends ICloneable<IBackgroundSource> {\n  getSource(width: number, height: number): any;\n  toString(): string;\n  destory(): void;\n}\n\ninterface ICloneable<T> {\n  clone(): T;\n}\n\n// Radial-gradient\n// repeating-linear-gradient\n// repeating-radial-gradient\nclass URLSource implements IBackgroundSource {\n  public static of(value: string[]): URLSource {\n    return new URLSource(value[0]);\n  }\n\n  private url: string;\n  constructor(url: string) {\n    this.url = url;\n    ResourceRegistry.DefaultInstance.add(url, ResourceType.IMAGE);\n  }\n\n  public getSource(width: number, height: number) {\n    return ResourceRegistry.DefaultInstance.get(this.url);\n  }\n\n  public toString(): string {\n    return `url(${this.url})`;\n  }\n\n  public clone(): IBackgroundSource {\n    return new URLSource(this.url);\n  }\n\n  public destory() {\n    return;\n  }\n}\n\nclass LinearGradientSource implements IBackgroundSource {\n  public static of(value: string[]): LinearGradientSource {\n    return new LinearGradientSource(value);\n  }\n\n  private parameters: string[];\n  private canvas?: HTMLCanvasElement;\n  constructor(value: string[]) {\n    this.parameters = value;\n  }\n\n  public getSource(width: number, height: number) {\n    if (this.parameters.length === 0) {\n      return undefined;\n    }\n    width = Math.round(width);\n    height = Math.round(height);\n    if (this.canvas && this.canvas.width === width && this.canvas.height === height) {\n      return this.canvas;\n    }\n    if (!this.canvas) {\n      this.canvas = Runtime.get().newCanvas();\n    }\n    if (this.canvas.width !== width) {\n      this.canvas.width = width;\n    }\n    if (this.canvas.height !== height) {\n      this.canvas.height = height;\n    }\n    const ctx = this.canvas.getContext('2d');\n    if (!ctx) {\n      return undefined;\n    }\n\n    let i = 0;\n    let gradient;\n    if (this.parameters[0].startsWith('to')) {\n      const where = this.parameters[0].substring(2).replace(/\\s+/g, '');\n      if (where === 'left') {\n        gradient = ctx.createLinearGradient(width - 1, 0, 0, 0);\n      } else if (where === 'right') {\n        gradient = ctx.createLinearGradient(0, 0, width - 1, 0);\n      } else if (where === 'top') {\n        gradient = ctx.createLinearGradient(0, height - 1, 0, 0);\n      } else if (where === 'bottom') {\n        gradient = ctx.createLinearGradient(0, 0, 0, height - 1);\n      } else if (where === 'lefttop') {\n        gradient = ctx.createLinearGradient(width - 1, height - 1, 0, 0);\n      } else if (where === 'leftbottom') {\n        gradient = ctx.createLinearGradient(width - 1, 0, 0, height - 1);\n      } else if (where === 'righttop') {\n        gradient = ctx.createLinearGradient(0, height - 1, width - 1, 0);\n      } else if (where === 'rightbottom') {\n        gradient = ctx.createLinearGradient(0, 0, width - 1, height - 1);\n      } else {\n        gradient = ctx.createLinearGradient(0, 0, 0, height - 1);\n      }\n      i++;\n    } else if (this.parameters[0].endsWith('deg')) {\n      // TODO: caculate by deg\n      // const deg = parseFloat(this.parameters[0]);\n      // const r = Math.sqrt(width * width / 4 + height * height * 4);\n      // const x = r * Math.\n      gradient = ctx.createLinearGradient(0, 0, width - 1, height - 1);\n      i++;\n    }\n\n    if (!gradient) {\n      gradient = ctx.createLinearGradient(0, 0, 0, height - 1);\n    }\n\n    for (let last = -1; i < this.parameters.length; ++i) {\n      const parts = this.parameters[i].split(/\\s+/);\n      const color = parts[0];\n      if (parts.length < 2) {\n        if (last === -1) {\n          last = 0;\n          gradient.addColorStop(0, color);\n        } else {\n          let next = 1;\n          let size = 0;\n          for (let j = i + 1; j < this.parameters.length; ++j) {\n            ++size;\n            const ps = this.parameters[j].split(/\\s+/);\n            if (ps.length > 1) {\n              next = parseFloat(ps[1]) / 100;\n              break;\n            }\n          }\n          if (size === 0) {\n            last = 1;\n          } else {\n            last = last + (next - last) / (size + 1);\n          }\n          gradient.addColorStop(last, color);\n        }\n      } else {\n        for (let j = 1; j < parts.length; ++j) {\n          last = parseFloat(parts[j]) / 100;\n          gradient.addColorStop(last, color);\n        }\n      }\n    }\n\n    // Set the fill style and draw a rectangle\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, width, height);\n\n    return this.canvas;\n  }\n\n  public toString(): string {\n    return `linear-gradient(${this.parameters.join(',')})`;\n  }\n\n  public clone(): IBackgroundSource {\n    return new LinearGradientSource(this.parameters);\n  }\n\n  public destory() {\n    if (this.canvas) {\n      Runtime.get().releaseCanvas(this.canvas);\n      this.canvas = undefined;\n    }\n  }\n}\n\nclass BackgroundRepeatPair implements ICloneable<BackgroundRepeatPair> {\n  public static of(value: string): BackgroundRepeatPair | undefined {\n    if (value === 'repeat-x') {\n      return new BackgroundRepeatPair(BackgroundRepeat.REPEAT, BackgroundRepeat.NO_REPEAT);\n    } else if (value === 'repeat-y') {\n      return new BackgroundRepeatPair(BackgroundRepeat.NO_REPEAT, BackgroundRepeat.REPEAT);\n    }\n    const parts = value.split(/\\s+/);\n    const x = EnumUtils.fromStringOrUndefined<BackgroundRepeat>(BackgroundRepeat, parts[0]);\n    if (!x) {\n      return undefined;\n    }\n    if (parts.length > 1) {\n      const y = EnumUtils.fromString<BackgroundRepeat>(\n        BackgroundRepeat,\n        parts[1],\n        BackgroundRepeat.NO_REPEAT\n      );\n      return new BackgroundRepeatPair(x, y);\n    } else {\n      return new BackgroundRepeatPair(x, x);\n    }\n  }\n\n  public static toBaseValue(value: string): BaseValue {\n    value = value.toLowerCase();\n    if (value === 'left' || value === 'top') {\n      return BaseValue.of('0%');\n    } else if (value === 'right' || value === 'bottom') {\n      return BaseValue.of('100%');\n    } else if (value === 'center') {\n      return BaseValue.of('50%');\n    } else {\n      return BaseValue.of(value);\n    }\n  }\n\n  public x: BackgroundRepeat;\n  public y: BackgroundRepeat;\n  constructor(x: BackgroundRepeat, y: BackgroundRepeat) {\n    this.x = x;\n    this.y = y;\n  }\n\n  public clone(): BackgroundRepeatPair {\n    return new BackgroundRepeatPair(this.x, this.y);\n  }\n}\n\nexport enum BackgroundClip {\n  BORDER_BOX = 'border-box',\n  PADDING_BOX = 'padding-box',\n  CONTENT_BOX = 'content-box'\n}\n\nexport enum BackgroundOrigin {\n  BORDER_BOX = 'border-box',\n  PADDING_BOX = 'padding-box',\n  CONTENT_BOX = 'content-box'\n}\n\nexport enum BackgroundSizeType {\n  AUTO = 0,\n  LENGTH = 1,\n  PERCENTAGE = 2,\n  COVER = 3,\n  CONTAIN = 4\n}\n\nclass BackgroundSizePair implements ICloneable<BackgroundSizePair> {\n  public static of(value: string): BackgroundSizePair {\n    const parts = value.split(/\\s+/);\n    const x = this.toBaseValue(parts[0]);\n    const y = parts.length > 1 ? this.toBaseValue(parts[1]) : BaseValue.of('50%');\n    return new BackgroundSizePair(x, y);\n  }\n\n  public static toBaseValue(value: string): BaseValue {\n    value = value.toLowerCase();\n    if (value === 'left' || value === 'top') {\n      return BaseValue.of('0%');\n    } else if (value === 'right' || value === 'bottom') {\n      return BaseValue.of('100%');\n    } else if (value === 'center') {\n      return BaseValue.of('50%');\n    } else {\n      return BaseValue.of(value);\n    }\n  }\n\n  public x: BaseValue;\n  public y: BaseValue;\n  constructor(x: BaseValue, y: BaseValue) {\n    this.x = x;\n    this.y = y;\n  }\n\n  public clone(): BackgroundSizePair {\n    return new BackgroundSizePair(this.x.clone(), this.y.clone());\n  }\n}\n\nconst REG_PARTS = /([^\\s]+\\([^\\)]+\\)|[^\\s]+)/g;\nconst REG_PARAMETERS = /(\"[^\"]+\"|'[^']+'|[^,]+)/g;\n\nconst REG_IMAGE = /^(url|linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient)\\(([^\\)]+)\\)$/i;\nconst REG_POSITION_X = /^(left|right|[0-9\\.]+px|[0-9\\.]+%)$/i;\nconst REG_POSITION_Y = /^(top|bottom|[0-9\\.]+px|[0-9\\.]+%)$/i;\n\nexport class Background {\n  public static of(value: string): Background | undefined {\n    const parts = this.split(value);\n    const bg = new Background();\n    for (const part of parts) {\n      let image;\n      let repeat;\n      let clip;\n      let positionX;\n      let positionY;\n      const matches = StringUtils.matchAll(part, REG_PARTS);\n      for (const match of matches) {\n        const val = match[1].trim();\n        // Try color\n        if (!bg.color) {\n          const color = Color.of(val, true);\n          bg.color = color;\n          continue;\n        }\n\n        // Try image\n        if (!image) {\n          image = this.parseImage(val);\n          continue;\n        }\n\n        // Try repeat\n        if (!repeat) {\n          repeat = BackgroundRepeatPair.of(val);\n          if (repeat) {\n            continue;\n          }\n        }\n\n        // Try clip\n        if (!clip) {\n          clip = EnumUtils.fromStringOrUndefined<BackgroundClip>(BackgroundClip, val);\n          if (clip) {\n            continue;\n          }\n        }\n\n        // Try position\n        if (!positionX) {\n          if (REG_POSITION_X.test(val)) {\n            positionX = BackgroundSizePair.toBaseValue(val);\n            continue;\n          }\n        } else if (!positionY) {\n          if (REG_POSITION_Y.test(val)) {\n            positionY = BackgroundSizePair.toBaseValue(val);\n            continue;\n          }\n        }\n        console.warn('unknow part: ' + val);\n      }\n\n      if (image) {\n        bg.image.push(image);\n      }\n      if (repeat) {\n        bg.repeat.push(repeat);\n      }\n      if (clip) {\n        bg.clip.push(clip);\n      }\n      if (positionX) {\n        if (!positionY) {\n          positionY = BaseValue.of('50%');\n        }\n        bg.position.push(new BackgroundSizePair(positionX, positionY));\n      }\n    }\n\n    return bg;\n  }\n  private static trimParameter(value: string): string {\n    value = value.trim();\n    if (\n      value.length > 1 &&\n      ((value[0] === '\"' && value[value.length - 1] === '\"') ||\n        (value[0] === \"'\" && value[value.length - 1] === \"'\"))\n    ) {\n      return value.substring(1, value.length - 1);\n    } else {\n      return value;\n    }\n  }\n\n  private static parseParameters(value: string): string[] {\n    const matches = StringUtils.matchAll(value, REG_PARAMETERS);\n    const result = [];\n    for (const match of matches) {\n      const val = match[1].trim();\n      result.push(this.trimParameter(val));\n    }\n    return result;\n  }\n\n  private static parseImage(value: string): IBackgroundSource | undefined {\n    const matched = value.match(REG_IMAGE);\n    if (!matched) {\n      return undefined;\n    }\n    const type = matched[1];\n    const params = matched[2];\n    switch (type) {\n      case 'url':\n        return URLSource.of(this.parseParameters(params));\n      case 'linear-gradient':\n        return LinearGradientSource.of(this.parseParameters(params));\n    }\n    return undefined;\n  }\n\n  private static split(value: string): string[] {\n    const result: string[] = [];\n    let begin = 0;\n    let inbrackets = false;\n    const size = value.length;\n    for (let i = 0; i < size; ++i) {\n      const ch = value[i];\n      if (inbrackets) {\n        if (ch === ')') {\n          inbrackets = false;\n        }\n      } else if (ch === '(') {\n        inbrackets = true;\n      } else if (ch === ',') {\n        if (begin < i) {\n          result.push(value.substring(begin, i).trim());\n        }\n        begin = i + 1;\n      }\n    }\n    if (begin < size) {\n      result.push(value.substring(begin).trim());\n    }\n    return result;\n  }\n\n  private static copyArray<T>(src: T[], dest: T[]) {\n    for (const item of src) {\n      dest.push(item);\n    }\n  }\n\n  private static cloneArray<T>(src: (ICloneable<T> | undefined)[], dest: (T | undefined)[]) {\n    for (const item of src) {\n      if (!item) {\n        dest.push(undefined);\n      } else {\n        dest.push(item.clone());\n      }\n    }\n  }\n\n  private static getFromArray<T>(arr: T[], idx: number, defaultVal: T) {\n    return idx >= arr.length ? defaultVal : arr[idx];\n  }\n\n  public color?: Color;\n  public attachment: BackgroundAttachment[] = [];\n  public image: (IBackgroundSource | undefined)[] = [];\n  public repeat: BackgroundRepeatPair[] = [];\n  public clip: BackgroundClip[] = [];\n  public origin: BackgroundOrigin[] = [];\n  public size: BackgroundSizePair[] = [];\n  public position: BackgroundSizePair[] = [];\n  public blendMode: string[] = [];\n\n  public setColor(value: string | Color) {\n    this.color = value instanceof Color ? value : Color.of(value);\n  }\n\n  public setAttachment(value: string) {\n    const parts = Background.split(value);\n    this.attachment.length = 0;\n    for (const _ of parts) {\n      // TODO: support others later.\n      this.attachment.push(BackgroundAttachment.SCROLL);\n    }\n  }\n\n  public setImage(value: string) {\n    const parts = Background.split(value);\n    this.image.length = 0;\n    for (const part of parts) {\n      this.image.push(Background.parseImage(part));\n    }\n  }\n\n  public setBlendMode(value: string) {\n    const parts = Background.split(value);\n    this.blendMode.length = 0;\n    for (const part of parts) {\n      this.blendMode.push(part);\n    }\n  }\n\n  public setRepeat(value: string) {\n    const parts = Background.split(value);\n    this.repeat.length = 0;\n    for (const part of parts) {\n      const repeat =\n        BackgroundRepeatPair.of(part) ||\n        new BackgroundRepeatPair(BackgroundRepeat.NO_REPEAT, BackgroundRepeat.NO_REPEAT);\n      this.repeat.push(repeat);\n    }\n  }\n\n  public setClip(value: string) {\n    const parts = Background.split(value);\n    this.clip.length = 0;\n    for (const part of parts) {\n      const clip = EnumUtils.fromString<BackgroundClip>(\n        BackgroundClip,\n        part,\n        BackgroundClip.BORDER_BOX\n      );\n      this.clip.push(clip);\n    }\n  }\n\n  public setOrigin(value: string) {\n    const parts = Background.split(value);\n    this.origin.length = 0;\n    for (const part of parts) {\n      const origin = EnumUtils.fromString<BackgroundOrigin>(\n        BackgroundOrigin,\n        part,\n        BackgroundOrigin.BORDER_BOX\n      );\n      this.origin.push(origin);\n    }\n  }\n\n  public setSize(value: string) {\n    const parts = Background.split(value);\n    this.size.length = 0;\n    for (const part of parts) {\n      this.size.push(BackgroundSizePair.of(part));\n    }\n  }\n\n  public setPosition(value: string) {\n    const parts = Background.split(value);\n    this.position.length = 0;\n    for (const part of parts) {\n      this.position.push(BackgroundSizePair.of(part));\n    }\n  }\n\n  public draw(\n    target: XObject,\n    ctx: CanvasRenderingContext2D,\n    outerRect: RoundRect,\n    innerRect: RoundRect\n  ) {\n    // TODO: support blend mode\n    if (this.image.length === 0 && this.color) {\n      ctx.fillStyle = this.color.toString();\n      let rect: Rect;\n      const clip: BackgroundClip = Background.getFromArray(this.clip, 0, BackgroundClip.BORDER_BOX);\n      switch (clip) {\n        case BackgroundClip.PADDING_BOX:\n          rect = target.getPaddingRect();\n          break;\n        case BackgroundClip.CONTENT_BOX:\n          rect = target.getContentRect();\n          break;\n        default:\n          rect = new Rect(0, 0, target.rect.width, target.rect.height);\n          break;\n      }\n      if (clip === BackgroundClip.BORDER_BOX) {\n        outerRect.clip(ctx);\n      } else {\n        innerRect.clip(ctx);\n      }\n      ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n      return;\n    }\n\n    for (let i = this.image.length - 1; i >= 0; --i) {\n      const source = this.image[i];\n      if (!source) {\n        continue;\n      }\n      const origin = Background.getFromArray(this.origin, i, BackgroundOrigin.BORDER_BOX);\n      let originRect;\n      switch (origin) {\n        case BackgroundOrigin.PADDING_BOX: {\n          originRect = target.getPaddingRect();\n          break;\n        }\n        case BackgroundOrigin.CONTENT_BOX: {\n          originRect = target.getContentRect();\n          break;\n        }\n        default:\n          originRect = new Rect(0, 0, target.rect.width, target.rect.height);\n          break;\n      }\n\n      let w = originRect.width;\n      let h = originRect.height;\n      // Image size\n      if (this.size.length > i) {\n        const size = this.size[i];\n        w = size.x.getValue(originRect.width);\n        h = size.y.getValue(originRect.height);\n      }\n\n      const img = source.getSource(w, h);\n      if (!img) {\n        continue;\n      }\n\n      let clipRect;\n      const clip = Background.getFromArray(this.clip, i, BackgroundClip.BORDER_BOX);\n      switch (clip) {\n        case BackgroundClip.PADDING_BOX: {\n          clipRect = target.getPaddingRect();\n          break;\n        }\n        case BackgroundClip.CONTENT_BOX: {\n          clipRect = target.getContentRect();\n          break;\n        }\n        default:\n          clipRect = new Rect(0, 0, target.rect.width, target.rect.height);\n          break;\n      }\n      if (clip === BackgroundClip.BORDER_BOX) {\n        outerRect.clip(ctx);\n      } else {\n        innerRect.clip(ctx);\n      }\n      // Draw color\n      if (this.color && i === this.image.length - 1) {\n        ctx.fillStyle = this.color.toString();\n        ctx.fillRect(clipRect.x, clipRect.y, clipRect.width, clipRect.height);\n      }\n\n      const srcWidth = img.width;\n      const srcHeight = img.height;\n      let scaledWidth = srcWidth;\n      let scaledHeight = srcHeight;\n      let srcScaleX = 1;\n      let srcScaleY = 1;\n      let destX = originRect.x;\n      let destY = originRect.y;\n\n      // Image size\n      if (this.size.length > i) {\n        const size = this.size[i];\n        scaledWidth = size.x.getValue(originRect.width);\n        scaledHeight = size.y.getValue(originRect.height);\n        srcScaleX = scaledWidth / srcWidth;\n        srcScaleY = scaledHeight / srcHeight;\n      }\n\n      if (scaledWidth < 1 || scaledHeight < 1) {\n        continue;\n      }\n\n      // Repeat\n      let repeatX = BackgroundRepeat.NO_REPEAT;\n      let repeatY = BackgroundRepeat.NO_REPEAT;\n      if (this.repeat.length > i) {\n        repeatX = this.repeat[i].x;\n        repeatY = this.repeat[i].y;\n      }\n\n      let gapX = 0;\n      let gapY = 0;\n      if (repeatX === BackgroundRepeat.SPACE) {\n        const count = Math.floor(originRect.width / scaledWidth);\n        if (count === 1) {\n          gapX = originRect.width;\n        } else {\n          gapX = (originRect.width - count * scaledWidth) / (count - 1);\n        }\n        destX = originRect.x;\n        while (destX > clipRect.x) {\n          destX -= gapX + scaledWidth;\n        }\n      } else if (repeatX === BackgroundRepeat.ROUND) {\n        const count = Math.max(1, Math.floor(originRect.width / scaledWidth + 0.5));\n        scaledWidth = originRect.width / count;\n        srcScaleX = scaledWidth / srcWidth;\n        destX = originRect.x;\n        while (destX > clipRect.x) {\n          destX -= scaledWidth;\n        }\n      } else {\n        if (this.position.length > i) {\n          const position = this.position[i];\n          if (position.x.unit === BaseValueUnit.PERCENTAGE) {\n            destX += ((originRect.width - scaledWidth) * position.x.numberValue) / 100;\n          } else {\n            destX += position.x.numberValue;\n          }\n        }\n        if (repeatX === BackgroundRepeat.REPEAT) {\n          while (destX > clipRect.x) {\n            destX -= scaledWidth;\n          }\n        }\n      }\n\n      if (repeatY === BackgroundRepeat.SPACE) {\n        const count = Math.floor(originRect.height / scaledHeight);\n        if (count === 1) {\n          gapY = originRect.height;\n        } else {\n          gapY = (originRect.height - count * scaledHeight) / (count - 1);\n        }\n        destY = originRect.y;\n        while (destY > clipRect.y) {\n          destY -= gapY + scaledHeight;\n        }\n      } else if (repeatY === BackgroundRepeat.ROUND) {\n        const count = Math.max(1, Math.floor(originRect.height / scaledHeight + 0.5));\n        scaledHeight = originRect.height / count;\n        srcScaleY = scaledHeight / srcHeight;\n        destY = originRect.y;\n        while (destY > clipRect.y) {\n          destY -= scaledHeight;\n        }\n      } else {\n        if (this.position.length > i) {\n          const position = this.position[i];\n          if (position.y.unit === BaseValueUnit.PERCENTAGE) {\n            destY += ((originRect.height - scaledHeight) * position.y.numberValue) / 100;\n          } else {\n            destY += position.y.numberValue;\n          }\n        }\n        if (repeatY === BackgroundRepeat.REPEAT) {\n          while (destY > clipRect.y) {\n            destY -= scaledHeight;\n          }\n        }\n      }\n\n      const clipBottom = clipRect.y + clipRect.height;\n      const clipRight = clipRect.x + clipRect.width;\n      do {\n        let x = destX;\n        do {\n          this.drawImage(\n            ctx,\n            img,\n            scaledWidth,\n            scaledHeight,\n            srcScaleX,\n            srcScaleY,\n            x,\n            destY,\n            clipRect\n          );\n          x += gapX + scaledWidth;\n        } while (x < clipRight && repeatX !== BackgroundRepeat.NO_REPEAT);\n        destY += gapY + scaledHeight;\n      } while (destY < clipBottom && repeatY !== BackgroundRepeat.NO_REPEAT);\n    }\n  }\n\n  public clone(): Background {\n    const cloned = new Background();\n    cloned.color = this.color;\n    Background.copyArray(this.attachment, cloned.attachment);\n    Background.cloneArray(this.image, cloned.image);\n    Background.copyArray(this.blendMode, cloned.blendMode);\n    Background.copyArray(this.clip, cloned.clip);\n    Background.copyArray(this.origin, cloned.origin);\n    Background.cloneArray(this.repeat, cloned.repeat);\n    Background.cloneArray(this.size, cloned.size);\n    Background.cloneArray(this.position, cloned.position);\n    return cloned;\n  }\n\n  private drawImage(\n    ctx: CanvasRenderingContext2D,\n    img: HTMLImageElement,\n    imgWidth: number,\n    imgHeight: number,\n    imageScaleX: number,\n    imageScaleY: number,\n    destX: number,\n    destY: number,\n    clip: Rect\n  ) {\n    let srcX = 0;\n    let srcY = 0;\n    if (destX < clip.x) {\n      srcX = clip.x - destX;\n      destX = clip.x;\n    }\n    if (destY < clip.y) {\n      srcY = clip.y - destY;\n      destY = clip.y;\n    }\n    let srcWidth = imgWidth - srcX;\n    let srcHeight = imgHeight - srcY;\n    if (srcWidth + destX > clip.width + clip.x) {\n      srcWidth = clip.width + clip.x - destX;\n    }\n    if (srcHeight + destY > clip.height + clip.y) {\n      srcHeight = clip.height + clip.y - destY;\n    }\n    ctx.drawImage(\n      img,\n      srcX / imageScaleX,\n      srcY / imageScaleY,\n      srcWidth / imageScaleX,\n      srcHeight / imageScaleY,\n      destX,\n      destY,\n      srcWidth,\n      srcHeight\n    );\n  }\n}\n","import { Color } from '../base/Color';\n\n/**\n * Border styles, see\n * <a href='https://www.w3schools.com/css/css_border.asp'>https://www.w3schools.com/css/css_border.asp</a>\n *\n * Currently only supports 'solid'\n */\nexport enum BorderStyle {\n  SOLID = 'solid'\n}\n\n/**\n * A regular experssion represents border definition.\n */\nconst BORDER_PATTERN = /^[\\s]*([^\\s]+)[\\s]+([\\w]+)[\\s]+(.*)$/;\n\n/**\n * This class represents an immutable border object contains width, style and color.\n */\nexport class Border {\n  /**\n   * Default border object with 0 border size.\n   */\n  public static readonly DEFAULT = new Border(0, BorderStyle.SOLID, Color.BLACK);\n\n  /**\n   * Convert a string to a Border object.\n   * @param value a string present border, the format is [width] [style] [color]\n   * @param [silent] if ture, ignore warning for an invalid value.\n   * @returns A border object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string, silent = false): Border | undefined {\n    const pieces = value.match(BORDER_PATTERN);\n    if (!pieces) {\n      if (!silent) {\n        console.warn(`invalid border:${value}`);\n      }\n      return undefined;\n    }\n    const color = Color.of(pieces[3], silent);\n    if (!color) {\n      if (!silent) {\n        console.warn(`invalid border:${value}`);\n      }\n      return undefined;\n    }\n    return new Border(parseFloat(pieces[1]), BorderStyle.SOLID, color);\n  }\n\n  /**\n   * Specifies the width of the four borders.\n   */\n  public readonly width: number = 0;\n  /**\n   * Specifies what kind of border to display.\n   * Currently only support solid color.\n   */\n  public readonly style: BorderStyle = BorderStyle.SOLID;\n  /**\n   * Specifies the color of this border.\n   */\n  public readonly color: Color = Color.NONE;\n\n  /**\n   * Constructs and initializes a border object with given arguments of sRGB and alpha.\n   * @param width the width of the four borders.\n   * @param style what kind of border to display.\n   * @param color the color of this border.\n   */\n  constructor(width: number, style: BorderStyle, color: Color) {\n    this.width = width;\n    this.style = style;\n    this.color = color;\n  }\n\n  /**\n   * Returns a string representation of this Border object.\n   * @returns a string representation of this object.\n   */\n  public toString(): string {\n    return `${this.width.toString()} ${this.style} ${this.color.toString()}`;\n  }\n\n  /**\n   * Checks whether two BaseValue Border are equal.\n   * The result is true if and only if the argument is a Border object that has the same width, style and color as this Rect.\n   * @param that the Object to compare with this Border object.\n   * @returns true if the objects are equal; false otherwise.\n   */\n  public equals(that: Border): boolean {\n    return this.width === that.width && this.style === that.style && this.color.equals(that.color);\n  }\n\n  /**\n   * Returns true if this border instance takes affect.\n   * @returns true if the border instance takes affect; false otherwise.\n   */\n  public isEnable(): boolean {\n    return this.width > 0 && this.color.a > 0;\n  }\n\n  /**\n   * Creates a new Border with the same width, style and color as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): Border {\n    return new Border(this.width, this.style, this.color.clone());\n  }\n}\n","import { Runtime } from '../Runtime';\nimport { EnumUtils } from '../utils/EnumUtils';\nimport { LineHeight } from './LineHeight';\n\nexport enum FontStyle {\n  NORMAL = 'normal',\n  ITALIC = 'italic',\n  OBLIQUE = 'oblique'\n}\n\nexport enum FontVariant {\n  NORMAL = 'normal',\n  SMALL_CAPS = 'small-caps'\n}\n\nexport enum FontWeight {\n  NORMAL = 'normal',\n  BOLD = 'bold',\n  BOLDER = 'bolder',\n  W100 = '100',\n  W200 = '200',\n  W300 = '300',\n  W400 = '400',\n  W500 = '500',\n  W600 = '600',\n  W700 = '700',\n  W800 = '800',\n  W900 = '900'\n}\n\n/**\n * A regular experssion represents font definition.\n */\nconst REG_PARTS = /(^|^.*\\s+)([0-9]+[a-z]+[^\\s]+)($|\\s+(.*)$)/;\n\n/**\n * This class represents a font object contains style, width, size, variant, line height and font family.\n */\nexport class Font {\n  /**\n   * The default font family, it is mutable\n   */\n  public static DEFAULT_FONT_FAMILY = 'sans-serif';\n\n  /**\n   * Convert a string to a Font object.\n   * @param value a string present font, see the definition here\n   * <a href='https://developer.mozilla.org/en-US/docs/Web/CSS/font'>\n   *   https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * </a>\n   * @param [silent] if ture, ignore warning for an invalid value.\n   * @returns A Font object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string, silent: boolean = false): Font | undefined {\n    const matched = value.match(REG_PARTS);\n    if (!matched) {\n      if (!silent) {\n        console.warn(`invalid font:${value}`);\n      }\n      return undefined;\n    }\n    const font = new Font();\n    const styles = matched[1].split(/\\s+/);\n    for (let style of styles) {\n      style = style.toLowerCase();\n      if (style === 'normal') {\n        continue;\n      }\n      const fontStyle: FontStyle = EnumUtils.fromString<FontStyle>(\n        FontStyle,\n        style,\n        FontStyle.NORMAL\n      );\n      if (fontStyle !== FontStyle.NORMAL) {\n        font.style = fontStyle;\n        continue;\n      }\n      const fontWeight: FontWeight = EnumUtils.fromString<FontWeight>(\n        FontWeight,\n        style,\n        FontWeight.NORMAL\n      );\n      if (fontWeight !== FontWeight.NORMAL) {\n        font.weight = fontWeight;\n        continue;\n      }\n      const fontVariant: FontVariant = EnumUtils.fromString<FontVariant>(\n        FontVariant,\n        style,\n        FontVariant.NORMAL\n      );\n      if (fontVariant !== FontVariant.NORMAL) {\n        font.variant = fontVariant;\n        continue;\n      }\n    }\n\n    const sizes = matched[2].split(/\\//);\n    font.size = parseFloat(sizes[0]);\n    if (isNaN(font.size)) {\n      if (!silent) {\n        console.warn(`invalid font:${value}`);\n      }\n      return undefined;\n    }\n    if (sizes.length > 1) {\n      font.lineHeight = LineHeight.of(sizes[1], silent);\n      if (!font.lineHeight) {\n        if (!silent) {\n          console.warn(`invalid font:${value}`);\n        }\n        return undefined;\n      }\n    }\n    font.family = matched[3].trim();\n    return font;\n  }\n\n  /**\n   * The style property sets whether a font should be styled with a normal, italic, or oblique face from its\n   * font-family.\n   */\n  public style?: FontStyle;\n  /**\n   * The variant property is a shorthand for the longhand properties font-variant-caps, font-variant-numeric,\n   * font-variant-alternates, font-variant-ligatures, and font-variant-east-asian.\n   * Note: this is not supported yet.\n   */\n  public variant?: FontVariant;\n  /**\n   * The weight property sets the weight (or boldness) of the font. The weights available depend on the font-family\n   * you are using.\n   */\n  public weight?: FontWeight;\n  /**\n   * The size property sets the size of the font. This property is also used to compute the size of em, ex, and other\n   * relative <length> units.\n   */\n  public size: number;\n  /**\n   * The line-height property sets the height of a line box. It's commonly used to set the distance between lines of\n   * text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced\n   * inline elements, it specifies the height that is used to calculate line box height.\n   */\n  public lineHeight?: LineHeight;\n  /**\n   * The family property specifies a prioritized list of one or more font family names and/or generic family names for\n   * the selected element.\n   */\n  public family?: string;\n\n  /**\n   * Constructs and initializes a Font object with given arguments.\n   * @param style see style definition.\n   * @param variant see variant definition.\n   * @param weight see weight definition.\n   * @param size see size definition.\n   * @param lineHeight see lineHeight definition.\n   * @param family see family definition.\n   */\n  constructor(\n    style?: FontStyle,\n    variant?: FontVariant,\n    weight?: FontWeight,\n    size?: number,\n    lineHeight?: LineHeight,\n    family?: string\n  ) {\n    this.style = style || FontStyle.NORMAL;\n    this.variant = variant || FontVariant.NORMAL;\n    this.weight = weight || FontWeight.NORMAL;\n    this.size = size || 16;\n    this.lineHeight = lineHeight;\n    this.family = family;\n  }\n\n  /**\n   * Returns a string representation of this Font object.\n   * @returns a string representation of this object.\n   */\n  public toString() {\n    const font = [\n      this.style || FontStyle.NORMAL,\n      this.variant || FontVariant.NORMAL,\n      this.weight || FontWeight.NORMAL,\n      this.lineHeight ? this.size + 'px/' + this.lineHeight.toString() : this.size + 'px',\n      this.family || Font.DEFAULT_FONT_FAMILY\n    ];\n    return font.join(' ');\n  }\n\n  /**\n   * Calculate the text width with current font.\n   * @returns Width of text with current font.\n   */\n  public measureTextWidth(text: string) {\n    return Runtime.get().measureTextWidth(text, this);\n  }\n\n  /**\n   * Creates a new Font with the same style, width, size, variant, line height and font family.\n   * @returns a clone of this instance.\n   */\n  public clone(): Font {\n    return new Font(this.style, this.variant, this.weight, this.size, this.lineHeight, this.family);\n  }\n}\n","export enum LineHeightType {\n  NORMAL = 0,\n  NUMBER = 1,\n  LENGTH = 2,\n  PERCENT = 3\n}\n\nconst REG_NUMBER = /^([0-9]*\\.?[0-9]*)$/;\nconst REG_LENGTH = /^([0-9]*\\.?[0-9]*)px$/i;\nconst REG_PERCENT = /^([0-9]*\\.?[0-9]*)%$/;\n\nexport class LineHeight {\n  public static of(value: string, silent: boolean = false): LineHeight | undefined {\n    value = value.toLowerCase();\n    if (value === 'normal') {\n      return new LineHeight(LineHeightType.NORMAL, 0);\n    } else if (REG_NUMBER.test(value)) {\n      return new LineHeight(LineHeightType.NUMBER, parseFloat(value));\n    } else if (REG_LENGTH.test(value)) {\n      return new LineHeight(LineHeightType.LENGTH, parseFloat(value));\n    } else if (REG_PERCENT.test(value)) {\n      return new LineHeight(LineHeightType.PERCENT, parseFloat(value));\n    }\n    if (!silent) {\n      console.warn(`invalid line height:${value}`);\n    }\n    return undefined;\n  }\n\n  readonly type: LineHeightType = LineHeightType.NORMAL;\n  readonly value: number = 0;\n\n  constructor(type: LineHeightType, value: number) {\n    this.type = type;\n    this.value = value;\n  }\n\n  public getValue(base: number): number {\n    switch (this.type) {\n      case LineHeightType.NORMAL:\n        return base * 1.2;\n      case LineHeightType.NUMBER:\n        return base * this.value;\n      case LineHeightType.LENGTH:\n        return this.value;\n      case LineHeightType.PERCENT:\n        return (this.value * base) / 100;\n    }\n  }\n\n  public toString() {\n    switch (this.type) {\n      case LineHeightType.NORMAL:\n        return 'normal';\n      case LineHeightType.NUMBER:\n        return this.value;\n      case LineHeightType.LENGTH:\n        return this.value + 'px';\n      case LineHeightType.PERCENT:\n        return this.value + '%';\n    }\n  }\n\n  public clone(): LineHeight {\n    return new LineHeight(this.type, this.value);\n  }\n}\n","import { Color } from '../base/Color';\nimport { CSSTokenizer } from '../parser/CSSTokenizer';\n\n/**\n * The shadow property adds shadow effects around an element's frame. A shadow is described by X and Y offsets relative\n * to the element, blur and color.\n */\nexport class Shadow {\n  /**\n   * Specifies the color of the shadow.\n   */\n  public color: Color;\n  /**\n   * Specifies the X offset relative to the element.\n   */\n  public offsetX: number;\n  /**\n   * Specifies the Y offset relative to the element.\n   */\n  public offsetY: number;\n  /**\n   * Specifies the blur size.\n   */\n  public blur: number;\n\n  /**\n   * Convert a string to a Shadow object.\n   * @param value a string present a shadow object, the format is [X] [Y] [blur] [color].\n   * @param [silent] if ture, ignore warning for an invalid value.\n   * @returns A Shadow object for valid value, otherwise returns undefined.\n   */\n  public static of(value: string, silent: boolean = false): Shadow | undefined {\n    const parts = new CSSTokenizer().tokenize(value);\n    if (parts.length !== 4) {\n      if (!silent) {\n        console.warn(`invalid shadow:${value}`);\n      }\n      return undefined;\n    }\n\n    const x = parseFloat(parts[0]);\n    const y = parseFloat(parts[1]);\n    const blur = parseFloat(parts[2]);\n    const color = Color.of(parts[3], silent);\n    if (isNaN(x) || isNaN(y) || isNaN(blur) || color === undefined) {\n      if (!silent) {\n        console.warn(`invalid shadow:${value}`);\n      }\n      return undefined;\n    }\n    return new Shadow(x, y, blur, color);\n  }\n\n  /**\n   * Constructs and initializes a shadow object with given arguments of X and Y offsets, blur and color.\n   * @param offsetX the x offset to this element.\n   * @param offsetY the y offset to this element.\n   * @param blur the blur size of this shadow.\n   * @param color the color of this shadow.\n   */\n  constructor(offsetX: number, offsetY: number, blur: number, color: Color) {\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.blur = blur;\n    this.color = color;\n  }\n\n  /**\n   * Returns a string representation of this Shadow object.\n   * @returns a string representation of this object.\n   */\n  public toString(): string {\n    return `[Shadow (${this.color.toString()} ${this.offsetX} ${this.offsetY} ${this.blur})]`;\n  }\n\n  /**\n   * Creates a new Shadow with the same X and Y offsets, blur and color as this object.\n   * @returns a clone of this instance.\n   */\n  public clone(): Shadow {\n    return new Shadow(this.offsetX, this.offsetY, this.blur, this.color);\n  }\n\n  /**\n   * Returns true if this shadow instance takes affect.\n   * @returns true if the shadow instance takes affect; false otherwise.\n   */\n  public isEnable(): boolean {\n    return this.color.a > 0 && (this.offsetX !== 0 || this.offsetY !== 0 || this.blur !== 0);\n  }\n}\n","import {\n    AnimationValueType, IAnimationStyleAttributes, IAnimationValues\n} from '../animation/Animation';\nimport { BaseValue, BaseValueUnit } from '../base/BaseValue';\nimport { Color } from '../base/Color';\nimport { XObject } from '../components/XObject';\nimport { EnumUtils } from '../utils/EnumUtils';\nimport { StringUtils } from '../utils/StringUtils';\nimport { Background } from './Background';\nimport { Border } from './Border';\nimport { Font, FontStyle, FontVariant, FontWeight } from './Font';\nimport { LineHeight } from './LineHeight';\nimport { Shadow } from './Shadow';\n\nexport enum BoxSizing {\n  CONTENT_BOX = 'content-box',\n  BORDER_BOX = 'border-box'\n}\n\nexport enum TextAlign {\n  LEFT = 'left',\n  RIGHT = 'right',\n  CENTER = 'center'\n}\n\nexport enum Position {\n  STATIC = 'static',\n  RELATIVE = 'relative',\n  ABSOLUTE = 'absolute',\n  FIXED = 'fixed'\n}\n\nexport enum Display {\n  INLINE = 'inline',\n  BLOCK = 'block',\n  NONE = 'none'\n}\n\nexport enum Overflow {\n  VISIBLE = 'visible',\n  HIDDEN = 'hidden'\n}\n\nexport enum TextBorderPosition {\n  OUTER = 'outer',\n  INNER = 'inner'\n}\n\nexport enum PointerEvents {\n  AUTO = 'auto',\n  NONE = 'none'\n}\n\nconst REG_ATTRS = /([^\\s:;]+)[\\s]*:[\\s]*([^;]+)/gm;\n\nexport class Style {\n  public static of(value: string): Style {\n    const style = new Style();\n    const attrs: { [key: string]: string } = {};\n    const matches = StringUtils.matchAll(value, REG_ATTRS);\n    for (const match of matches) {\n      attrs[match[1].toLowerCase()] = match[2];\n    }\n    return style.apply(attrs);\n  }\n\n  public width?: BaseValue;\n  public height?: BaseValue;\n  public position: Position = Position.STATIC;\n  public display: Display = Display.INLINE;\n  public left?: BaseValue;\n  public right?: BaseValue;\n  public top?: BaseValue;\n  public bottom?: BaseValue;\n  public paddingTop?: BaseValue;\n  public paddingRight?: BaseValue;\n  public paddingBottom?: BaseValue;\n  public paddingLeft?: BaseValue;\n  public marginTop?: BaseValue;\n  public marginRight?: BaseValue;\n  public marginBottom?: BaseValue;\n  public marginLeft?: BaseValue;\n  public perspectiveOriginX: BaseValue = BaseValue.of('50%');\n  public perspectiveOriginY: BaseValue = BaseValue.of('50%');\n  public transformX: BaseValue = BaseValue.of('0');\n  public transformY: BaseValue = BaseValue.of('0');\n  public alpha: number = 1;\n  public rotation: number = 0;\n  public scaleX: number = 1;\n  public scaleY: number = 1;\n  public skewX: number = 0;\n  public skewY: number = 0;\n  public shadow?: Shadow;\n  public visible: boolean = true;\n  public background?: Background;\n  public boxSizing: BoxSizing = BoxSizing.CONTENT_BOX;\n  public color: Color = Color.BLACK;\n  public font?: Font;\n  public lineHeight?: LineHeight;\n  public textAlign: TextAlign = TextAlign.LEFT;\n  public borderRadiusTop?: BaseValue;\n  public borderRadiusRight?: BaseValue;\n  public borderRadiusBottom?: BaseValue;\n  public borderRadiusLeft?: BaseValue;\n  public borderTop?: Border;\n  public borderRight?: Border;\n  public borderBottom?: Border;\n  public borderLeft?: Border;\n  public overflow: Overflow = Overflow.VISIBLE;\n  public compositeOperation?: string;\n  public aspectRatio?: number;\n  public filter?: string;\n  public cursor?: string;\n  public pointerEvents: PointerEvents = PointerEvents.AUTO;\n  // Text style\n  public textBorder?: Border;\n  public textBorderPosition?: TextBorderPosition = TextBorderPosition.OUTER;\n  public textShadow?: Shadow;\n\n  apply(attrs: { [key: string]: string | number }): Style {\n    for (const k in attrs) {\n      const key = this.normalize(k);\n      const value = attrs[k] + '';\n      switch (key) {\n        case 'width':\n        case 'height':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'position':\n          this.position = EnumUtils.fromString<Position>(Position, value, Position.STATIC);\n          break;\n        case 'display':\n          this.display = EnumUtils.fromString<Display>(Display, value, Display.INLINE);\n          break;\n        case 'left':\n        case 'right':\n        case 'top':\n        case 'bottom':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'padding':\n          const paddings = Style.parse4Dirs(value);\n          if (paddings) {\n            this.paddingTop = paddings[0];\n            this.paddingRight = paddings[1];\n            this.paddingBottom = paddings[2];\n            this.paddingLeft = paddings[3];\n          }\n          break;\n        case 'paddingTop':\n        case 'paddingRight':\n        case 'paddingBottom':\n        case 'paddingLeft':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'margin':\n          const margins = Style.parse4Dirs(value);\n          if (margins) {\n            this.marginTop = margins[0];\n            this.marginRight = margins[1];\n            this.marginBottom = margins[2];\n            this.marginLeft = margins[3];\n          }\n          break;\n        case 'marginTop':\n        case 'marginRight':\n        case 'marginBottom':\n        case 'marginLeft':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'perspectiveOrigin': {\n          const pieces = value.split(/\\s+/);\n          if (pieces.length === 1) {\n            if (value === 'auto') {\n              this.perspectiveOriginX = BaseValue.of('50%');\n              this.perspectiveOriginY = BaseValue.of('50%');\n            } else {\n              this.perspectiveOriginX = BaseValue.of(value);\n              this.perspectiveOriginY = BaseValue.of(value);\n            }\n          } else if (pieces.length > 1) {\n            this.perspectiveOriginX =\n              pieces[0] === 'auto' ? BaseValue.of('50%') : BaseValue.of(pieces[0]);\n            this.perspectiveOriginY =\n              pieces[1] === 'auto' ? BaseValue.of('50%') : BaseValue.of(pieces[1]);\n          }\n          break;\n        }\n        case 'transform': {\n          const pieces = value.split(/\\s+/);\n          if (pieces.length === 1) {\n            if (value === 'auto') {\n              this.transformX = BaseValue.of('50%');\n              this.transformY = BaseValue.of('50%');\n            } else {\n              this.transformX = BaseValue.of(value);\n              this.transformY = BaseValue.of(value);\n            }\n          } else if (pieces.length > 1) {\n            this.transformX = pieces[0] === 'auto' ? BaseValue.of('50%') : BaseValue.of(pieces[0]);\n            this.transformY = pieces[1] === 'auto' ? BaseValue.of('50%') : BaseValue.of(pieces[1]);\n          }\n          break;\n        }\n        case 'perspectiveOriginX':\n        case 'perspectiveOriginY':\n        case 'transformX':\n        case 'transformY':\n          this[key] = value === 'auto' ? BaseValue.of('50%') : BaseValue.of(value);\n          break;\n        case 'scaleX':\n        case 'scaleY':\n        case 'skewX':\n        case 'skewY':\n        case 'alpha':\n        case 'aspectRatio':\n        case 'rotation': {\n          const numberValue = parseFloat(value);\n          if (isNaN(numberValue)) {\n            console.warn(`invalid ${key} value: ${value}`);\n          } else {\n            this[key] = numberValue;\n          }\n          break;\n        }\n        case 'scale': {\n          const numberValue = parseFloat(value);\n          if (isNaN(numberValue)) {\n            console.warn(`invalid ${key} value: ${value}`);\n          } else {\n            this.scaleX = this.scaleY = numberValue;\n          }\n          break;\n        }\n        case 'visible':\n          this.visible = value === 'true';\n          break;\n        case 'background':\n          this.background = Background.of(value);\n          break;\n        case 'backgroundClip':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setClip(value);\n          break;\n        case 'backgroundColor':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setColor(value);\n          break;\n        case 'backgroundAttachment':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setAttachment(value);\n          break;\n        case 'backgroundImage':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setImage(value);\n          break;\n        case 'backgroundRepeat':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setRepeat(value);\n          break;\n        case 'backgroundOrigin':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setOrigin(value);\n          break;\n        case 'backgroundSize':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setSize(value);\n          break;\n        case 'backgroundPosition':\n          if (!this.background) {\n            this.background = new Background();\n          }\n          this.background.setPosition(value);\n          break;\n        case 'boxSizing':\n          this.boxSizing = EnumUtils.fromString<BoxSizing>(BoxSizing, value, BoxSizing.CONTENT_BOX);\n          break;\n        case 'color': {\n          const color = Color.of(value);\n          if (color) {\n            this.color = color;\n          }\n          break;\n        }\n        case 'font':\n          this.font = Font.of(value);\n          break;\n        case 'fontFamily':\n          if (!this.font) {\n            this.font = new Font();\n          }\n          this.font.family = value;\n          break;\n        case 'fontWeight':\n          if (!this.font) {\n            this.font = new Font();\n          }\n          this.font.weight = EnumUtils.fromString<FontWeight>(FontWeight, value, FontWeight.NORMAL);\n          break;\n        case 'fontStyle':\n          if (!this.font) {\n            this.font = new Font();\n          }\n          this.font.style = EnumUtils.fromString<FontStyle>(FontStyle, value, FontStyle.NORMAL);\n          break;\n        case 'fontVariant':\n          if (!this.font) {\n            this.font = new Font();\n          }\n          this.font.variant = EnumUtils.fromString<FontVariant>(\n            FontVariant,\n            value,\n            FontVariant.NORMAL\n          );\n          break;\n        case 'fontSize': {\n          const numberValue = parseFloat(value);\n          if (isNaN(numberValue)) {\n            console.warn(`invalid ${key} value: ${value}`);\n          } else {\n            if (!this.font) {\n              this.font = new Font();\n            }\n            this.font.size = numberValue;\n          }\n          break;\n        }\n        case 'lineHeight':\n          this.lineHeight = LineHeight.of(value);\n        case 'textAlign':\n          this.textAlign = EnumUtils.fromString<TextAlign>(TextAlign, value, TextAlign.LEFT);\n          break;\n        case 'borderRadius':\n          const borderRadius = Style.parse4Dirs(value);\n          if (borderRadius) {\n            this.borderRadiusTop = borderRadius[0];\n            this.borderRadiusRight = borderRadius[1];\n            this.borderRadiusBottom = borderRadius[2];\n            this.borderRadiusLeft = borderRadius[3];\n          }\n          break;\n        case 'borderRadiusTop':\n        case 'borderRadiusRight':\n        case 'borderRadiusBottom':\n        case 'borderRadiusLeft':\n          this[key] = BaseValue.of(value);\n          break;\n        case 'border':\n          this.borderTop = this.borderRight = this.borderLeft = this.borderBottom = Border.of(\n            value\n          );\n          break;\n        case 'borderTop':\n        case 'borderRight':\n        case 'borderLeft':\n        case 'borderBottom':\n        case 'textBorder':\n          this[key] = Border.of(value);\n          break;\n        case 'overflow':\n          this.overflow = EnumUtils.fromString(Overflow, value, Overflow.VISIBLE);\n          break;\n        case 'compositeOperation':\n          this.compositeOperation = value;\n          break;\n        case 'filter':\n          this.filter = value;\n          break;\n        case 'shadow':\n        case 'textShadow':\n          this[key] = Shadow.of(value);\n          break;\n        case 'textBorderPosition':\n          this.textBorderPosition = EnumUtils.fromString(\n            TextBorderPosition,\n            value,\n            TextBorderPosition.OUTER\n          );\n          break;\n        case 'pointerEvents':\n          this.pointerEvents = EnumUtils.fromString(PointerEvents, value, PointerEvents.AUTO);\n          break;\n        case 'cursor':\n          this.cursor = value;\n          break;\n        default:\n          console.warn('unknown style:' + k + ' value:' + value);\n          break;\n      }\n    }\n    return this;\n  }\n\n  public getSnapshotForAnimation(\n    target: XObject,\n    props: IAnimationValues\n  ): IAnimationStyleAttributes {\n    const result: IAnimationStyleAttributes = {};\n    for (const name in props) {\n      this.fillSnapshotForAnimation(target, name, props[name], result);\n    }\n    return result;\n  }\n\n  clone(): Style {\n    const cloned = new Style();\n    cloned.width = this.width;\n    cloned.height = this.height;\n    cloned.position = this.position;\n    cloned.display = this.display;\n    cloned.left = this.left;\n    cloned.right = this.right;\n    cloned.top = this.top;\n    cloned.bottom = this.bottom;\n    if (this.paddingTop) {\n      cloned.paddingTop = this.paddingTop.clone();\n    }\n    if (this.paddingRight) {\n      cloned.paddingRight = this.paddingRight.clone();\n    }\n    if (this.paddingBottom) {\n      cloned.paddingBottom = this.paddingBottom.clone();\n    }\n    if (this.paddingLeft) {\n      cloned.paddingLeft = this.paddingLeft.clone();\n    }\n    if (this.marginTop) {\n      cloned.marginTop = this.marginTop.clone();\n    }\n    if (this.marginRight) {\n      cloned.marginRight = this.marginRight.clone();\n    }\n    if (this.marginBottom) {\n      cloned.marginBottom = this.marginBottom.clone();\n    }\n    if (this.marginLeft) {\n      cloned.marginLeft = this.marginLeft.clone();\n    }\n    cloned.perspectiveOriginX = this.perspectiveOriginX;\n    cloned.perspectiveOriginY = this.perspectiveOriginY;\n    cloned.transformX = this.transformX;\n    cloned.transformY = this.transformY;\n    cloned.alpha = this.alpha;\n    cloned.rotation = this.rotation;\n    cloned.scaleX = this.scaleX;\n    cloned.scaleY = this.scaleY;\n    cloned.skewX = this.skewX;\n    cloned.skewY = this.skewY;\n    if (this.shadow) {\n      cloned.shadow = this.shadow.clone();\n    }\n    if (this.textShadow) {\n      cloned.textShadow = this.textShadow.clone();\n    }\n    cloned.textBorderPosition = this.textBorderPosition;\n    if (this.textBorder) {\n      cloned.textBorder = this.textBorder.clone();\n    }\n    cloned.visible = this.visible;\n    if (this.background) {\n      cloned.background = this.background.clone();\n    }\n    cloned.boxSizing = this.boxSizing;\n    cloned.color = this.color.clone();\n    if (this.font) {\n      cloned.font = this.font.clone();\n    }\n    cloned.lineHeight = this.lineHeight;\n    cloned.textAlign = this.textAlign;\n\n    if (this.borderTop) {\n      cloned.borderTop = this.borderTop.clone();\n    }\n    if (this.borderRight) {\n      cloned.borderRight = this.borderRight.clone();\n    }\n    if (this.borderBottom) {\n      cloned.borderBottom = this.borderBottom.clone();\n    }\n    if (this.borderLeft) {\n      cloned.borderLeft = this.borderLeft.clone();\n    }\n    if (this.borderRadiusTop) {\n      cloned.borderRadiusTop = this.borderRadiusTop.clone();\n    }\n    if (this.borderRadiusRight) {\n      cloned.borderRadiusRight = this.borderRadiusRight.clone();\n    }\n    if (this.borderRadiusBottom) {\n      cloned.borderRadiusBottom = this.borderRadiusBottom.clone();\n    }\n    if (this.borderRadiusLeft) {\n      cloned.borderRadiusLeft = this.borderRadiusLeft.clone();\n    }\n    cloned.overflow = this.overflow;\n    cloned.compositeOperation = this.compositeOperation;\n    cloned.aspectRatio = this.aspectRatio;\n    cloned.filter = this.filter;\n    cloned.cursor = this.cursor;\n    cloned.pointerEvents = this.pointerEvents;\n    return cloned;\n  }\n\n  private fillSnapshotForAnimation(\n    target: XObject,\n    name: string,\n    to: string | number,\n    result: IAnimationStyleAttributes\n  ) {\n    const key = this.normalize(name);\n    switch (key) {\n      case 'scaleX':\n      case 'scaleY':\n      case 'alpha':\n      case 'rotation':\n      case 'skewX':\n      case 'skewY':\n      case 'aspectRatio':\n        const numberTo = typeof to === 'string' ? parseFloat(to) : to;\n        if (!isNaN(numberTo)) {\n          result[key] = {\n            from: this[key],\n            to: numberTo,\n            type: AnimationValueType.NUMBER\n          };\n        }\n        break;\n      case 'transformX':\n      case 'width':\n      case 'left':\n      case 'right':\n      case 'perspectiveOriginX': {\n        const tb = BaseValue.of(to);\n        const from: BaseValue = this[key] || BaseValue.of(0);\n        if (tb.unit === BaseValueUnit.PERCENTAGE) {\n          result[key] = {\n            from: from.toPercentage(target.getWidth()),\n            to: tb,\n            type: AnimationValueType.BASEVALUE\n          };\n        } else {\n          result[key] = {\n            from: from.toAbsolute(target.getWidth()),\n            to: tb,\n            type: AnimationValueType.BASEVALUE\n          };\n        }\n        break;\n      }\n      case 'transformY':\n      case 'height':\n      case 'top':\n      case 'bottom':\n      case 'perspectiveOriginY': {\n        const tb = BaseValue.of(to);\n        const from: BaseValue = this[key] || BaseValue.of(0);\n        if (tb.unit === BaseValueUnit.PERCENTAGE) {\n          result[key] = {\n            from: from.toPercentage(target.getHeight()),\n            to: tb,\n            type: AnimationValueType.BASEVALUE\n          };\n        } else {\n          result[key] = {\n            from: from.toAbsolute(target.getHeight()),\n            to: tb,\n            type: AnimationValueType.BASEVALUE\n          };\n        }\n        break;\n      }\n      case 'color': {\n        const color = Color.of(to + '');\n        if (color) {\n          result[key] = {\n            from: this[key],\n            to: color,\n            type: AnimationValueType.COLOR\n          };\n        }\n        break;\n      }\n      case 'backgroundColor': {\n        const color = Color.of(to + '');\n        if (color) {\n          result[key] = {\n            from: (this.background && this.background.color) || Color.WHITE,\n            to: color,\n            type: AnimationValueType.COLOR\n          };\n        }\n        break;\n      }\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'borderRadiusTop':\n      case 'borderRadiusRight':\n      case 'borderRadiusBottom':\n      case 'borderRadiusLeft':\n        result[key] = {\n          from: this[key],\n          to: BaseValue.of(to + ''),\n          type: AnimationValueType.BASEVALUE\n        };\n        break;\n      case 'padding':\n        this.fillSnapshotForAnimation(target, 'paddingTop', to, result);\n        this.fillSnapshotForAnimation(target, 'paddingRight', to, result);\n        this.fillSnapshotForAnimation(target, 'paddingBottom', to, result);\n        this.fillSnapshotForAnimation(target, 'paddingLeft', to, result);\n        break;\n      case 'margin':\n        this.fillSnapshotForAnimation(target, 'marginTop', to, result);\n        this.fillSnapshotForAnimation(target, 'marginRight', to, result);\n        this.fillSnapshotForAnimation(target, 'marginBottom', to, result);\n        this.fillSnapshotForAnimation(target, 'marginLeft', to, result);\n        break;\n      case 'perspectiveOrigin':\n        this.fillSnapshotForAnimation(target, 'perspectiveOriginX', to, result);\n        this.fillSnapshotForAnimation(target, 'perspectiveOriginY', to, result);\n        break;\n      case 'transform':\n        this.fillSnapshotForAnimation(target, 'transformX', to, result);\n        this.fillSnapshotForAnimation(target, 'transformY', to, result);\n        break;\n      case 'scale':\n        this.fillSnapshotForAnimation(target, 'scaleX', to, result);\n        this.fillSnapshotForAnimation(target, 'scaleY', to, result);\n        break;\n      case 'borderRadius':\n        this.fillSnapshotForAnimation(target, 'borderRadiusTop', to, result);\n        this.fillSnapshotForAnimation(target, 'borderRadiusRight', to, result);\n        this.fillSnapshotForAnimation(target, 'borderRadiusBottom', to, result);\n        this.fillSnapshotForAnimation(target, 'borderRadiusLeft', to, result);\n        break;\n      case 'borderLeft':\n      case 'borderRight':\n      case 'borderTop':\n      case 'borderBottom':\n      case 'textBorder':\n        result[key] = {\n          from: this[key] || Border.DEFAULT,\n          to: Border.of(to + '') || Border.DEFAULT,\n          type: AnimationValueType.BORDER\n        };\n        break;\n      case 'border':\n        this.fillSnapshotForAnimation(target, 'borderLeft', to, result);\n        this.fillSnapshotForAnimation(target, 'borderRight', to, result);\n        this.fillSnapshotForAnimation(target, 'borderTop', to, result);\n        this.fillSnapshotForAnimation(target, 'borderBottom', to, result);\n        break;\n      case 'shadow':\n      case 'textShadow':\n        result[key] = {\n          from: this[key] || new Shadow(0, 0, 0, Color.WHITE),\n          to: Shadow.of(to + '') || new Shadow(0, 0, 0, Color.WHITE),\n          type: AnimationValueType.SHADOW\n        };\n        break;\n      default:\n        console.warn('unsupported animation attribute:' + name);\n        break;\n    }\n  }\n\n  private static parse4Dirs(value: string): BaseValue[] | undefined {\n    const pieces = value.split(/\\s+/);\n    if (pieces.length === 1) {\n      return [\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[0])\n      ];\n    } else if (pieces.length === 2) {\n      return [\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[1]),\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[1])\n      ];\n    } else if (pieces.length === 3) {\n      return [\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[1]),\n        BaseValue.of(pieces[2]),\n        BaseValue.of(pieces[1])\n      ];\n    } else if (pieces.length === 4) {\n      return [\n        BaseValue.of(pieces[0]),\n        BaseValue.of(pieces[1]),\n        BaseValue.of(pieces[2]),\n        BaseValue.of(pieces[3])\n      ];\n    } else {\n      return undefined;\n    }\n  }\n\n  private normalize(key: string): string {\n    const pieces = key.split(/-/);\n    let normalized = '';\n    for (const piece of pieces) {\n      if (normalized === '') {\n        normalized = piece;\n      } else {\n        normalized += piece.substring(0, 1).toUpperCase() + piece.substring(1);\n      }\n    }\n    return normalized;\n  }\n}\n","/**\n * A class that can be used to compute the CRC-32 of an Uint8Array.\n */\nexport class CRC32 {\n  /**\n   * Lookup table.\n   */\n  static TABLE = new Uint32Array(256);\n\n  /**\n   * Initialize the lookup table.\n   */\n  static init() {\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let k = 0; k < 8; k++) {\n        // tslint:disable-next-line: no-bitwise\n        c = (c & 1) !== 0 ? 0xedb88320 ^ (c >>> 1) : c >>> 1;\n      }\n      this.TABLE[i] = c;\n    }\n  }\n\n  /**\n   * Calculate the CRC-32 checksum with the specified array of bytes.\n   * @param bytes the byte array to update the checksum with.\n   * @param start the start offset of the data.\n   * @param length the number of bytes to use for the update.\n   * @returns a number whose lowest 4 bytes presents CRC-32 checksum.\n   */\n  public static calculate(\n    bytes: Uint8Array,\n    start: number = 0,\n    length = bytes.length - start\n  ): number {\n    let crc = -1;\n    for (let i = start, l = start + length; i < l; i++) {\n      // tslint:disable-next-line: no-bitwise\n      crc = (crc >>> 8) ^ this.TABLE[(crc ^ bytes[i]) & 0xff];\n    }\n    // tslint:disable-next-line: no-bitwise\n    return crc ^ -1;\n  }\n}\n\nCRC32.init();\n","/**\n * A class that used to delay a function call, and it always cancel the pending call in case of new call come.\n *\n * Code example:\n *\n * Print a 'hello world' after 100ms.\n * ```typescript\n * const delay = new Delay(100);  // wait for 100ms.\n * delay.call(() => {\n *   console.log('hello world');\n * });\n * ```\n *\n * Print a 'hello world' once after 100ms, the first call will be cancelled.\n * ```typescript\n * const delay = new Delay(100);  // wait for 100ms.\n * delay.call(() => {\n *   console.log('hello world');\n * });\n * delay.call(() => {\n *   console.log('hello world');\n * });\n * ```\n *\n * Print a 'hello world' twice because the second call is after first one was invoked.\n * ```typescript\n * const delay = new Delay(100);  // wait for 100ms.\n * delay.call(() => {\n *   console.log('hello world');\n * });\n * setTimeout(() => {\n *   delay.call(() => {\n *     console.log('hello world');\n *   });\n * }, 200);\n * ```\n */\nexport class Delay {\n  /**\n   * The delay time, unit is ms.\n   */\n  private delayTime: number;\n  /**\n   * A timeout handler used to cancel the timeout for the new calls.\n   */\n  private delayHandler: any = 0;\n  /**\n   * The pending function call.\n   */\n  private func?: () => any;\n  /**\n   * True indicates that current delay calls is paused.\n   */\n  private paused: boolean = false;\n\n  /**\n   * Creates an instance of Delay.\n   * @param delayTime The delay time, unit is ms.\n   */\n  constructor(delayTime: number) {\n    this.delayTime = delayTime;\n  }\n\n  /**\n   * Set a new pending function call, cancel the current one if any and restart a new round of wait.\n   * @param func The new pending function call.\n   */\n  public call(func: () => any) {\n    this.func = func;\n    if (this.paused) {\n      return;\n    }\n    if (this.delayHandler) {\n      clearTimeout(this.delayHandler);\n      this.delayHandler = 0;\n    }\n    this.start();\n  }\n\n  /**\n   * Pause the current pending calls.\n   */\n  public pause() {\n    if (this.delayHandler) {\n      clearTimeout(this.delayHandler);\n      this.delayHandler = 0;\n    }\n    this.paused = true;\n  }\n\n  /**\n   * Resume the paused pending process.\n   */\n  public resume() {\n    if (this.paused) {\n      this.paused = false;\n      if (this.func) {\n        this.start();\n      }\n    }\n  }\n\n  /**\n   * Cancel the wait process and delete the pending function call if any.\n   */\n  public cancel() {\n    if (this.delayHandler) {\n      clearTimeout(this.delayHandler);\n      this.delayHandler = 0;\n    }\n    this.func = undefined;\n    this.paused = false;\n  }\n\n  /**\n   * If the pending function call is set, start the wait process.\n   */\n  private start() {\n    if (this.func) {\n      this.delayHandler = setTimeout(() => {\n        this.delayHandler = 0;\n        if (this.func) {\n          this.func();\n          this.func = undefined;\n        }\n      }, this.delayTime);\n    }\n  }\n}\n","import { Color } from '../base/Color';\nimport { RoundRect } from '../base/RoundRect';\nimport { XObject } from '../components/XObject';\nimport { Overflow } from '../style/Style';\n\n/**\n * A class contains static draw util methods.\n */\nexport class DrawUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Draws an element to canvas, it takes 3 steps:\n   *\n   * 1. Draw background (if any).\n   * 1. Draw border and calculate the clip.\n   * 1. Draw content.\n   *\n   * @param element The element to be drawn.\n   * @param ctx The rendering context of target canvas.\n   */\n  public static drawElement(element: XObject, ctx: CanvasRenderingContext2D) {\n    const style = element.style;\n    if (style.compositeOperation) {\n      ctx.globalCompositeOperation = style.compositeOperation;\n    }\n\n    // Step 1, caculate border.\n    const topWidth = style.borderTop ? style.borderTop.width : 0;\n    const rightWidth = style.borderRight ? style.borderRight.width : 0;\n    const bottomWidth = style.borderBottom ? style.borderBottom.width : 0;\n    const leftWidth = style.borderLeft ? style.borderLeft.width : 0;\n    const outerRect = new RoundRect()\n      .applySize(element.rect.width, element.rect.height)\n      .applyRadius(\n        style.borderRadiusTop,\n        style.borderRadiusRight,\n        style.borderRadiusBottom,\n        style.borderRadiusLeft\n      );\n    let innerRect: RoundRect;\n    if (topWidth > 0 || rightWidth > 0 || bottomWidth > 0 || leftWidth > 0) {\n      innerRect = outerRect.applyBorder(topWidth, rightWidth, bottomWidth, leftWidth);\n    } else {\n      innerRect = outerRect;\n    }\n\n    // Step 2, draw shadow.\n    if (style.shadow && style.shadow.isEnable()) {\n      ctx.save();\n      ctx.shadowBlur = style.shadow.blur;\n      ctx.shadowColor = style.shadow.color.toString();\n      ctx.shadowOffsetX = style.shadow.offsetX;\n      ctx.shadowOffsetY = style.shadow.offsetY;\n\n      const x = Math.abs(style.shadow.offsetX) + style.shadow.blur;\n      const y = Math.abs(style.shadow.offsetY) + style.shadow.blur;\n      const shadowRect = new RoundRect(\n        outerRect.x1 - x,\n        outerRect.y1 - y,\n        outerRect.x2 + x,\n        outerRect.y2 + y\n      );\n\n      ctx.beginPath();\n      shadowRect.makePath(ctx, true, true);\n      outerRect.makePath(ctx, false, false);\n      ctx.closePath();\n      ctx.clip();\n\n      ctx.fillStyle = 'black';\n      ctx.beginPath();\n      outerRect.makePath(ctx, true, true);\n      ctx.closePath();\n      ctx.fill();\n      ctx.restore();\n    }\n\n    // Step 3, draw background.\n    ctx.save();\n    element.drawBackground(ctx, outerRect, innerRect);\n    ctx.restore();\n\n    // Step 4, draw border\n    if (topWidth > 0 || rightWidth > 0 || bottomWidth > 0 || leftWidth > 0) {\n      const topColor = style.borderTop ? style.borderTop.color : undefined;\n      const rightColor = style.borderRight ? style.borderRight.color : undefined;\n      const bottomColor = style.borderBottom ? style.borderBottom.color : undefined;\n      const leftColor = style.borderLeft ? style.borderLeft.color : undefined;\n\n      const colors: Color[] = [];\n      if (topColor) {\n        colors.push(topColor);\n      }\n      if (rightColor) {\n        colors.push(rightColor);\n      }\n      if (bottomColor) {\n        colors.push(bottomColor);\n      }\n      if (leftColor) {\n        colors.push(leftColor);\n      }\n      const color = colors[0];\n      let sameColor = true;\n      for (let i = 1; i < colors.length; ++i) {\n        if (!color.equals(colors[i])) {\n          sameColor = false;\n        }\n      }\n\n      if (sameColor) {\n        ctx.beginPath();\n        outerRect.makePath(ctx, true, true);\n        innerRect.makePath(ctx, false, false);\n        ctx.closePath();\n        ctx.fillStyle = color.toString();\n        ctx.fill();\n      } else {\n        if (leftColor) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(outerRect.x1, outerRect.y1);\n          if (!topColor) {\n            ctx.lineTo(innerRect.x1 + innerRect.leftTopRadiusX, outerRect.y1);\n          }\n          ctx.lineTo(\n            innerRect.x1 + innerRect.leftTopRadiusX,\n            innerRect.y1 + innerRect.leftTopRadiusY\n          );\n          ctx.lineTo(\n            innerRect.x1 + innerRect.leftBottomRadiusX,\n            innerRect.y2 - innerRect.leftBottomRadiusY\n          );\n          if (!bottomColor) {\n            ctx.lineTo(innerRect.x1 + innerRect.leftBottomRadiusX, outerRect.y2);\n          }\n          ctx.lineTo(outerRect.x1, outerRect.y2);\n          ctx.closePath();\n          ctx.clip();\n\n          ctx.beginPath();\n          outerRect.makePath(ctx, true, true);\n          innerRect.makePath(ctx, false, false);\n          ctx.closePath();\n          ctx.fillStyle = leftColor.toString();\n          ctx.fill();\n          ctx.restore();\n        }\n        if (topColor) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(outerRect.x2, outerRect.y1);\n          if (!rightColor) {\n            ctx.lineTo(outerRect.x2, outerRect.y1 + outerRect.rightTopRadiusY);\n          }\n          ctx.lineTo(\n            innerRect.x2 - innerRect.rightTopRadiusX,\n            innerRect.y1 + innerRect.rightTopRadiusY\n          );\n          ctx.lineTo(\n            innerRect.x1 + innerRect.leftTopRadiusX,\n            innerRect.y1 + innerRect.leftTopRadiusY\n          );\n          if (!leftColor) {\n            ctx.lineTo(outerRect.x1, outerRect.y1 + outerRect.leftTopRadiusY);\n          }\n          ctx.lineTo(outerRect.x1, outerRect.y1);\n          ctx.closePath();\n          ctx.clip();\n\n          ctx.beginPath();\n          outerRect.makePath(ctx, true, true);\n          innerRect.makePath(ctx, false, false);\n          ctx.closePath();\n          ctx.fillStyle = topColor.toString();\n          ctx.fill();\n          ctx.restore();\n        }\n        if (rightColor) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(outerRect.x2, outerRect.y2);\n          if (!bottomColor) {\n            ctx.lineTo(outerRect.x2 - outerRect.rightBottomRadiusX, outerRect.y2);\n          }\n          ctx.lineTo(\n            innerRect.x2 - innerRect.rightBottomRadiusX,\n            innerRect.y2 - innerRect.rightBottomRadiusY\n          );\n          ctx.lineTo(\n            innerRect.x2 - innerRect.rightTopRadiusX,\n            innerRect.y1 + innerRect.rightTopRadiusY\n          );\n          if (!topColor) {\n            ctx.lineTo(innerRect.x2 - innerRect.rightTopRadiusX, outerRect.y1);\n          }\n          ctx.lineTo(outerRect.x2, outerRect.y1);\n          ctx.closePath();\n          ctx.clip();\n\n          ctx.beginPath();\n          outerRect.makePath(ctx, true, true);\n          innerRect.makePath(ctx, false, false);\n          ctx.closePath();\n          ctx.fillStyle = rightColor.toString();\n          ctx.fill();\n          ctx.restore();\n        }\n        if (bottomColor) {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(outerRect.x1, outerRect.y2);\n          if (!leftColor) {\n            ctx.lineTo(outerRect.x1, outerRect.y2 - outerRect.leftBottomRadiusY);\n          }\n          ctx.lineTo(\n            innerRect.x1 + innerRect.leftBottomRadiusX,\n            innerRect.y2 - innerRect.leftBottomRadiusY\n          );\n          ctx.lineTo(\n            innerRect.x2 - innerRect.rightBottomRadiusX,\n            innerRect.y2 - innerRect.rightBottomRadiusY\n          );\n          if (!rightColor) {\n            ctx.lineTo(outerRect.x2, outerRect.y2 - outerRect.rightBottomRadiusY);\n          }\n          ctx.lineTo(outerRect.x2, outerRect.y2);\n          ctx.closePath();\n          ctx.clip();\n\n          ctx.beginPath();\n          outerRect.makePath(ctx, true, true);\n          innerRect.makePath(ctx, false, false);\n          ctx.closePath();\n          ctx.fillStyle = bottomColor.toString();\n          ctx.fill();\n          ctx.restore();\n        }\n      }\n    }\n\n    // Step 6, draw content\n    if (element.style.overflow === Overflow.HIDDEN) {\n      ctx.save();\n      innerRect.clip(ctx);\n      element.drawContent(ctx);\n      ctx.restore();\n    } else {\n      element.drawContent(ctx);\n    }\n  }\n}\n","/**\n * A class contains static enum util methods.\n *\n * Code example:\n *\n * ```typescript\n * enum TestEnum {\n *   V1 = 'v1',\n *   V2 = 'v2'\n * }\n * EnumUtils.fromString(TestEnum, 'v1', TestEnum.V2);  // TestEnum.v1\n * EnumUtils.fromString(TestEnum, 'v', TestEnum.V2);  // TestEnum.v2\n * EnumUtils.fromStringOrUndefined(TestEnum, 'v');  // undefined\n * ```\n */\nexport class EnumUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Convert a string to an enum value of a give type.\n   * @param enumtype an enum type.\n   * @param value the string converted from.\n   * @param defaultValue if the string is not defined in this enum, return this as default value.\n   * @returns an enum value convert from the string or default value if string is not defined in this enum.\n   */\n  public static fromString<T>(enumtype: any, value: string, defaultValue: T): T {\n    for (const name in enumtype) {\n      if (enumtype[name] === value) {\n        return (value as unknown) as T;\n      }\n    }\n    return defaultValue;\n  }\n\n  /**\n   * Convert a string to an enum value of a give type.\n   * @param enumtype an enum type.\n   * @param value the string converted from.\n   * @returns an enum value convert from the string or undefined if string is not defined in this enum.\n   */\n  public static fromStringOrUndefined<T>(enumtype: any, value: string): T | undefined {\n    for (const name in enumtype) {\n      if (enumtype[name] === value) {\n        return (value as unknown) as T;\n      }\n    }\n    return undefined;\n  }\n}\n","import { XObject } from '../components/XObject';\nimport { BoxSizing } from '../style/Style';\n\n/**\n * A class contains static layout util methods.\n */\nexport class LayoutUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Update width/height according to parent size and element's style.\n   *\n   * @param element The element needs to update size.\n   * @param parentWidth Width of parent element.\n   * @param parentHeight Height of parent element.\n   */\n  public static updateSize(element: XObject, parentWidth: number, parentHeight: number) {\n    if (element.style.width && element.style.height) {\n      element.rect.width = element.style.width.getValue(parentWidth);\n      element.rect.height = element.style.height.getValue(parentHeight);\n    } else if (element.style.width) {\n      element.rect.width = element.style.width.getValue(parentWidth);\n      element.rect.height =\n        element.style.aspectRatio === undefined\n          ? 0\n          : element.rect.width / element.style.aspectRatio;\n    } else if (element.style.height) {\n      element.rect.height = element.style.height.getValue(parentHeight);\n      element.rect.width =\n        element.style.aspectRatio === undefined\n          ? 0\n          : element.rect.height * element.style.aspectRatio;\n    } else {\n      element.rect.height = element.rect.width = 0;\n    }\n\n    if (element.style.boxSizing === BoxSizing.CONTENT_BOX) {\n      element.rect.width +=\n        (element.style.paddingLeft ? element.style.paddingLeft.getValue(element.rect.width) : 0) +\n        (element.style.paddingRight ? element.style.paddingRight.getValue(element.rect.width) : 0) +\n        (element.style.borderLeft ? element.style.borderLeft.width : 0) +\n        (element.style.borderRight ? element.style.borderRight.width : 0);\n      element.rect.height +=\n        (element.style.paddingTop ? element.style.paddingTop.getValue(element.rect.height) : 0) +\n        (element.style.paddingBottom\n          ? element.style.paddingBottom.getValue(element.rect.height)\n          : 0) +\n        (element.style.borderTop ? element.style.borderTop.width : 0) +\n        (element.style.borderBottom ? element.style.borderBottom.width : 0);\n    }\n  }\n\n  /**\n   * Update width/height according to parent size and element's style.\n   *\n   * @param element The element needs to update size.\n   * @param parentWidth Width of parent element.\n   * @param parentHeight Height of parent element.\n   */\n  public static updatePositionForAbsoluteElement(\n    element: XObject,\n    parentWidth: number,\n    parentHeight: number\n  ) {\n    if (element.style.right) {\n      element.rect.x =\n        parentWidth -\n        element.rect.width -\n        element.style.right.getValue(parentWidth) -\n        (element.style.marginRight ? element.style.marginRight.getValue(parentWidth) : 0);\n    } else if (element.style.left) {\n      element.rect.x =\n        element.style.left.getValue(parentWidth) +\n        (element.style.marginLeft ? element.style.marginLeft.getValue(parentWidth) : 0);\n    } else {\n      element.rect.x = element.style.marginLeft\n        ? element.style.marginLeft.getValue(parentWidth)\n        : 0;\n    }\n\n    if (element.style.bottom) {\n      element.rect.y =\n        parentHeight -\n        element.rect.height -\n        element.style.bottom.getValue(parentHeight) -\n        (element.style.marginBottom ? element.style.marginBottom.getValue(parentHeight) : 0);\n    } else if (element.style.top) {\n      element.rect.y =\n        element.style.top.getValue(parentHeight) +\n        (element.style.marginTop ? element.style.marginTop.getValue(parentHeight) : 0);\n    } else {\n      element.rect.y = element.style.marginTop ? element.style.marginTop.getValue(parentHeight) : 0;\n    }\n  }\n}\n","/**\n * A class contains static string util methods.\n */\nexport class StringUtils {\n  /**\n   * Prevent creating instance.\n   */\n  private constructor() {}\n\n  /**\n   * Returns an list of all results matching a string against a regular expression, including capturing groups.\n   * @param str string used to be matched.\n   * @param regex Regular expression used to match the input string.\n   * @returns list of matched results.\n   */\n  public static matchAll(str: string, regex: RegExp): RegExpExecArray[] {\n    const result: RegExpExecArray[] = [];\n    const localCopy = new RegExp(\n      regex,\n      regex.flags.includes('g') ? regex.flags : regex.flags + 'g'\n    );\n    let match = localCopy.exec(str);\n    while (match) {\n      result.push(match);\n      match = localCopy.exec(str);\n    }\n    return result;\n  }\n}\n"],"sourceRoot":""}